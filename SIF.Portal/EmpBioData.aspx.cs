using System;
using System.Collections;
using System.Configuration;
using System.Data;
using System.Linq;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.HtmlControls;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Xml.Linq;
using KLTS.Data;
using System.IO;
using System.Globalization;
using iTextSharp.text;
using iTextSharp.text.pdf;
using System.Web.Script.Services;
using System.Data.SqlClient;
using System.Web.Script.Serialization;
using System.Web.Services;
using System.Collections.Generic;
using SIF.Portal.DAL;
namespace SIF.Portal
{
    public partial class EmpBioData : System.Web.UI.Page
    {
        DataTable dt;
        string EmpIDPrefix = "";
        string fontsyle = "verdana";
        string CmpIDPrefix = "";

        AppConfiguration config = new AppConfiguration();
        GridViewExportUtil gve = new GridViewExportUtil();
        protected void Page_Load(object sender, EventArgs e)
        {
            try
            {

                GetWebConfigdata();
                if (!IsPostBack)
                {
                    if (Session["UserId"] != null && Session["AccessLevel"] != null)
                    {
                        //PreviligeUsers(Convert.ToInt32(Session["AccessLevel"]));
                        string PID = Session["AccessLevel"].ToString();
                        // DisplayLinks(PID);
                        lblDisplayUser.Text = Session["UserId"].ToString();
                        lblcname.Text = SqlHelper.Instance.GetCompanyname();
                        switch (SqlHelper.Instance.GetCompanyValue())
                        {
                            case 0:// Write Omulance Invisible Links
                                break;
                            case 1://Write KLTS Invisible Links
                                ExpensesReportsLink.Visible = false;
                                break;
                            case 2://write Fames Link
                                ExpensesReportsLink.Visible = true;
                                break;


                            default:
                                break;
                        }


                    }
                    else
                    {
                        Response.Redirect("login.aspx");
                    }
                }
            }
            catch (Exception ex)
            {
                GoToLoginPage();
            }


        }



        public void GoToLoginPage()
        {
            ScriptManager.RegisterStartupScript(this, GetType(), "show alert", "alert('Your Session Expired.Please Login');", true);
            Response.Redirect("~/login.aspx");
        }

        protected void GetWebConfigdata()
        {
            EmpIDPrefix = Session["EmpIDPrefix"].ToString();
            CmpIDPrefix = Session["CmpIDPrefix"].ToString();
        }


        protected void btnBioData_Click(object sender, EventArgs e)
        {
            int Fontsize = 10;
            string fontsyle = "calibri";

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prTown = "";
            string prPostOffice = "";
            string prTaluka = "";
            string prPoliceStation = "";
            string prcity = "";
            string prLmark = "";
            string prPincode = "";
            string prState = "";


            string peTown = "";
            string pePostOffice = "";
            string peTaluka = "";
            string pePoliceStation = "";
            string pecity = "";
            string pelmark = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";


            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";



            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";

            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion

            string QueryCompanyInfo = "select * from companyinfo";
            DataTable DtCompanyInfo = config.ExecuteAdaptorAsyncWithQueryParams(QueryCompanyInfo).Result;

            string CompanyName = "";
            string Address = "";

            if (DtCompanyInfo.Rows.Count > 0)
            {
                CompanyName = DtCompanyInfo.Rows[0]["CompanyName"].ToString();
                Address = DtCompanyInfo.Rows[0]["Address"].ToString();


            }


            string BranchDetails = "select * from branchdetails";
            DataTable dtBranchDetails = config.ExecuteAdaptorAsyncWithQueryParams(BranchDetails).Result;
            string Branchname = "";

            if (dtBranchDetails.Rows.Count > 0)
            {
                Branchname = dtBranchDetails.Rows[0]["Branchname"].ToString();
            }


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Father' ";
            DataTable dtfather = config.ExecuteAdaptorAsyncWithQueryParams(query).Result;

            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }
            string query1 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Mother' ";
            DataTable dtmother = config.ExecuteAdaptorAsyncWithQueryParams(query1).Result;

            if (dtmother.Rows.Count > 0)
            {
                Mname = dtmother.Rows[0]["RName"].ToString();
                Mage = dtmother.Rows[0]["age"].ToString();
                if (Mage == "0")
                {
                    Mage = "";
                }
                else
                {
                    Mage = dtfather.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select EmpESINo from EmpESICodes where Empid='" + txtEmpid.Text + "'  ";
            DataTable dtesi = config.ExecuteAdaptorAsyncWithQueryParams(query2).Result;
            if (dtesi.Rows.Count > 0)
            {
                Esino = dtesi.Rows[0]["EmpESINo"].ToString();

            }



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "EmpBiodataPDF";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string Gender = "";

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();



                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();




                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prTown = dtEmpdetails.Rows[0]["prTown"].ToString();
                prPostOffice = dtEmpdetails.Rows[0]["prPostOffice"].ToString();
                prTaluka = dtEmpdetails.Rows[0]["prTaluka"].ToString();
                prPoliceStation = dtEmpdetails.Rows[0]["prPoliceStation"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();

                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peTown = dtEmpdetails.Rows[0]["peTown"].ToString();
                pePostOffice = dtEmpdetails.Rows[0]["pePostOffice"].ToString();
                peTaluka = dtEmpdetails.Rows[0]["peTaluka"].ToString();
                pePoliceStation = dtEmpdetails.Rows[0]["pePoliceStation"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                // pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Image1 = "";

                if (dtEmpdetails.Rows[0]["Image"].ToString() != "")
                {
                    Image1 = dtEmpdetails.Rows[0]["Image"].ToString();
                }
                else
                {

                }


                #endregion

                MemoryStream ms = new MemoryStream();
                Document document = new Document(PageSize.LEGAL);
                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");


                #region Headings of the Pdf



                PdfPTable table = new PdfPTable(6);
                table.TotalWidth = 500f;
                table.LockedWidth = true;
                float[] width = new float[] { 1.5f, 2f, 2f, 2f, 1.5f, 2f };
                table.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 6;
                cellspace.Border = 0;
                cellspace.PaddingTop = -5;


                PdfPCell celllogoHead = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                celllogoHead.HorizontalAlignment = 2;
                celllogoHead.Colspan = 3;
                celllogoHead.Border = 0;
                table.AddCell(celllogoHead);

                PdfPCell cellHead = new PdfPCell(new Phrase("DECLARATION FORM", FontFactory.GetFont(fontsyle, Fontsize + 2, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 1;
                cellHead.Colspan = 6;
                cellHead.Border = 0;
                cellHead.PaddingLeft = -250;
                table.AddCell(cellHead);

                PdfPCell cellHead2 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellHead2.HorizontalAlignment = 1;
                cellHead2.Colspan = 6;
                cellHead2.Border = 0;
                table.AddCell(cellHead2);

                PdfPCell cellHead4 = new PdfPCell(new Phrase("To be filled in the employee after reading instructions overleaf. Two postcard size photographs are to be attached this form.This form is free of cost", FontFactory.GetFont(fontsyle, 10, Font.NORMAL, BaseColor.BLACK)));
                cellHead4.HorizontalAlignment = 0;
                cellHead4.Colspan = 6;
                cellHead4.Border = 0;
                cellHead4.SetLeading(0f, 1.2f);
                table.AddCell(cellHead4);
                table.AddCell(cellspace);

                PdfPCell cellHead5 = new PdfPCell(new Phrase("A) INSURED PERSON'S PARTICULARS", FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellHead5.HorizontalAlignment = 0;
                cellHead5.Colspan = 6;
                cellHead5.Border = 0;
                table.AddCell(cellHead5);
                table.AddCell(cellspace);

                document.Add(table);

                #endregion


                #region Basic Information of the Employee

                PdfPTable table2 = new PdfPTable(6);
                table2.TotalWidth = 500f;
                table2.LockedWidth = true;
                float[] width1 = new float[] { 5f, 1.5f, 2f, 2f, 1.5f, 2f };
                table2.SetWidths(width1);

                PdfPCell cellInsuranceno2 = new PdfPCell(new Phrase("1  Insurance No. ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellInsuranceno2.HorizontalAlignment = 0;
                cellInsuranceno2.Colspan = 0;
                cellInsuranceno2.Border = 0;
                cellInsuranceno2.PaddingTop = 5;
                table2.AddCell(cellInsuranceno2);

                PdfPCell cellInsuranceno4 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellInsuranceno4.HorizontalAlignment = 0;
                cellInsuranceno4.Colspan = 0;
                cellInsuranceno4.Border = 0;
                cellInsuranceno4.PaddingTop = 5;
                table2.AddCell(cellInsuranceno4);

                PdfPCell cellInsuranceno3 = new PdfPCell(new Phrase(Esino, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellInsuranceno3.HorizontalAlignment = 0;
                cellInsuranceno3.Colspan = 3;
                cellInsuranceno3.Border = 0;
                cellInsuranceno3.PaddingTop = 5;
                table2.AddCell(cellInsuranceno3);


                PdfPCell cellspace4 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellspace4.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace4.Colspan = 1;
                cellspace4.Border = 0;
                table2.AddCell(cellspace4);

                PdfPCell cellname2 = new PdfPCell(new Phrase("2  Name", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellname2.HorizontalAlignment = 0;
                cellname2.Colspan = 0;
                cellname2.Border = 0;
                cellname2.PaddingTop = 5;
                table2.AddCell(cellname2);

                PdfPCell cellname4 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellname4.HorizontalAlignment = 0;
                cellname4.Colspan = 0;
                cellname4.Border = 0;
                cellname4.PaddingTop = 5;
                table2.AddCell(cellname4);

                PdfPCell cellname3 = new PdfPCell(new Phrase(name, FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellname3.HorizontalAlignment = 0;
                cellname3.Colspan = 3;
                cellname3.Border = 0;
                cellname3.PaddingTop = 5;
                table2.AddCell(cellname3);

                table2.AddCell(cellspace4);

                PdfPCell cellfather = new PdfPCell(new Phrase("3  Father / Husband's Name  ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellfather.HorizontalAlignment = 0;
                cellfather.Colspan = 0;
                cellfather.Border = 0;
                cellfather.PaddingTop = 5;
                table2.AddCell(cellfather);


                PdfPCell cellfather1 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellfather1.HorizontalAlignment = 0;
                cellfather1.Colspan = 0;
                cellfather1.Border = 0;
                cellfather1.PaddingTop = 5;
                table2.AddCell(cellfather1);


                PdfPCell cellfather3 = new PdfPCell(new Phrase(fathername, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellfather3.HorizontalAlignment = 0;
                cellfather3.Colspan = 3;
                cellfather3.Border = 0;
                cellfather3.PaddingTop = 5;
                table2.AddCell(cellfather3);

                table2.AddCell(cellspace4);

                PdfPCell cellDateofbirth = new PdfPCell(new Phrase("4  Date of Birth & Sex ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellDateofbirth.HorizontalAlignment = 0;
                cellDateofbirth.Colspan = 0;
                cellDateofbirth.Border = 0;
                cellDateofbirth.PaddingTop = 5;
                table2.AddCell(cellDateofbirth);

                PdfPCell cellDateofbirth2 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellDateofbirth2.HorizontalAlignment = 0;
                cellDateofbirth2.Colspan = 0;
                cellDateofbirth2.Border = 0;
                cellDateofbirth2.PaddingTop = 5;
                table2.AddCell(cellDateofbirth2);

                string value = "";
                if (dateofbirth.Length > 0)
                {
                    value = dateofbirth + " / " + Gender;

                }
                else
                {
                    value = Gender;
                }

                PdfPCell cellDateofbirth1 = new PdfPCell(new Phrase(dateofbirth, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellDateofbirth1.HorizontalAlignment = 0;
                cellDateofbirth1.Colspan = 3;
                cellDateofbirth1.Border = 0;
                cellDateofbirth1.PaddingTop = 5;
                table2.AddCell(cellDateofbirth1);

                table2.AddCell(cellspace4);

                PdfPCell Maritalstatus = new PdfPCell(new Phrase("5  Marital status", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                Maritalstatus.HorizontalAlignment = 0;
                Maritalstatus.Colspan = 0;
                Maritalstatus.Border = 0;
                Maritalstatus.PaddingTop = 5;
                table2.AddCell(Maritalstatus);

                PdfPCell Maritalstatus2 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                Maritalstatus2.HorizontalAlignment = 0;
                Maritalstatus2.Colspan = 0;
                Maritalstatus2.Border = 0;
                Maritalstatus2.PaddingTop = 5;
                table2.AddCell(Maritalstatus2);


                PdfPCell Maritalstatus1 = new PdfPCell(new Phrase(maritalstatus, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                Maritalstatus1.HorizontalAlignment = 0;
                Maritalstatus1.Colspan = 3;
                Maritalstatus1.Border = 0;
                Maritalstatus1.PaddingTop = 5;
                Maritalstatus1.PaddingRight = -10;
                table2.AddCell(Maritalstatus1);

                table2.AddCell(cellspace4);

                document.Add(table2);

                #region Employee Addresses



                PdfPTable tbldata2 = new PdfPTable(3);
                tbldata2.TotalWidth = 500f;
                tbldata2.LockedWidth = true;
                float[] widthdata2 = new float[] { 5f, 1.5f, 5f };

                PdfPCell data2space = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontsyle, 8, Font.NORMAL, BaseColor.BLACK)));
                data2space.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                data2space.Colspan = 3;
                data2space.Border = 0;
                //tbldata2.AddCell(data2space);
                //tbldata2.AddCell(data2space);
                //tbldata2.AddCell(data2space);

                PdfPCell cellPresentaddr = new PdfPCell(new Phrase("6  Permanent Address", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellPresentaddr.HorizontalAlignment = 0;
                cellPresentaddr.Colspan = 0;
                cellPresentaddr.Border = 0;
                cellPresentaddr.PaddingTop = 5;
                tbldata2.AddCell(cellPresentaddr);

                PdfPCell cellPresentaddrcol = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellPresentaddrcol.HorizontalAlignment = 0;
                cellPresentaddrcol.Colspan = 0;
                cellPresentaddrcol.Border = 0;
                cellPresentaddrcol.PaddingTop = 5;
                cellPresentaddrcol.PaddingLeft = 14;
                tbldata2.AddCell(cellPresentaddrcol);




                #region permanent address String array

                string[] PeAdress = new string[8];

                if (pelmark.Length > 0)
                {
                    PeAdress[0] = pelmark + ", ";
                }
                else
                {
                    PeAdress[0] = "";
                }
                if (peTown.Length > 0)
                {
                    PeAdress[1] = peTown + ", ";
                }
                else
                {
                    PeAdress[1] = "";
                }

                if (pePostOffice.Length > 0)
                {
                    PeAdress[2] = pePostOffice + ", ";
                }
                else
                {
                    PeAdress[2] = "";
                }
                if (peTaluka.Length > 0)
                {
                    PeAdress[3] = peTaluka + ", ";
                }
                else
                {
                    PeAdress[3] = " ";
                }
                if (pePoliceStation.Length > 0)
                {
                    PeAdress[4] = pePoliceStation + ", ";
                }
                else
                {
                    PeAdress[4] = " ";
                }
                if (pecity.Length > 0)
                {
                    PeAdress[5] = pecity + ", ";
                }
                else
                {
                    PeAdress[5] = " ";
                }

                if (peState.Length > 0)
                {
                    PeAdress[6] = peState + " ";
                }
                else
                {
                    PeAdress[6] = ".";
                }


                if (pePincode.Length > 0)
                {
                    PeAdress[7] = " -" + pePincode + ".";
                }
                else
                {
                    PeAdress[7] = "";
                }

                string Address2 = string.Empty;

                for (int i = 0; i < 8; i++)
                {
                    Address2 += PeAdress[i];
                }


                #endregion

                PdfPCell cellPresentaddr1 = new PdfPCell(new Phrase(Address2.TrimStart(), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellPresentaddr1.HorizontalAlignment = 0;
                cellPresentaddr1.Colspan = 0;
                cellPresentaddr1.Border = 0;
                cellPresentaddr1.PaddingTop = 5;
                cellPresentaddr1.PaddingLeft = -98;
                tbldata2.AddCell(cellPresentaddr1);


                tbldata2.AddCell(data2space);



                PdfPCell cellPerminentaddr = new PdfPCell(new Phrase("7  Present Address", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellPerminentaddr.HorizontalAlignment = 0;
                cellPerminentaddr.Colspan = 0;
                cellPerminentaddr.Border = 0;
                cellPerminentaddr.PaddingTop = 5;
                //cellPerminentaddr.PaddingLeft = -3;
                tbldata2.AddCell(cellPerminentaddr);

                PdfPCell cellPerminentaddrcol = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellPerminentaddrcol.HorizontalAlignment = 0;
                cellPerminentaddrcol.Colspan = 0;
                cellPerminentaddrcol.Border = 0;
                cellPerminentaddrcol.PaddingTop = 5;
                cellPerminentaddrcol.PaddingLeft = 14;
                //cellPerminentaddr.PaddingLeft = -3;
                tbldata2.AddCell(cellPerminentaddrcol);

                #region Present address String array

                string[] PrAdress = new string[8];
                if (prLmark.Length > 0)
                {
                    PrAdress[0] = prLmark + ", ";
                }
                else
                {
                    PrAdress[0] = "";
                }
                if (prTown.Length > 0)
                {
                    PrAdress[1] = prTown + ", ";
                }
                else
                {
                    PrAdress[1] = "";
                }

                if (prPostOffice.Length > 0)
                {
                    PrAdress[2] = prPostOffice + ", ";
                }
                else
                {
                    PrAdress[2] = "";
                }
                if (prTaluka.Length > 0)
                {
                    PrAdress[3] = prTaluka + ", ";
                }
                else
                {
                    PrAdress[3] = "";
                }
                if (prPoliceStation.Length > 0)
                {
                    PrAdress[4] = prPoliceStation + ", ";
                }
                else
                {
                    PrAdress[4] = "";
                }
                if (prcity.Length > 0)
                {
                    PrAdress[5] = prcity + ", ";
                }
                else
                {
                    PrAdress[5] = "";
                }

                if (prState.Length > 0)
                {
                    PrAdress[6] = prState + " ";
                }
                else
                {
                    PrAdress[6] = ".";
                }


                if (prPincode.Length > 0)
                {
                    PrAdress[7] = " -" + prPincode + ".";
                }
                else
                {
                    PrAdress[7] = "";
                }

                string Address1 = string.Empty;

                for (int i = 0; i < 8; i++)
                {
                    Address1 += PrAdress[i];
                }


                #endregion

                PdfPCell cellPerminentaddr1 = new PdfPCell(new Phrase(Address1.TrimStart(), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellPerminentaddr1.HorizontalAlignment = 0;
                cellPerminentaddr1.Colspan = 0;
                cellPerminentaddr1.Border = 0;
                cellPerminentaddr1.PaddingTop = 5;
                cellPerminentaddr1.PaddingLeft = -98;
                tbldata2.AddCell(cellPerminentaddr1);

                PdfPCell cellBranchOffice = new PdfPCell(new Phrase("8  Branch Office / Dispensary", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellBranchOffice.HorizontalAlignment = 0;
                cellBranchOffice.Colspan = 0;
                cellBranchOffice.Border = 0;
                cellBranchOffice.PaddingTop = 5;
                tbldata2.AddCell(cellBranchOffice);

                PdfPCell cellBranchOfficecol = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellBranchOfficecol.HorizontalAlignment = 0;
                cellBranchOfficecol.Colspan = 0;
                cellBranchOfficecol.Border = 0;
                cellBranchOfficecol.PaddingTop = 5;
                cellBranchOfficecol.PaddingLeft = 14;
                tbldata2.AddCell(cellBranchOfficecol);


                PdfPCell cellBranchOffice1 = new PdfPCell(new Phrase(Branchname, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellBranchOffice1.HorizontalAlignment = 0;
                cellBranchOffice1.Colspan = 0;
                cellBranchOffice1.Border = 0;
                cellBranchOffice1.PaddingTop = 5;
                cellBranchOffice1.PaddingLeft = -98;
                tbldata2.AddCell(cellBranchOffice1);

                tbldata2.AddCell(data2space);

                document.Add(tbldata2);

                #endregion

                PdfPTable table3 = new PdfPTable(6);
                table3.TotalWidth = 500f;
                table3.LockedWidth = true;
                float[] width2 = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                table3.SetWidths(width2);



                PdfPCell cellphyst = new PdfPCell(new Phrase("B) EMPLOYER'S PARTICULARS   ", FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellphyst.HorizontalAlignment = 0;
                cellphyst.Colspan = 6;
                cellphyst.Border = 0;
                cellphyst.PaddingTop = 3;
                cellphyst.PaddingLeft = -3;
                table3.AddCell(cellphyst);




                document.Add(table3);


                PdfPTable data1 = new PdfPTable(3);
                data1.TotalWidth = 500f;
                data1.LockedWidth = true;
                float[] widthdate = new float[] { 5f, 1.5f, 5f };
                data1.SetWidths(widthdate);



                PdfPCell celldata15 = new PdfPCell(new Phrase("9  Employer's Code No. ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldata15.HorizontalAlignment = 0;
                celldata15.Colspan = 0;
                celldata15.Border = 0;
                celldata15.PaddingTop = 5;
                data1.AddCell(celldata15);

                PdfPCell celldatacol = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldatacol.HorizontalAlignment = 0;
                celldatacol.Colspan = 0;
                celldatacol.Border = 0;
                celldatacol.PaddingTop = 5;
                celldatacol.PaddingLeft = -35;
                data1.AddCell(celldatacol);


                PdfPCell celldataid = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldataid.HorizontalAlignment = 0;
                celldataid.Colspan = 0;
                celldataid.Border = 0;
                celldataid.PaddingTop = 5;
                celldataid.PaddingLeft = -45;
                data1.AddCell(celldataid);


                PdfPCell cellAppointment = new PdfPCell(new Phrase("10  Date of Appointment ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellAppointment.HorizontalAlignment = 0;
                cellAppointment.Colspan = 0;
                cellAppointment.Border = 0;
                cellAppointment.PaddingTop = 5;
                cellAppointment.PaddingLeft = -3;
                data1.AddCell(cellAppointment);

                PdfPCell cellAppointment2 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellAppointment2.HorizontalAlignment = 0;
                cellAppointment2.Colspan = 0;
                cellAppointment2.Border = 0;
                cellAppointment2.PaddingTop = 5;
                cellAppointment2.PaddingLeft = -35;
                data1.AddCell(cellAppointment2);


                PdfPCell cellAppointment1 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellAppointment1.HorizontalAlignment = 0;
                cellAppointment1.Colspan = 0;
                cellAppointment1.Border = 0;
                cellAppointment1.PaddingTop = 5;
                cellAppointment1.PaddingLeft = -45;
                data1.AddCell(cellAppointment1);


                PdfPCell cellNameadd = new PdfPCell(new Phrase("11  Name & Address of the Employer", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNameadd.HorizontalAlignment = 0;
                cellNameadd.Colspan = 0;
                cellNameadd.Border = 0;
                cellNameadd.PaddingTop = 5;
                cellNameadd.PaddingLeft = -3;
                data1.AddCell(cellNameadd);

                PdfPCell cellNameadd2 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNameadd2.HorizontalAlignment = 0;
                cellNameadd2.Colspan = 0;
                cellNameadd2.Border = 0;
                cellNameadd2.PaddingTop = 5;
                cellNameadd2.PaddingLeft = -35;
                data1.AddCell(cellNameadd2);


                PdfPCell cellNameadd1 = new PdfPCell(new Phrase(CompanyName + "\n" + Address, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNameadd1.HorizontalAlignment = 0;
                cellNameadd1.Colspan = 0;
                cellNameadd1.Border = 0;
                cellNameadd1.PaddingTop = 5;
                cellNameadd1.PaddingLeft = -45;
                data1.AddCell(cellNameadd1);




                document.Add(data1);



                #endregion

                PdfPTable data4 = new PdfPTable(2);
                data4.TotalWidth = 500f;
                data4.LockedWidth = true;
                float[] widthdate4 = new float[] { 2f, 1f };
                data4.SetWidths(widthdate4);

                PdfPCell cellempty = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty.HorizontalAlignment = 0;
                cellempty.Colspan = 2;
                cellempty.Border = 0;
                cellempty.PaddingTop = 5;


                PdfPCell celldataref = new PdfPCell(new Phrase("12  In case of any previous employment please fill up the details as under", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldataref.HorizontalAlignment = 0;
                celldataref.Colspan = 6;
                celldataref.Border = 0;
                celldataref.PaddingTop = 5;
                celldataref.PaddingLeft = -3;
                data4.AddCell(celldataref);

                document.Add(data4);



                #region Employee Reference Details



                PdfPTable tblReferences = new PdfPTable(4);
                tblReferences.TotalWidth = 500f;
                tblReferences.LockedWidth = true;
                float[] widthRef = new float[] { 2f, 2f, 2f, 2f };
                tblReferences.SetWidths(widthRef);

                PdfPCell Refspace = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontsyle, 8, Font.NORMAL, BaseColor.BLACK)));
                Refspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                Refspace.Colspan = 4;
                Refspace.Border = 0;




                PdfPCell celldata26 = new PdfPCell(new Phrase("a) Previous ins No. ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldata26.HorizontalAlignment = 0;
                celldata26.Colspan = 4;
                celldata26.Border = 0;
                celldata26.PaddingTop = 5;
                celldata26.PaddingLeft = 20;
                tblReferences.AddCell(celldata26);

                PdfPCell celldata28 = new PdfPCell(new Phrase("b) Empir's Code No.", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldata28.HorizontalAlignment = 0;
                celldata28.Colspan = 4;
                celldata28.Border = 0;
                celldata28.PaddingTop = 5;
                celldata28.PaddingLeft = 20;
                tblReferences.AddCell(celldata28);


                PdfPCell cellnameemp = new PdfPCell(new Phrase("c) Name & address of the Employer", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellnameemp.HorizontalAlignment = 0;
                cellnameemp.Colspan = 4;
                cellnameemp.Border = 0;
                cellnameemp.PaddingTop = 5;
                cellnameemp.PaddingLeft = 20;
                tblReferences.AddCell(cellnameemp);

                tblReferences.AddCell(Refspace);

                PdfPCell celldetaisnominee = new PdfPCell(new Phrase("C)Details of Nominees U/S 71 ESI Act 1948/Rule56(2) of ESI(Central) Rules, 1950 for payment of cash benefit in the event of death)", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                celldetaisnominee.HorizontalAlignment = 0;
                celldetaisnominee.Colspan = 6;
                celldetaisnominee.Border = 0;
                celldetaisnominee.PaddingTop = 5;
                celldetaisnominee.PaddingLeft = -3;
                tblReferences.AddCell(celldetaisnominee);

                PdfPCell cellnamedata = new PdfPCell(new Phrase("Name :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellnamedata.HorizontalAlignment = 0;
                cellnamedata.Colspan = 4;
                cellnamedata.Border = 0;
                cellnamedata.PaddingTop = 5;
                cellnamedata.PaddingLeft = 20;
                tblReferences.AddCell(cellnamedata);


                PdfPCell cellRelationship = new PdfPCell(new Phrase("Relationship :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellRelationship.HorizontalAlignment = 0;
                cellRelationship.Colspan = 4;
                cellRelationship.Border = 0;
                cellRelationship.PaddingTop = 5;
                cellRelationship.PaddingLeft = 20;
                tblReferences.AddCell(cellRelationship);

                PdfPCell cellAddress = new PdfPCell(new Phrase("Address :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellAddress.HorizontalAlignment = 0;
                cellAddress.Colspan = 4;
                cellAddress.Border = 0;
                cellAddress.PaddingLeft = 20;
                cellAddress.PaddingTop = 5;
                tblReferences.AddCell(cellAddress);

                tblReferences.AddCell(Refspace);


                #endregion

                document.Add(tblReferences);


                PdfPTable tblReference = new PdfPTable(6);
                tblReference.TotalWidth = 500f;
                tblReference.LockedWidth = true;
                float[] widths1 = new float[] { 2.2f, 2f, 2f, 2f, 2.5f, 2.5f };
                tblReference.SetWidths(widths1);

                PdfPCell Refcspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                Refcspace.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                Refcspace.Colspan = 6;
                Refcspace.Border = 0;
                //tblReference.AddCell(Refcspace);



                PdfPCell cellPARTICULARS = new PdfPCell(new Phrase("D) FAMILY PARTICULARS OF INSURED PERSON ", FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellPARTICULARS.HorizontalAlignment = 0;
                cellPARTICULARS.Colspan = 6;
                cellPARTICULARS.Border = 0;
                cellPARTICULARS.PaddingLeft = 0;
                cellPARTICULARS.PaddingTop = 5;
                tblReference.AddCell(cellPARTICULARS);



                PdfPCell cnamec = new PdfPCell(new Phrase("Sl.No.  ", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cnamec.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                cnamec.BorderWidthLeft = 0;
                cnamec.BorderWidthRight = 0;
                cnamec.BorderWidthTop = 0.5f;
                cnamec.BorderWidthBottom = 0.8f;
                tblReference.AddCell(cnamec);

                PdfPCell caddressc = new PdfPCell(new Phrase("Name", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                caddressc.HorizontalAlignment = 0;//0=Left, 1=Centre, 2=Right
                caddressc.BorderWidthLeft = 0;
                caddressc.BorderWidthRight = 0;
                caddressc.BorderWidthTop = 0.5f;
                caddressc.BorderWidthBottom = 0.8f;
                tblReference.AddCell(caddressc);

                PdfPCell crelationshipc = new PdfPCell(new Phrase("Date of birth/Age as on date of filling form", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                crelationshipc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                crelationshipc.BorderWidthLeft = 0;
                crelationshipc.BorderWidthRight = 0;
                crelationshipc.BorderWidthTop = 0.5f;
                crelationshipc.BorderWidthBottom = 0.8f;
                tblReference.AddCell(crelationshipc);

                PdfPCell cdobc = new PdfPCell(new Phrase("Relationship with the Employee", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cdobc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                cdobc.BorderWidthLeft = 0;
                cdobc.BorderWidthRight = 0;
                cdobc.BorderWidthTop = 0.8f;
                cdobc.BorderWidthBottom = 0.6f;
                tblReference.AddCell(cdobc);

                PdfPCell camtc = new PdfPCell(new Phrase("Whether residing With", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                camtc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                camtc.BorderWidthLeft = 0;
                camtc.BorderWidthRight = 0;
                camtc.BorderWidthTop = 0.5f;
                camtc.BorderWidthBottom = 0.8f;
                tblReference.AddCell(camtc);

                PdfPCell cminorc = new PdfPCell(new Phrase("if No,state place of residence", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cminorc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                cminorc.BorderWidthLeft = 0;
                cminorc.BorderWidthRight = 0;
                cminorc.BorderWidthTop = 0.5f;
                cminorc.BorderWidthBottom = 0.8f;
                tblReference.AddCell(cminorc);

                tblReference.AddCell(Refcspace);
                tblReference.AddCell(Refcspace);
                tblReferences.AddCell(Refcspace);
                tblReference.AddCell(Refcspace);
                tblReference.AddCell(Refcspace);
                tblReference.AddCell(Refcspace);
                tblReference.AddCell(Refcspace);
                tblReference.AddCell(Refcspace);





                PdfPCell cpt1c = new PdfPCell(new Phrase("ESI Corporation Temporary identity card", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cpt1c.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                cpt1c.Colspan = 6;
                cpt1c.Border = 0;
                tblReference.AddCell(cpt1c);

                PdfPCell cpt2c = new PdfPCell(new Phrase("Name ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cpt2c.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                cpt2c.Colspan = 6;
                cpt2c.Border = 0;
                tblReference.AddCell(cpt2c);

                PdfPCell Ins = new PdfPCell(new Phrase("Ins No.", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                Ins.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                Ins.Colspan = 6;
                Ins.Border = 0;
                tblReference.AddCell(Ins);

                PdfPCell Appointment = new PdfPCell(new Phrase("Date of Appointment ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                Appointment.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                Appointment.Colspan = 6;
                Appointment.Border = 0;
                tblReference.AddCell(Appointment);

                PdfPCell Branch = new PdfPCell(new Phrase("Branch Office", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                Branch.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                Branch.Colspan = 6;
                Branch.Border = 0;
                tblReference.AddCell(Branch);

                PdfPCell Dispensary = new PdfPCell(new Phrase("Dispensary ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                Dispensary.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                Dispensary.Colspan = 6;
                Dispensary.Border = 0;
                tblReference.AddCell(Dispensary);



                PdfPCell code = new PdfPCell(new Phrase("Employer's code No & Address", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                code.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                code.Colspan = 6;
                code.Border = 0;
                tblReference.AddCell(code);

                PdfPCell Validity = new PdfPCell(new Phrase("Validity", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                Validity.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                Validity.Colspan = 6;
                Validity.Border = 0;
                tblReference.AddCell(Validity);


                PdfPCell date1 = new PdfPCell(new Phrase("Date", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                date1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                date1.Colspan = 6;
                date1.Border = 0;
                tblReference.AddCell(date1);

                tblReference.AddCell(Refcspace);


                PdfPCell cellsign = new PdfPCell(new Phrase("    Signature of T.I Of I.P   ", FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsign.HorizontalAlignment = 0;
                cellsign.Colspan = 3;
                cellsign.Border = 0;
                cellsign.PaddingTop = 5;
                cellsign.PaddingLeft = 50;
                tblReference.AddCell(cellsign);


                PdfPCell cellrecrutment = new PdfPCell(new Phrase("Signature of B.M. With Seal  ", FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellrecrutment.HorizontalAlignment = 0;
                cellrecrutment.Colspan = 3;
                cellrecrutment.Border = 0;
                cellrecrutment.PaddingTop = 5;
                cellrecrutment.PaddingLeft = 50;
                tblReference.AddCell(cellrecrutment);


                document.Add(tblReference);

                document.NewPage();


                #region Employee Refer Details



                PdfPTable tblRefer = new PdfPTable(2);
                tblRefer.TotalWidth = 500f;
                tblRefer.LockedWidth = true;
                float[] widthRefer = new float[] { 5f, 5f };
                tblRefer.SetWidths(widthRefer);

                PdfPCell Referspace = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontsyle, 8, Font.BOLD, BaseColor.BLACK)));
                Referspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                Referspace.Colspan = 4;
                Referspace.Border = 0;

                PdfPCell celldeclare = new PdfPCell(new Phrase("I declare that my dependent parents income from all sources is 1) Father's income Rs................... (2) Mother's income Rs.................... Total Rs................(Rupees.............................................) and he/she/they,is /are Wholly dependent on me and also resides with me. ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldeclare.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                celldeclare.Colspan = 2;
                celldeclare.Border = 0;
                celldeclare.PaddingTop = 5;
                celldeclare.SetLeading(0f, 1.2f);
                tblRefer.AddCell(celldeclare);

                tblRefer.AddCell(Referspace);
                tblRefer.AddCell(Referspace);


                PdfPCell cellhereby = new PdfPCell(new Phrase("I hereby declare that the particulars given by me are correct to the best of knowledge and belief.I undertake to intimate the corporation any changes in the membership of my family within 15 days of such change.  ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellhereby.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                cellhereby.Colspan = 2;
                cellhereby.Border = 0;
                cellhereby.PaddingLeft = 0;
                cellhereby.SetLeading(0f, 1.2f);
                tblRefer.AddCell(cellhereby);


                tblRefer.AddCell(Referspace);
                tblRefer.AddCell(Referspace);


                //

                PdfPCell cellSRFDETECTIVE = new PdfPCell(new Phrase(CompanyName, FontFactory.GetFont(fontsyle, 12, Font.BOLD, BaseColor.BLACK)));
                cellSRFDETECTIVE.HorizontalAlignment = 0;
                cellSRFDETECTIVE.Colspan = 2;
                cellSRFDETECTIVE.Border = 0;
                cellSRFDETECTIVE.PaddingTop = 5;
                cellSRFDETECTIVE.PaddingLeft = 0;
                tblRefer.AddCell(cellSRFDETECTIVE);


                tblRefer.AddCell(Referspace);


                PdfPCell cellAuthorised = new PdfPCell(new Phrase("Authorised signatory  ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellAuthorised.HorizontalAlignment = 0;
                cellAuthorised.Colspan = 2;
                cellAuthorised.Border = 0;
                cellAuthorised.PaddingTop = 5;
                cellAuthorised.PaddingLeft = 0;
                tblRefer.AddCell(cellAuthorised);



                PdfPCell cellCounter = new PdfPCell(new Phrase("Counter signature by the employer  ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellCounter.HorizontalAlignment = 0;
                cellCounter.Colspan = 2;
                cellCounter.Border = 0;
                cellCounter.PaddingTop = 5;
                cellCounter.PaddingLeft = 0;
                tblRefer.AddCell(cellCounter);

                tblRefer.AddCell(Referspace);


                PdfPCell cellCounter1 = new PdfPCell(new Phrase("Signature with seal ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellCounter1.HorizontalAlignment = 0;
                cellCounter1.Colspan = 2;
                cellCounter1.Border = 0;
                cellCounter1.PaddingTop = 5;
                cellCounter1.PaddingLeft = 0;
                tblRefer.AddCell(cellCounter1);

                PdfPCell cellseal = new PdfPCell(new Phrase("Dated:................... \n\n", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellseal.HorizontalAlignment = 0;
                cellseal.Colspan = 0;
                cellseal.Border = 0;
                cellseal.BorderColorBottom = new BaseColor(System.Drawing.Color.Black);
                cellseal.BorderWidthBottom = 1f;
                tblRefer.AddCell(cellseal);





                PdfPCell cellSignature = new PdfPCell(new Phrase("Signature / T.I & IP", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellSignature.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellSignature.Colspan = 0;
                cellSignature.Border = 0;
                cellSignature.BorderColorBottom = new BaseColor(System.Drawing.Color.Black);
                cellSignature.BorderWidthBottom = 1f;
                cellSignature.PaddingLeft = 10;
                tblRefer.AddCell(cellSignature);





                tblRefer.AddCell(Referspace);

                PdfPCell cellINSTRUCTIONS = new PdfPCell(new Phrase("INSTRUCTIONS  ", FontFactory.GetFont(fontsyle, Fontsize + 2, Font.BOLD, BaseColor.BLACK)));
                cellINSTRUCTIONS.HorizontalAlignment = 0;
                cellINSTRUCTIONS.Colspan = 2;
                cellINSTRUCTIONS.Border = 0;
                cellINSTRUCTIONS.PaddingTop = 5;
                cellINSTRUCTIONS.PaddingLeft = 0;
                tblRefer.AddCell(cellINSTRUCTIONS);


                PdfPCell cellSubmission = new PdfPCell(new Phrase(" 1. Submission of Form -1,is governed by regulations 11 & 12 of ESI (General) Regulations, 1950  ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellSubmission.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                cellSubmission.Colspan = 2;
                cellSubmission.Border = 0;
                cellSubmission.PaddingTop = 5;
                cellSubmission.PaddingLeft = 0;
                cellSubmission.SetLeading(0f, 1.2f);
                tblRefer.AddCell(cellSubmission);



                PdfPCell cellFamily = new PdfPCell(new Phrase(" 2. Family means all or any of the following relatives of an insured person namely:-(i) a spouse (ii) a minor legitimate or adopted child dependant upon the I.P.(iii) a child who is wholly dependent on the earnings of the I.P.and who is(a) receiving education, till he or she attains the age 21 yrs(b) an unmarried daughter ;(iv) a child who is infirm by reason of any physical or mental abononormally pr imjury and is wholly dependent on the earnings of the I.P.so lo9ng as the infirmity continues;(v) dependent parents(please seen section 2 clause 11 of the 7 ESI Act 1948 for details)   ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellFamily.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                cellFamily.Colspan = 2;
                cellFamily.Border = 0;
                cellFamily.PaddingTop = 5;
                cellFamily.PaddingLeft = 0;
                cellFamily.SetLeading(0f, 1.2f);
                tblRefer.AddCell(cellFamily);




                PdfPCell cellcards = new PdfPCell(new Phrase(" 3. Identity cards is Non-transferable.   ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellcards.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                cellcards.Colspan = 2;
                cellcards.Border = 0;
                cellcards.PaddingTop = 5;
                cellcards.PaddingLeft = 0;
                cellcards.SetLeading(0f, 1.2f);
                tblRefer.AddCell(cellcards);




                PdfPCell cellidentity = new PdfPCell(new Phrase(" 4. Loss of identity card be reported to employer /Branch manger immediately   ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellidentity.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                cellidentity.Colspan = 2;
                cellidentity.Border = 0;
                cellidentity.PaddingTop = 5;
                cellidentity.PaddingLeft = 0;
                cellidentity.SetLeading(0f, 1.2f);
                tblRefer.AddCell(cellidentity);



                PdfPCell cellsubmission1 = new PdfPCell(new Phrase(" 5. Submission of faise informationsattracts penal action under section 84 of ESI .Act,1948   ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsubmission1.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                cellsubmission1.Colspan = 2;
                cellsubmission1.Border = 0;
                cellsubmission1.PaddingTop = 5;
                cellsubmission1.PaddingLeft = 0;
                cellsubmission1.SetLeading(0f, 1.2f);
                tblRefer.AddCell(cellsubmission1);





                PdfPCell cellduly = new PdfPCell(new Phrase(" 6. This form duly filled in must reach. the concerned Branch office within 10 days of appointment of an Employee .Dealy attracts penal action under section 85 of the ACT,against employer.   ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellduly.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                cellduly.Colspan = 2;
                cellduly.Border = 0;
                cellduly.PaddingTop = 5;
                cellduly.PaddingLeft = 0;
                cellduly.SetLeading(0f, 1.2f);
                tblRefer.AddCell(cellduly);




                PdfPCell cellperson = new PdfPCell(new Phrase(" 7. As an insured person you and your dependent family members are entitled to full medical care.the other benetifits in cash  include (1) sickness benfit(2) temporary disablement benfit (3)permanent disablement benfit (4) dependents benefit and (5) maternity benfit(in case of women employees)subject to fulfilment of contribution conditions.  ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellperson.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                cellperson.Colspan = 2;
                cellperson.Border = 0;
                cellperson.PaddingTop = 5;
                cellperson.PaddingLeft = 0;
                cellperson.SetLeading(0f, 1.2f);
                tblRefer.AddCell(cellperson);



                PdfPCell cellmore = new PdfPCell(new Phrase(" 8. For more details please visit website of ESIC at www.esic.org.in or contact regional office or branch office.   ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellmore.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                cellmore.Colspan = 2;
                cellmore.Border = 0;
                cellmore.PaddingTop = 5;
                cellmore.PaddingLeft = 0;
                cellmore.SetLeading(0f, 1.2f);
                tblRefer.AddCell(cellmore);


                tblRefer.AddCell(Referspace);




                PdfPCell cellBRACH = new PdfPCell(new Phrase(" FOR BRANCH OFFICE USE ONLY   ", FontFactory.GetFont(fontsyle, 13, Font.BOLD, BaseColor.BLACK)));
                cellBRACH.HorizontalAlignment = 1;
                cellBRACH.Colspan = 2;
                cellBRACH.Border = 0;
                cellBRACH.PaddingTop = 5;
                tblRefer.AddCell(cellBRACH);

                tblRefer.AddCell(Referspace);

                PdfPCell cellDateOfAllotment = new PdfPCell(new Phrase(" 1. Date Of Allotment Of Ins No:   ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellDateOfAllotment.HorizontalAlignment = 0;
                cellDateOfAllotment.Colspan = 2;
                cellDateOfAllotment.Border = 0;
                cellDateOfAllotment.PaddingTop = 5;
                cellDateOfAllotment.PaddingLeft = 0;
                tblRefer.AddCell(cellDateOfAllotment);


                PdfPCell cellIssue = new PdfPCell(new Phrase(" 2. Date Of Issue Of TIC:   ", FontFactory.GetFont(fontsyle, 11, Font.NORMAL, BaseColor.BLACK)));
                cellIssue.HorizontalAlignment = 0;
                cellIssue.Colspan = 2;
                cellIssue.Border = 0;
                cellIssue.PaddingTop = 5;
                cellIssue.PaddingLeft = 0;
                tblRefer.AddCell(cellIssue);


                PdfPCell cellDisp = new PdfPCell(new Phrase(" 3. Name / No. Of Disp:   ", FontFactory.GetFont(fontsyle, 11, Font.NORMAL, BaseColor.BLACK)));
                cellDisp.HorizontalAlignment = 0;
                cellDisp.Colspan = 2;
                cellDisp.Border = 0;
                cellDisp.PaddingTop = 5;
                cellDisp.PaddingLeft = 0;
                tblRefer.AddCell(cellDisp);

                PdfPCell cellMedical = new PdfPCell(new Phrase(" 4. Whether reciprocal Medical arrangement involved ? If yes, please indicate:   ", FontFactory.GetFont(fontsyle, 11, Font.NORMAL, BaseColor.BLACK)));
                cellMedical.HorizontalAlignment = 0;
                cellMedical.Colspan = 2;
                cellMedical.Border = 0;
                cellMedical.PaddingTop = 5;
                cellMedical.PaddingLeft = 0;
                tblRefer.AddCell(cellMedical);

                tblRefer.AddCell(Referspace);
                tblRefer.AddCell(Referspace);
                tblRefer.AddCell(Referspace);

                PdfPCell cellBranch = new PdfPCell(new Phrase(" Signature of Branch Manger   ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellBranch.HorizontalAlignment = 0;
                cellBranch.Colspan = 2;
                cellBranch.Border = 0;
                cellBranch.PaddingTop = 5;
                cellBranch.PaddingLeft = 300;
                tblRefer.AddCell(cellBranch);

                tblRefer.AddCell(Referspace);
                tblRefer.AddCell(Referspace);
                document.Add(tblRefer);

                #endregion Employee Refer Details

                PdfPTable tblReferen = new PdfPTable(6);
                tblReferen.TotalWidth = 500f;
                tblReferen.LockedWidth = true;
                float[] widths3 = new float[] { 2.2f, 2f, 2f, 2f, 2.5f, 2.5f };
                tblReferen.SetWidths(widths3);

                PdfPCell Referencspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                Referencspace.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                Referencspace.Colspan = 6;
                Referencspace.Border = 0;
                tblReferen.AddCell(Referencspace);




                PdfPCell canamec = new PdfPCell(new Phrase("Sl.No.  ", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                canamec.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                canamec.BorderWidthLeft = 0;
                canamec.BorderWidthRight = 0;
                canamec.BorderWidthTop = 0;
                canamec.BorderWidthBottom = 0;
                tblReferen.AddCell(canamec);

                PdfPCell caddressca = new PdfPCell(new Phrase("Name", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                caddressca.HorizontalAlignment = 0;//0=Left, 1=Centre, 2=Right
                caddressca.BorderWidthLeft = 0;
                caddressca.BorderWidthRight = 0;
                caddressca.BorderWidthTop = 0;
                caddressca.BorderWidthBottom = 0;
                tblReferen.AddCell(caddressca);

                PdfPCell crelationshipca = new PdfPCell(new Phrase("Date of birth/Age as on date of filling form", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                crelationshipca.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                crelationshipca.BorderWidthLeft = 0;
                crelationshipca.BorderWidthRight = 0;
                crelationshipca.BorderWidthTop = 0;
                crelationshipca.BorderWidthBottom = 0;
                tblReferen.AddCell(crelationshipca);

                PdfPCell cdobca = new PdfPCell(new Phrase("Relationship with the Employee", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                cdobca.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                cdobca.BorderWidthLeft = 0;
                cdobca.BorderWidthRight = 0;
                cdobca.BorderWidthTop = 0;
                cdobca.BorderWidthBottom = 0;

                tblReferen.AddCell(cdobca);

                PdfPCell camtca = new PdfPCell(new Phrase("Whether residing With him/her", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                camtca.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                camtca.BorderWidthLeft = 0;
                camtca.BorderWidthRight = 0;
                camtca.BorderWidthTop = 0;
                camtca.BorderWidthBottom = 0;
                tblReferen.AddCell(camtca);

                PdfPCell cminorca = new PdfPCell(new Phrase("If No,state place of residence", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                cminorca.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                cminorca.BorderWidthLeft = 0;
                cminorca.BorderWidthRight = 0;
                cminorca.BorderWidthTop = 0;
                cminorca.BorderWidthBottom = 0f;
                tblReferen.AddCell(cminorca);



                document.Add(tblReferen);



                #region Employee Finger Prints


                document.NewPage();

                PdfPTable tblFingerprints = new PdfPTable(6);
                tblFingerprints.TotalWidth = 500f;
                tblFingerprints.LockedWidth = true;
                float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                tblFingerprints.SetWidths(widthfinger);





                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";


                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }



            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;
            }
        }

        protected void btnPFForm_Click(object sender, EventArgs e)
        {
            int Fontsize = 12;
            string fontsyle = "TIMES_ROMAN";

            var headfont = FontFactory.GetFont(FontFactory.TIMES_ROMAN, 14, Font.BOLD, BaseColor.BLACK);
            var bodyfont = FontFactory.GetFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD, BaseColor.BLACK);
            var bodyfontnormal = FontFactory.GetFont(FontFactory.TIMES_ROMAN, 9, Font.NORMAL, BaseColor.BLACK);
            var Subheadnormal = FontFactory.GetFont(FontFactory.TIMES_ROMAN, 11, Font.NORMAL, BaseColor.BLACK);
            var Subheadfont = FontFactory.GetFont(FontFactory.TIMES_ROMAN, 11, Font.BOLD, BaseColor.BLACK);


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region Variable Declaration

            string PFNO = "";
            string Relage = "";
            string RelDOFBirth = "";
            string RelationPlace = "";
            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string FatherName = "";
            string SpouseName = "";
            string FSpouseName = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";
            string Gender = "";
            string prTown = "";
            string prPostOffice = "";
            string prTaluka = "";
            string prPoliceStation = "";
            string prcity = "";
            string prLmark = "";
            string prPincode = "";
            string prState = "";


            string peTown = "";
            string pePostOffice = "";
            string peTaluka = "";
            string pePoliceStation = "";
            string pecity = "";
            string pelmark = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";


            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";



            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";

            string Esino = "";
            string prphone = "";
            string pephone = "";
            string FatherSpouseName = "";

            #endregion

            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "EmpBiodataPDF";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            string querypf = " select *,Convert(varchar(10),DOfBirth,103) as DateOfBirth from EmpRelationships where EmpId='" + txtEmpid.Text + "' and PFNominee='Y' ";
            DataTable dtpf = config.ExecuteAdaptorAsyncWithQueryParams(querypf).Result;
            string residence = ""; string place = "";
            int sno = 1;


            string query2 = "select cities.city,* from emprelationships  left join empdetails on empdetails.empid=emprelationships.empid inner join cities on cities.cityid= empdetails.pecity where emprelationships.empid='" + txtEmpid.Text + "' ";
            DataTable dtquery2 = config.ExecuteAdaptorAsyncWithQueryParams(query2).Result;
            string RRes = ""; string RRes1 = "";
            if (dtquery2.Rows.Count > 0)
            {
                for (int i = 0; i < dtquery2.Rows.Count; i++)
                {
                    RRes1 = dtquery2.Rows[i]["RResidence"].ToString();
                    if (RRes1 == "Yes")
                    {
                        RRes = dtquery2.Rows[i]["city"].ToString();
                    }


                }

            }


            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();



                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                FatherName = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                SpouseName = dtEmpdetails.Rows[0]["EmpSpouseName"].ToString();
                FSpouseName = dtEmpdetails.Rows[0]["SpouseName"].ToString();


                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prTown = dtEmpdetails.Rows[0]["prTown"].ToString();
                prPostOffice = dtEmpdetails.Rows[0]["prPostOffice"].ToString();
                prTaluka = dtEmpdetails.Rows[0]["prTaluka"].ToString();
                prPoliceStation = dtEmpdetails.Rows[0]["prPoliceStation"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();

                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peTown = dtEmpdetails.Rows[0]["peTown"].ToString();
                pePostOffice = dtEmpdetails.Rows[0]["pePostOffice"].ToString();
                peTaluka = dtEmpdetails.Rows[0]["peTaluka"].ToString();
                pePoliceStation = dtEmpdetails.Rows[0]["pePoliceStation"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                // pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Image1 = "";

                if (dtEmpdetails.Rows[0]["Image"].ToString() != "")
                {
                    Image1 = dtEmpdetails.Rows[0]["Image"].ToString();
                }
                else
                {

                }

                PFNO = dtEmpdetails.Rows[0]["PFNo"].ToString();




                #endregion
            }

            MemoryStream ms = new MemoryStream();
            Document document = new Document(PageSize.LEGAL);
            var writer = PdfWriter.GetInstance(document, ms);
            document.Open();

            PdfPTable table = new PdfPTable(3);
            table.TotalWidth = 550f;
            table.LockedWidth = true;
            float[] width = new float[] { 3f, 0.3f, 3f };
            table.SetWidths(width);

            PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
            cellspace.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellspace.Colspan = 3;
            cellspace.Border = 0;
            //cellspace.PaddingTop = -5;
            table.AddCell(cellspace);

            PdfPCell cellheading = new PdfPCell(new Phrase("FORM 2 (REVISED)", headfont));
            cellheading.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellheading.Colspan = 3;
            cellheading.Border = 0;
            table.AddCell(cellheading);


            PdfPCell cellheading1 = new PdfPCell(new Phrase("Nomination and Declaration form for Unexempted/Exempted Establishments", Subheadfont));
            cellheading1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellheading1.Colspan = 3;
            cellheading1.Border = 0;
            table.AddCell(cellheading1);

            table.AddCell(cellspace);


            PdfPCell cellheading2 = new PdfPCell(new Phrase("Declaration and Nomination form under the Employees' Provident Funds and Employees' Pension Scheme", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 1, Font.BOLD, BaseColor.BLACK))); ;
            cellheading2.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellheading2.Colspan = 3;
            cellheading2.Border = 0;
            table.AddCell(cellheading2);

            PdfPCell cellheading3 = new PdfPCell(new Phrase("(Paragraphs 33 & 61(1) of the Employees' Provident Fund Scheme, 1952 and Paragraph 18 of the Employees' Pension Scheme, 1995 )", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 1, Font.BOLD, BaseColor.BLACK))); ;
            cellheading3.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellheading3.Colspan = 3;
            cellheading3.Border = 0;

            table.AddCell(cellheading3);

            table.AddCell(cellspace);


            PdfPCell cellnamehead = new PdfPCell(new Phrase("1. Name", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cellnamehead.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellnamehead.Colspan = 0;
            cellnamehead.Border = 0;
            table.AddCell(cellnamehead);

            PdfPCell cellnamecol = new PdfPCell(new Phrase(":", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cellnamecol.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellnamecol.Colspan = 0;
            cellnamecol.Border = 0;
            table.AddCell(cellnamecol);

            PdfPCell cellname = new PdfPCell(new Phrase(txtName.Text, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
            cellname.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellname.Colspan = 0;
            cellname.Border = 0;
            //cellname.PaddingLeft = -10;
            table.AddCell(cellname);

            table.AddCell(cellspace);


            PdfPCell cellFathershead = new PdfPCell(new Phrase("2. Father's/Husband's Name", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cellFathershead.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellFathershead.Colspan = 0;
            cellFathershead.Border = 0;
            table.AddCell(cellFathershead);

            PdfPCell cellFatherscol = new PdfPCell(new Phrase(":", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cellFatherscol.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellFatherscol.Colspan = 0;
            cellFatherscol.Border = 0;
            table.AddCell(cellFatherscol);

            if (FatherName.Length > 0)
            {
                FatherSpouseName = FatherName;
            }
            else if (SpouseName.Length > 0)
            {
                FatherSpouseName = SpouseName;
            }
            else if (FSpouseName.Length > 0)
            {
                FatherSpouseName = FSpouseName;
            }
            else
            {
                FatherSpouseName = "";
            }

            PdfPCell cellFathername = new PdfPCell(new Phrase(FatherSpouseName, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
            cellFathername.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellFathername.Colspan = 0;
            cellFathername.Border = 0;
            table.AddCell(cellFathername);

            table.AddCell(cellspace);


            PdfPCell cellDOBhead = new PdfPCell(new Phrase("3. Date of Birth", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cellDOBhead.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellDOBhead.Colspan = 0;
            cellDOBhead.Border = 0;
            table.AddCell(cellDOBhead);

            PdfPCell cellDOBcol = new PdfPCell(new Phrase(":", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cellDOBcol.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellDOBcol.Colspan = 0;
            cellDOBcol.Border = 0;
            table.AddCell(cellDOBcol);

            PdfPCell cellDOB = new PdfPCell(new Phrase(dateofbirth.ToString(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
            cellDOB.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellDOB.Colspan = 0;
            cellDOB.Border = 0;
            table.AddCell(cellDOB);

            table.AddCell(cellspace);

            PdfPCell cellSexhead = new PdfPCell(new Phrase("4. Sex", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cellSexhead.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellSexhead.Colspan = 0;
            cellSexhead.Border = 0;
            table.AddCell(cellSexhead);

            PdfPCell cellSexcol = new PdfPCell(new Phrase(":", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cellSexcol.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellSexcol.Colspan = 0;
            cellSexcol.Border = 0;
            table.AddCell(cellSexcol);

            PdfPCell cellSex = new PdfPCell(new Phrase(Gender.ToString(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
            cellSex.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellSex.Colspan = 0;
            cellSex.Border = 0;
            table.AddCell(cellSex);

            table.AddCell(cellspace);

            PdfPCell cellMSHead = new PdfPCell(new Phrase("5. Marital Status", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cellMSHead.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellMSHead.Colspan = 0;
            cellMSHead.Border = 0;
            table.AddCell(cellMSHead);

            PdfPCell cellMScol = new PdfPCell(new Phrase(":", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cellMScol.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellMScol.Colspan = 0;
            cellMScol.Border = 0;
            table.AddCell(cellMScol);

            PdfPCell cellMS = new PdfPCell(new Phrase(maritalstatus.ToString(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
            cellMS.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellMS.Colspan = 0;
            cellMS.Border = 0;
            table.AddCell(cellMS);

            table.AddCell(cellspace);

            PdfPCell cellANHead = new PdfPCell(new Phrase("6. Account No", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cellANHead.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellANHead.Colspan = 0;
            cellANHead.Border = 0;
            table.AddCell(cellANHead);

            PdfPCell cellANcol = new PdfPCell(new Phrase(":", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cellANcol.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellANcol.Colspan = 0;
            cellANcol.Border = 0;
            table.AddCell(cellANcol);

            PdfPCell cellAN = new PdfPCell(new Phrase(PFNO, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
            cellAN.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellAN.Colspan = 0;
            cellAN.Border = 0;
            table.AddCell(cellAN);

            table.AddCell(cellspace);

            PdfPCell cellPresentaddr = new PdfPCell(new Phrase("7. Present Address", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cellPresentaddr.HorizontalAlignment = 0;
            cellPresentaddr.Colspan = 0;
            cellPresentaddr.Border = 0;
            table.AddCell(cellPresentaddr);

            PdfPCell cellPresentaddr2 = new PdfPCell(new Phrase(":", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cellPresentaddr2.HorizontalAlignment = 0;
            cellPresentaddr2.Colspan = 0;
            cellPresentaddr2.Border = 0;
            table.AddCell(cellPresentaddr2);

            #region Present address String array

            string[] PrAdress = new string[8];
            if (prLmark.Length > 0)
            {
                PrAdress[0] = "Landmark :  " + prLmark + ", ";
            }
            else
            {
                PrAdress[0] = "";
            }
            if (prTown.Length > 0)
            {
                PrAdress[1] = "Vill :  " + prTown + ", ";
            }
            else
            {
                PrAdress[1] = "";
            }

            if (prPostOffice.Length > 0)
            {
                PrAdress[2] = "Postoffice :  " + prPostOffice + ", ";
            }
            else
            {
                PrAdress[2] = "";
            }
            if (prTaluka.Length > 0)
            {
                PrAdress[3] = "Taluka : " + prTaluka + ", ";
            }
            else
            {
                PrAdress[3] = "";
            }
            if (prPoliceStation.Length > 0)
            {
                PrAdress[4] = "Policestation : " + prPoliceStation + ", ";
            }
            else
            {
                PrAdress[4] = "";
            }
            if (prcity.Length > 0)
            {
                PrAdress[5] = "City : " + prcity + ", ";
            }
            else
            {
                PrAdress[5] = "";
            }

            if (prState.Length > 0)
            {
                PrAdress[6] = "State : " + prState + " ";
            }
            else
            {
                PrAdress[6] = ".";
            }


            if (prPincode.Length > 0)
            {
                PrAdress[7] = ", Pincode : " + prPincode + ".";
            }
            else
            {
                PrAdress[7] = "";
            }

            string Address1 = string.Empty;

            for (int i = 0; i < 8; i++)
            {
                Address1 += PrAdress[i];
            }


            #endregion

            PdfPCell cellPresentaddr1 = new PdfPCell(new Phrase(Address1.TrimStart(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
            cellPresentaddr1.HorizontalAlignment = 0;
            cellPresentaddr1.Colspan = 0;
            cellPresentaddr1.Border = 0;
            //cellPresentaddr1.PaddingLeft = -140;i
            table.AddCell(cellPresentaddr1);
            table.AddCell(cellspace);

            PdfPCell cellPerminentaddr = new PdfPCell(new Phrase("8. Permanent Address", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cellPerminentaddr.HorizontalAlignment = 0;
            cellPerminentaddr.Colspan = 0;
            cellPerminentaddr.Border = 0;
            table.AddCell(cellPerminentaddr);

            PdfPCell cellPerminentaddr2 = new PdfPCell(new Phrase(":", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cellPerminentaddr2.HorizontalAlignment = 0;
            cellPerminentaddr2.Colspan = 0;
            cellPerminentaddr2.Border = 0;

            table.AddCell(cellPerminentaddr2);

            #region Permanent address String array

            string[] PeAdress = new string[8];

            if (pelmark.Length > 0)
            {
                PeAdress[0] = "Landmark :  " + pelmark + ", ";
            }
            else
            {
                PeAdress[0] = "";
            }
            if (peTown.Length > 0)
            {
                PeAdress[1] = "Vill : " + peTown + ", ";
            }
            else
            {
                PeAdress[1] = "";
            }

            if (pePostOffice.Length > 0)
            {
                PeAdress[2] = "Postoffice : " + pePostOffice + ", ";
            }
            else
            {
                PeAdress[2] = "";
            }
            if (peTaluka.Length > 0)
            {
                PeAdress[3] = "Taluka : " + peTaluka + ", ";
            }
            else
            {
                PeAdress[3] = " ";
            }
            if (pePoliceStation.Length > 0)
            {
                PeAdress[4] = "Policestation : " + pePoliceStation + ", ";
            }
            else
            {
                PeAdress[4] = " ";
            }
            if (pecity.Length > 0)
            {
                PeAdress[5] = "City : " + pecity + ", ";
            }
            else
            {
                PeAdress[5] = " ";
            }

            if (peState.Length > 0)
            {
                PeAdress[6] = "State : " + peState + " ";
            }
            else
            {
                PeAdress[6] = ".";
            }


            if (pePincode.Length > 0)
            {
                PeAdress[7] = ", Pincode : " + pePincode + ".";
            }
            else
            {
                PeAdress[7] = "";
            }

            string Address2 = string.Empty;

            for (int i = 0; i < 8; i++)
            {
                Address2 += PeAdress[i];
            }


            #endregion


            PdfPCell cellPerminentaddr1 = new PdfPCell(new Phrase(Address2.TrimStart(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
            cellPerminentaddr1.HorizontalAlignment = 0;
            cellPerminentaddr1.Colspan = 0;
            cellPerminentaddr1.Border = 0;
            //cellPerminentaddr1.PaddingLeft = -140;
            table.AddCell(cellPerminentaddr1);

            table.AddCell(cellspace);


            PdfPCell cellDOJHead = new PdfPCell(new Phrase("9. Date of Joining", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellDOJHead.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellDOJHead.Colspan = 0;
            cellDOJHead.Border = 0;
            table.AddCell(cellDOJHead);

            PdfPCell cellDOJcol = new PdfPCell(new Phrase(":", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cellDOJcol.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellDOJcol.Colspan = 0;
            cellDOJcol.Border = 0;
            table.AddCell(cellDOJcol);

            PdfPCell cellDOJ = new PdfPCell(new Phrase(date.ToString(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
            cellDOJ.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellDOJ.Colspan = 0;
            cellDOJ.Border = 0;
            table.AddCell(cellDOJ);

            table.AddCell(cellspace);
            table.AddCell(cellspace);
            table.AddCell(cellspace);

            PdfPCell cellPartA = new PdfPCell(new Phrase("PART - A (EPF)", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cellPartA.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellPartA.Colspan = 3;
            cellPartA.Border = 0;
            table.AddCell(cellPartA);

            PdfPCell cellPartAdesc = new PdfPCell(new Phrase("I hereby nominate the person(s)/cancel the nomination made by me previously and nominate the person(s) mentioned below to receive the amount standing to my credit in the Employee's Provident Fund in the event of my death.", Subheadfont));
            cellPartAdesc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellPartAdesc.Colspan = 3;
            cellPartAdesc.Border = 0;
            cellPartAdesc.PaddingTop = 20;
            table.AddCell(cellPartAdesc);

            document.Add(table);

            PdfPTable table2 = new PdfPTable(6);
            table2.TotalWidth = 550f;
            table2.LockedWidth = true;
            float[] widths = new float[] { 2.2f, 2f, 2f, 2f, 2.5f, 2.5f };
            table2.SetWidths(widths);

            PdfPCell cspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
            cspace.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cspace.Colspan = 6;
            cspace.Border = 0;
            table2.AddCell(cspace);

            PdfPCell cname = new PdfPCell(new Phrase("Name of Nominee/Nominees  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cname.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cname.Colspan = 0;
            table2.AddCell(cname);

            PdfPCell caddress = new PdfPCell(new Phrase("Address", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            caddress.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            caddress.Colspan = 0;
            table2.AddCell(caddress);

            PdfPCell crelationship = new PdfPCell(new Phrase("Nominee's relationship with the member", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            crelationship.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            crelationship.Colspan = 0;
            table2.AddCell(crelationship);

            PdfPCell cdob = new PdfPCell(new Phrase("Date of Birth", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cdob.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cdob.Colspan = 0;
            table2.AddCell(cdob);

            PdfPCell camt = new PdfPCell(new Phrase("Total amount of share of accumulation in Provident Fund to be paid to each nominee", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            camt.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            camt.Colspan = 0;
            table2.AddCell(camt);

            PdfPCell cminor = new PdfPCell(new Phrase("If the nominee is a minor, name & relationship & address of the guardian who may receive the amount during the minority of nominee", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cminor.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cminor.Colspan = 0;
            table2.AddCell(cminor);

            PdfPCell cnameno = new PdfPCell(new Phrase("1", bodyfont));
            cnameno.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cnameno.Colspan = 0;
            cnameno.MinimumHeight = 5;
            table2.AddCell(cnameno);

            PdfPCell caddressno = new PdfPCell(new Phrase("2", bodyfont));
            caddressno.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            caddressno.Colspan = 0;
            table2.AddCell(caddressno);

            PdfPCell crelationshipno = new PdfPCell(new Phrase("3", bodyfont));
            crelationshipno.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            crelationshipno.Colspan = 0;
            table2.AddCell(crelationshipno);

            PdfPCell cdobno = new PdfPCell(new Phrase("4", bodyfont));
            cdobno.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cdobno.Colspan = 0;
            table2.AddCell(cdobno);

            PdfPCell camtno = new PdfPCell(new Phrase("5", bodyfont));
            camtno.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            camtno.Colspan = 0;
            table2.AddCell(camtno);

            PdfPCell cminorno = new PdfPCell(new Phrase("6", bodyfont));
            cminorno.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cminorno.Colspan = 0;
            table2.AddCell(cminorno);


            if (dtpf.Rows.Count > 0)
            {
                for (int i = 0; i < dtpf.Rows.Count; i++)
                {
                    Fname = dtpf.Rows[i]["RName"].ToString();
                    PdfPCell cnamedesc = new PdfPCell(new Phrase(Fname, bodyfontnormal));
                    cnamedesc.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cnamedesc.Colspan = 0;
                    cnamedesc.MinimumHeight = 30;
                    table2.AddCell(cnamedesc);

                    place = dtpf.Rows[i]["RPlace"].ToString();
                    PdfPCell caddressdesc = new PdfPCell(new Phrase(place, bodyfontnormal));
                    caddressdesc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    caddressdesc.Colspan = 0;
                    table2.AddCell(caddressdesc);

                    relationType = dtpf.Rows[i]["RType"].ToString();
                    if (relationType != "--Select--")
                    {
                        PdfPCell crelationshipdesc = new PdfPCell(new Phrase(relationType, bodyfontnormal));
                        crelationshipdesc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        crelationshipdesc.Colspan = 0;
                        table2.AddCell(crelationshipdesc);
                    }
                    else
                    {

                        PdfPCell crelationshipdesc = new PdfPCell(new Phrase("", bodyfontnormal));
                        crelationshipdesc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        crelationshipdesc.Colspan = 0;
                        table2.AddCell(crelationshipdesc);
                    }

                    Relage = dtpf.Rows[i]["age"].ToString();
                    RelDOFBirth = dtpf.Rows[i]["DateOfBirth"].ToString();
                    if (Relage == "0")
                    {
                        Relage = RelDOFBirth;
                    }
                    else if (Relage.Length > 0 && Relage != "0")
                    {
                        Relage = dtpf.Rows[i]["age"].ToString();
                    }
                    else
                    {

                        Relage = "";
                    }

                    PdfPCell cdobnodesc = new PdfPCell(new Phrase(Relage, bodyfontnormal));
                    cdobnodesc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cdobnodesc.Colspan = 0;
                    table2.AddCell(cdobnodesc);

                    PdfPCell camtdesc = new PdfPCell(new Phrase("", bodyfontnormal));
                    camtdesc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    camtdesc.Colspan = 0;
                    table2.AddCell(camtdesc);

                    PdfPCell cminordesc = new PdfPCell(new Phrase("", bodyfontnormal));
                    cminordesc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cminordesc.Colspan = 0;
                    table2.AddCell(cminordesc);




                }


            }


            table2.AddCell(cspace);
            table2.AddCell(cspace);

            PdfPCell cpt1 = new PdfPCell(new Phrase("1.  *Certified that I have no family as defined in para 2(g) of the Employees' Provident Fund Scheme,1952 and should I acquire a family hereafter the above nomination should be deemed as cancelled.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cpt1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cpt1.Colspan = 6;
            cpt1.Border = 0;
            table2.AddCell(cpt1);

            PdfPCell cpt2 = new PdfPCell(new Phrase("2.  *Certified that my father/mother is/are dependant upon me.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cpt2.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cpt2.Colspan = 6;
            cpt2.Border = 0;
            table2.AddCell(cpt2);

            table2.AddCell(cspace);
            table2.AddCell(cspace);
            table2.AddCell(cspace);
            table2.AddCell(cspace);
            table2.AddCell(cspace);

            PdfPCell cpt3 = new PdfPCell(new Phrase("Strike out whichever is not applicable", Subheadfont));
            cpt3.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cpt3.Colspan = 3;
            cpt3.Border = 0;
            table2.AddCell(cpt3);

            PdfPCell csign = new PdfPCell(new Phrase("Signature or thumb impression of the Subscriber", Subheadfont));
            csign.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            csign.Colspan = 3;
            csign.Border = 0;
            table2.AddCell(csign);
            document.Add(table2);

            table2.AddCell(cellspace);

            document.NewPage();






            PdfPTable table3 = new PdfPTable(6);
            table3.TotalWidth = 550f;
            table3.LockedWidth = true;
            float[] width2 = new float[] { 2f, 2f, 2f, 2f, 2f, 2f };
            table3.SetWidths(width2);

            PdfPCell cpartBemp = new PdfPCell(new Phrase("", headfont));
            cpartBemp.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cpartBemp.Colspan = 6;
            cpartBemp.Border = 0;
            table3.AddCell(cpartBemp);

            PdfPCell cpartB = new PdfPCell(new Phrase("PART B (EPS) (Para 18)", headfont));
            cpartB.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cpartB.Colspan = 6;
            cpartB.Border = 0;
            cpartB.PaddingTop = 5;
            table3.AddCell(cpartB);

            //table3.AddCell(cellspace);

            PdfPCell cpartBdesc = new PdfPCell(new Phrase("I hereby furnish below particular of the members of my family who would be eligible to receive widow/ children pension in the event of my death", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cpartBdesc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cpartBdesc.Colspan = 6;
            cpartBdesc.Border = 0;
            cpartBdesc.PaddingTop = 5;
            table3.AddCell(cpartBdesc);

            table3.AddCell(cspace);

            PdfPCell csno = new PdfPCell(new Phrase("S.No", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            csno.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            csno.Colspan = 1;
            table3.AddCell(csno);

            PdfPCell cnameaddress = new PdfPCell(new Phrase("Name and Address of the family member", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cnameaddress.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cnameaddress.Colspan = 3;
            table3.AddCell(cnameaddress);

            PdfPCell cndob = new PdfPCell(new Phrase("Date of Birth", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cndob.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cndob.Colspan = 1;
            table3.AddCell(cndob);

            PdfPCell cnrelationship = new PdfPCell(new Phrase("Relationship with the member", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cnrelationship.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cnrelationship.Colspan = 1;
            table3.AddCell(cnrelationship);

            PdfPCell csnonoemp = new PdfPCell(new Phrase("", bodyfont));
            csnonoemp.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            csnonoemp.Colspan = 1;
            //csnonoemp.Border = 0;
            table3.AddCell(csnonoemp);

            PdfPCell cnameemp = new PdfPCell(new Phrase("Name\n", bodyfont));
            cnameemp.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cnameemp.Colspan = 2;
            cnameemp.MinimumHeight = 30;
            table3.AddCell(cnameemp);

            PdfPCell cnaddressemp = new PdfPCell(new Phrase("Address\n", bodyfont));
            cnaddressemp.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cnaddressemp.Colspan = 1;
            table3.AddCell(cnaddressemp);

            PdfPCell cndobemp = new PdfPCell(new Phrase("", bodyfont));
            cndobemp.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cndobemp.Colspan = 1;
            cndobemp.Border = 0;
            table3.AddCell(cndobemp);

            PdfPCell cnrelationshipemp = new PdfPCell(new Phrase("", bodyfont));
            cnrelationshipemp.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cnrelationshipemp.Colspan = 1;
            table3.AddCell(cnrelationshipemp);


            PdfPCell csnono = new PdfPCell(new Phrase("1", bodyfont));
            csnono.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            csnono.Colspan = 0;
            csnono.MinimumHeight = 5;
            table3.AddCell(csnono);

            PdfPCell cnameaddressno = new PdfPCell(new Phrase("2", bodyfont));
            cnameaddressno.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cnameaddressno.Colspan = 2;
            table3.AddCell(cnameaddressno);

            PdfPCell cnaddressno = new PdfPCell(new Phrase("3", bodyfont));
            cnaddressno.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cnaddressno.Colspan = 1;
            table3.AddCell(cnaddressno);

            PdfPCell cndobno = new PdfPCell(new Phrase("4", bodyfont));
            cndobno.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cndobno.Colspan = 1;
            table3.AddCell(cndobno);

            PdfPCell cnrelationshipno = new PdfPCell(new Phrase("5", bodyfont));
            cnrelationshipno.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cnrelationshipno.Colspan = 0;
            table3.AddCell(cnrelationshipno);



            if (dtEmpdetails.Rows.Count > 0)
            {
                for (int i = 0; i < dtEmpdetails.Rows.Count; i++)
                {

                    PdfPCell cellsno = new PdfPCell(new Phrase(sno.ToString(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellsno.HorizontalAlignment = 1;
                    cellsno.Colspan = 0;
                    table3.AddCell(cellsno);

                    Fname = dtEmpdetails.Rows[i]["RName"].ToString();
                    PdfPCell cellRName = new PdfPCell(new Phrase(Fname, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellRName.HorizontalAlignment = 1;
                    cellRName.Colspan = 2;
                    cellRName.MinimumHeight = 30;
                    table3.AddCell(cellRName);

                    place = dtEmpdetails.Rows[i]["RPlace"].ToString();
                    if (place.Length > 0)
                    {
                        RelationPlace = place;
                    }
                    else if (RRes.Length > 0)
                    {
                        RelationPlace = RRes;
                    }
                    else
                    {

                        RelationPlace = "";
                    }

                    PdfPCell cellres1 = new PdfPCell(new Phrase(RelationPlace, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellres1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellres1.Colspan = 0;
                    cellres1.MinimumHeight = 20;
                    table3.AddCell(cellres1);



                    if (RelDOFBirth.Length > 0)
                    {
                        if (RelDOFBirth == "01/01/1900")
                        {
                            RelDOFBirth = "";
                        }
                        else
                        {
                            RelDOFBirth = dtEmpdetails.Rows[i]["DOfBirth"].ToString();

                        }
                    }


                    relationAge = dtEmpdetails.Rows[i]["age"].ToString();

                    if (relationAge.Length > 0 && relationAge != "0")
                    {
                        relationAge = "\n Age: " + dtEmpdetails.Rows[i]["age"].ToString();
                    }
                    else
                    {

                        relationAge = "";
                    }







                    PdfPCell cellreldob1 = new PdfPCell(new Phrase(RelDOFBirth + relationAge, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellreldob1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellreldob1.Colspan = 0;
                    cellreldob1.MinimumHeight = 20;
                    table3.AddCell(cellreldob1);



                    relationType = dtEmpdetails.Rows[i]["rtype"].ToString();
                    if (relationType != "--Select--")
                    {
                        PdfPCell cellRType = new PdfPCell(new Phrase(relationType, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellRType.HorizontalAlignment = 1;
                        cellRType.Colspan = 0;
                        table3.AddCell(cellRType);
                    }
                    else
                    {
                        PdfPCell cellRType = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellRType.HorizontalAlignment = 1;
                        cellRType.Colspan = 0;
                        table3.AddCell(cellRType);


                    }


                    sno++;
                }


            }

            table3.AddCell(cpartBemp);
            table3.AddCell(cpartBemp);

            PdfPCell cpnt1 = new PdfPCell(new Phrase("** Certified that I have no family as defined in para 2(vii) of Employees' Pension Scheme 1995 and should I acquire a family hereafter I shall furnish particulars thereon in the above form.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cpnt1.HorizontalAlignment = Element.ALIGN_JUSTIFIED; //0=Left, 1=Centre, 2=Right
            cpnt1.Colspan = 6;
            cpnt1.Border = 0;
            cpnt1.SetLeading(0f, 1.2f);
            table3.AddCell(cpnt1);

            PdfPCell cpnt2 = new PdfPCell(new Phrase("I hereby nominate the following person for receiving the monthly widow pension (admissible under para 162(a)(i) and (ii) in the event of my death without leaving any eligible family member for receiving pension.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cpnt2.HorizontalAlignment = Element.ALIGN_JUSTIFIED; //0=Left, 1=Centre, 2=Right
            cpnt2.Colspan = 6;
            cpnt2.Border = 0;
            cpnt2.PaddingTop = 5;
            cpnt2.SetLeading(0f, 1.2f);
            table3.AddCell(cpnt2);


            table3.AddCell(cpartBemp);
            table3.AddCell(cpartBemp);
            table3.AddCell(cpartBemp);
            table3.AddCell(cpartBemp);


            PdfPCell cnameaddressp3 = new PdfPCell(new Phrase("Name and Address of the Nominee", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cnameaddressp3.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cnameaddressp3.Colspan = 4;
            cnameaddressp3.MinimumHeight = 30;
            table3.AddCell(cnameaddressp3);

            PdfPCell cndobp3 = new PdfPCell(new Phrase("Date of Birth", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cndobp3.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cndobp3.Colspan = 1;
            table3.AddCell(cndobp3);

            PdfPCell cnrelationshipp3 = new PdfPCell(new Phrase("Relationship with the member", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cnrelationshipp3.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cnrelationshipp3.Colspan = 1;
            table3.AddCell(cnrelationshipp3);

            PdfPCell csnonop3 = new PdfPCell(new Phrase("1", bodyfont));
            csnonop3.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            csnonop3.Colspan = 3;
            csnonop3.MinimumHeight = 5;
            table3.AddCell(csnonop3);

            PdfPCell cdobp3 = new PdfPCell(new Phrase("2", bodyfont));
            cdobp3.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cdobp3.Colspan = 1;
            table3.AddCell(cdobp3);

            PdfPCell cnrelationp3 = new PdfPCell(new Phrase("3", bodyfont));
            cnrelationp3.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cnrelationp3.Colspan = 2;
            table3.AddCell(cnrelationp3);

            PdfPCell cnameaddressp31 = new PdfPCell(new Phrase("\n\n\n\n", bodyfont));
            cnameaddressp31.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cnameaddressp31.Colspan = 3;
            table3.AddCell(cnameaddressp31);

            PdfPCell cndobp31 = new PdfPCell(new Phrase("", bodyfont));
            cndobp31.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cndobp31.Colspan = 1;
            table3.AddCell(cndobp31);

            PdfPCell cnrelationshipp31 = new PdfPCell(new Phrase("", bodyfont));
            cnrelationshipp31.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cnrelationshipp31.Colspan = 2;
            table3.AddCell(cnrelationshipp31);

            table3.AddCell(cpartBemp);
            table3.AddCell(cpartBemp);
            table3.AddCell(cpartBemp);
            table3.AddCell(cpartBemp);

            PdfPCell cdate = new PdfPCell(new Phrase("Date : ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cdate.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cdate.Colspan = 3;
            cdate.PaddingTop = 5;
            cdate.Border = 0;
            table3.AddCell(cdate);

            PdfPCell cnsign = new PdfPCell(new Phrase("Signature of thumb impression of the Subscriber", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cnsign.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cnsign.Colspan = 3;
            cnsign.Border = 0;
            cnsign.PaddingTop = 30;
            table3.AddCell(cnsign);

            table3.AddCell(cpartBemp);
            table3.AddCell(cpartBemp);

            PdfPCell cstrike = new PdfPCell(new Phrase("** Strike out whichever is not applicable", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 1, Font.BOLD, BaseColor.BLACK))); ;
            cstrike.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cstrike.Colspan = 6;
            cstrike.Border = 0;
            table3.AddCell(cstrike);

            table3.AddCell(cpartBemp);
            table3.AddCell(cpartBemp);




            PdfPCell ccert = new PdfPCell(new Phrase("CERTIFICATE BY EMPLOYER", headfont));
            ccert.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            ccert.Colspan = 6;
            ccert.Border = 0;
            table3.AddCell(ccert);

            table3.AddCell(cpartBemp);
            table3.AddCell(cpartBemp);
            table3.AddCell(cpartBemp);


            PdfPCell ccertdesc = new PdfPCell(new Phrase("Certified that the above declaration and nomination has been signed/thumb impressed before me by Shri/Smt./Kum. " + name + " employed in my establishment after he/she has read the entries/ entries been read over to him/her by me and got confirmed by him/her", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
            ccertdesc.HorizontalAlignment = Element.ALIGN_JUSTIFIED; //0=Left, 1=Centre, 2=Right
            ccertdesc.Colspan = 6;
            ccertdesc.Border = 0;
            ccertdesc.SetLeading(0f, 1.2f);
            table3.AddCell(ccertdesc);

            table3.AddCell(cpartBemp);

            PdfPCell cnplace = new PdfPCell(new Phrase("Place : ____________________", Subheadfont));
            cnplace.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cnplace.Colspan = 3;
            cnplace.PaddingTop = 30;
            cnplace.Border = 0;
            cnplace.PaddingBottom = 30;
            table3.AddCell(cnplace);

            PdfPCell cnemp = new PdfPCell(new Phrase("_________________________", Subheadfont));
            cnemp.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cnemp.Colspan = 3;
            cnemp.Border = 0;
            cnemp.PaddingTop = 30;
            cnemp.PaddingBottom = 30;
            table3.AddCell(cnemp);
            table3.AddCell(cpartBemp);



            PdfPCell cnbxsign = new PdfPCell(new Phrase(" ", bodyfont));
            cnbxsign.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cnbxsign.Colspan = 2;
            cnbxsign.MinimumHeight = 100;
            table3.AddCell(cnbxsign);

            PdfPCell cnsgn = new PdfPCell(new Phrase("  Signature of the employer or other Authorized Officers of the\n  Establishment \n\n\n  Destination __________________", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cnsgn.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cnsgn.Colspan = 4;
            cnsgn.Border = 0;
            //cnsgn.PaddingTop = 30;
            table3.AddCell(cnsgn);

            document.Add(table3);


            string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "PF.pdf";

            document.Close();
            Response.ContentType = "application/pdf";
            Response.AddHeader("content-disposition", "attachment;filename=" + filename);
            Response.Buffer = true;
            Response.Clear();
            Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
            Response.OutputStream.Flush();
            Response.End();

        }

        protected void btnICICIForm_Click(object sender, EventArgs e)
        {
            int Fontsize = 11;
            string fontsyle = "verdana";

            #region Variable Declaration

            string contactno = "";
            string EmailId = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string SpouseName = "";
            string FatherName = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";



            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";


            string prTown = "";
            string prPostOffice = "";
            string prTaluka = "";
            string prPoliceStation = "";
            string prcity = "";
            string prLmark = "";
            string prPincode = "";
            string prState = "";


            string peTown = "";
            string pePostOffice = "";
            string peTaluka = "";
            string pePoliceStation = "";
            string pecity = "";
            string pelmark = "";
            string pePincode = "";
            string peState = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";

            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string relationoccupation = "";
            string relationresidence = "";
            string relationplace = "";
            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion


            string AadharCardNo = "";
            string VoterIDNo = "";
            string PanCardNo = "";
            string DrivingLicenseNo = "";

            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration

            #region Begin Assign Values to The Variables
            SPName = "EmpBiodataPDF";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }
            EmailId = dtEmpdetails.Rows[0]["Email"].ToString();

            string Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
            string EmpGender = "";

            if (Gender == "M")
            {
                EmpGender = "Male";
            }
            if (Gender == "F")
            {
                EmpGender = "Female";
            }

            string Title = "";
            string spousetitle = "";

            if (Gender == "Male")
            {
                Title = "Mr";
            }
            else
            {
                Title = "Ms";
            }


            int diffdays = diffDate.Days;

            string Finame = "";
            string Sname = "";
            string Lname = "";

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                Finame = dtEmpdetails.Rows[0]["Fname"].ToString();
                Sname = dtEmpdetails.Rows[0]["Sname"].ToString();
                Lname = dtEmpdetails.Rows[0]["Lname"].ToString();


                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                FatherName = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                Mname = dtEmpdetails.Rows[0]["empmothername"].ToString();
                SpouseName = dtEmpdetails.Rows[0]["EmpSpouseName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }



                AadharCardNo = dtEmpdetails.Rows[0]["AadharCardNo"].ToString();
                VoterIDNo = dtEmpdetails.Rows[0]["VoterIDNo"].ToString();
                PanCardNo = dtEmpdetails.Rows[0]["PanCardNo"].ToString();
                DrivingLicenseNo = dtEmpdetails.Rows[0]["DrivingLicenseNo"].ToString();

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prTown = dtEmpdetails.Rows[0]["prTown"].ToString();
                prPostOffice = dtEmpdetails.Rows[0]["prPostOffice"].ToString();
                prTaluka = dtEmpdetails.Rows[0]["prTaluka"].ToString();
                prPoliceStation = dtEmpdetails.Rows[0]["prPoliceStation"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();

                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peTown = dtEmpdetails.Rows[0]["peTown"].ToString();
                pePostOffice = dtEmpdetails.Rows[0]["pePostOffice"].ToString();
                peTaluka = dtEmpdetails.Rows[0]["peTaluka"].ToString();
                pePoliceStation = dtEmpdetails.Rows[0]["pePoliceStation"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                //EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                //EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                //EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                //bool original1 = false;
                //bool original2 = false;
                //bool original3 = false;
                //bool original4 = false;

                //if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                //{
                //    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                //}
                //if (original1 == true)
                //{
                //    Original1 = "Yes";
                //}
                //else
                //{
                //    Original1 = "No";
                //}

                //if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                //{
                //    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                //}
                //if (original2 == true)
                //{
                //    Original2 = "Yes";
                //}
                //else
                //{
                //    Original2 = "No";
                //}

                //if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                //{
                //    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                //}
                //if (original3 == true)
                //{
                //    Original3 = "Yes";
                //}
                //else
                //{
                //    Original3 = "No";
                //}

                //if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                //{
                //    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                //}
                //if (original4 == true)
                //{
                //    Original4 = "Yes";
                //}
                //else
                //{
                //    Original4 = "No";
                //}



                //bool xerox1 = false;
                //bool xerox2 = false;
                //bool xerox3 = false;
                //bool xerox4 = false;

                //if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                //{
                //    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                //}
                //if (xerox1 == true)
                //{
                //    Xerox1 = "Yes";
                //}
                //else
                //{
                //    Xerox1 = "No";
                //}

                //if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                //{
                //    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                //}
                //if (xerox2 == true)
                //{
                //    Xerox2 = "Yes";
                //}
                //else
                //{
                //    Xerox2 = "No";
                //}

                //if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                //{
                //    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                //}
                //if (xerox3 == true)
                //{
                //    Xerox3 = "Yes";
                //}
                //else
                //{
                //    Xerox3 = "No";
                //}

                //if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                //{
                //    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                //}
                //if (xerox4 == true)
                //{
                //    Xerox4 = "Yes";
                //}
                //else
                //{
                //    Xerox4 = "No";
                //}

                //Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                //Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                //Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                //Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                //ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                //if (ReplacementFor == "0")
                //{
                //    ReplacementFor = "";
                //}

                #endregion


                if (SpouseName.Length > 0)
                {
                    if (Gender == "Male")
                    {
                        spousetitle = "Mrs";
                    }
                    if (Gender == "Female")
                    {
                        spousetitle = "Mr";
                    }
                }


                MemoryStream ms = new MemoryStream();
                Document document = new Document(PageSize.LEGAL);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("assets/Images");
                string imagepathpf1 = Server.MapPath("assets/images");
                string imagepath5 = Server.MapPath("assets/" + CmpIDPrefix + "IDlogo.png");

                #region for ICICI Form

                PdfPTable tblicici = new PdfPTable(3);
                tblicici.TotalWidth = 550f;
                tblicici.LockedWidth = true;
                float[] widthbx = new float[] { 4f, 4f, 4f };
                tblicici.SetWidths(widthbx);
                BaseColor color = new BaseColor(128, 0, 0);
                int Font_size = 8;
                int head_font_size = 10;

                PdfPTable tblicici1 = new PdfPTable(2);
                tblicici1.TotalWidth = 450f;
                tblicici1.LockedWidth = true;
                float[] widthbxn1 = new float[] { 4f, 4f };
                tblicici1.SetWidths(widthbxn1);

                PdfPTable tblicici211 = new PdfPTable(1);
                tblicici211.TotalWidth = 100f;
                tblicici211.LockedWidth = true;
                float[] widthbxn2 = new float[] { 1f };
                tblicici211.SetWidths(widthbxn2);

                iTextSharp.text.Image icici = iTextSharp.text.Image.GetInstance(imagepath1 + "/icicin.png");
                PdfPCell icicilogo = new PdfPCell();
                Paragraph logo = new Paragraph();
                logo.Add(new Chunk(icici, 0, 0));
                icicilogo.AddElement(logo);
                icicilogo.HorizontalAlignment = 0;
                icicilogo.Colspan = 0;
                icicilogo.Border = 0;
                tblicici.AddCell(icicilogo);

                PdfPCell Nosregion = new PdfPCell(new Phrase("Ref No :              \n\nCard No :                 \n\nDMA/DST Code :               ", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, color)));
                Nosregion.HorizontalAlignment = 0;
                Nosregion.Colspan = 0;
                Nosregion.Border = 0;
                tblicici.AddCell(Nosregion);

                PdfPCell AppNo = new PdfPCell(new Phrase("Application No.:", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, color)));
                AppNo.HorizontalAlignment = 1;
                AppNo.Colspan = 0;
                tblicici.AddCell(AppNo);

                PdfPCell emcell = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, 10, Font.BOLD, BaseColor.BLACK)));
                emcell.HorizontalAlignment = 1;
                emcell.Colspan = 3;
                emcell.Border = 0;
                tblicici.AddCell(emcell);
                tblicici.AddCell(emcell);

                PdfPCell formHeading = new PdfPCell(new Phrase("Prepaid Card Application Form", FontFactory.GetFont(fontsyle, 10, Font.BOLD, color)));
                formHeading.HorizontalAlignment = 1;
                formHeading.Colspan = 3;
                formHeading.MinimumHeight = 15;
                formHeading.BorderColor = new BaseColor(128, 0, 0);
                tblicici.AddCell(formHeading);

                tblicici.AddCell(emcell);

                PdfPCell headingdetails = new PdfPCell(new Phrase("Please fill in the form in BLOCK LETTERS and attach all relevant documents as specified on this form. Please complete all sections. Tick boxes as applicable.", FontFactory.GetFont(fontsyle, Font_size - 1, Font.BOLD | Font.UNDERLINE, BaseColor.BLACK)));
                headingdetails.HorizontalAlignment = 0;
                headingdetails.Colspan = 3;
                headingdetails.Border = 0;
                tblicici.AddCell(headingdetails);

                headingdetails = new PdfPCell(new Phrase("FIELDS WITH * ARE MANDATORY \n\n For office use only", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                headingdetails.HorizontalAlignment = 0;
                headingdetails.Colspan = 2;
                headingdetails.Border = 0;
                tblicici1.AddCell(headingdetails);

                headingdetails = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                headingdetails.HorizontalAlignment = 0;
                headingdetails.Colspan = 2;
                headingdetails.Border = 0;
                tblicici1.AddCell(headingdetails);

                headingdetails = new PdfPCell(new Phrase("CKYCR available* ", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                headingdetails.HorizontalAlignment = 0;
                headingdetails.Colspan = 1;
                headingdetails.Border = 0;
                tblicici1.AddCell(headingdetails);

                iTextSharp.text.Image sqpng = iTextSharp.text.Image.GetInstance(imagepathpf1 + "/checkbox1.png");
                PdfPCell tickop11 = new PdfPCell(sqpng);
                tickop11.HorizontalAlignment = 0;
                tickop11.Colspan = 1;
                tickop11.Border = 0;
                tickop11.PaddingLeft = -95;
                tblicici1.AddCell(tickop11);


                headingdetails = new PdfPCell(new Phrase("New", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                headingdetails.HorizontalAlignment = 0;
                headingdetails.Colspan = 2;
                headingdetails.Border = 0;
                headingdetails.PaddingLeft = 150;
                headingdetails.PaddingTop = -12;
                tblicici1.AddCell(headingdetails);


                headingdetails = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                headingdetails.HorizontalAlignment = 0;
                headingdetails.Colspan = 2;
                headingdetails.Border = 0;
                tblicici1.AddCell(headingdetails);

                headingdetails = new PdfPCell(new Phrase("KYC Number", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                headingdetails.HorizontalAlignment = 0;
                headingdetails.Colspan = 2;
                headingdetails.Border = 0;
                tblicici1.AddCell(headingdetails);

                headingdetails = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                headingdetails.HorizontalAlignment = 0;
                headingdetails.Colspan = 2;
                headingdetails.Border = 0;
                tblicici1.AddCell(headingdetails);

                headingdetails = new PdfPCell(new Phrase("Account Type*", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                headingdetails.HorizontalAlignment = 0;
                headingdetails.Colspan = 1;
                headingdetails.Border = 0;
                tblicici1.AddCell(headingdetails);


                iTextSharp.text.Image sqpng1 = iTextSharp.text.Image.GetInstance(imagepathpf1 + "/checkbox1.png");
                tickop11 = new PdfPCell(sqpng1);
                tickop11.HorizontalAlignment = 0;
                tickop11.Colspan = 1;
                tickop11.Border = 0;
                tickop11.PaddingLeft = -95;
                tblicici1.AddCell(tickop11);


                headingdetails = new PdfPCell(new Phrase("Normal", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                headingdetails.HorizontalAlignment = 0;
                headingdetails.Colspan = 2;
                headingdetails.Border = 0;
                headingdetails.PaddingLeft = 150;
                headingdetails.PaddingTop = -12;
                tblicici1.AddCell(headingdetails);


                headingdetails = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                headingdetails.HorizontalAlignment = 0;
                headingdetails.Colspan = 2;
                headingdetails.Border = 0;
                headingdetails.FixedHeight = 60;
                tblicici1.AddCell(headingdetails);

                PdfPCell childTable1 = new PdfPCell(tblicici1);
                childTable1.Border = 0;
                childTable1.Colspan = 2;
                childTable1.HorizontalAlignment = 0;
                childTable1.PaddingLeft = 80;
                tblicici.AddCell(childTable1);

                headingdetails = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                headingdetails.HorizontalAlignment = 0;
                headingdetails.Colspan = 2;
                headingdetails.Border = 0;
                tblicici211.AddCell(headingdetails);


                AppNo = new PdfPCell(new Phrase("Applicant's Photo \n Please affix a recent photograph. Please sign in black ink within the box", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, color)));
                AppNo.HorizontalAlignment = 1;
                AppNo.Colspan = 1;
                // AppNo.FixedHeight = 35;
                tblicici211.AddCell(AppNo);

                PdfPCell childTable2 = new PdfPCell(tblicici211);
                childTable2.Border = 0;
                childTable2.Colspan = 1;
                childTable2.HorizontalAlignment = 0;
                childTable2.PaddingLeft = 50;

                tblicici.AddCell(childTable2);


                tblicici.AddCell(emcell);




                PdfPCell headingdate = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, color)));
                emcell.HorizontalAlignment = 0;
                emcell.Colspan = 0;
                emcell.Border = 0;
                tblicici.AddCell(emcell);
                tblicici.AddCell(emcell);




                document.Add(tblicici);

                PdfPTable tblicicipd = new PdfPTable(6);
                tblicicipd.TotalWidth = 550f;
                tblicicipd.LockedWidth = true;
                float[] widthbx1 = new float[] { 2f, 1f, 2f, 2.5f, 2f, 2.5f };
                tblicicipd.SetWidths(widthbx1);

                PdfPCell pdemcell = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, 10, Font.BOLD, BaseColor.BLACK)));
                pdemcell.HorizontalAlignment = 1;
                pdemcell.Colspan = 6;
                pdemcell.Border = 0;
                tblicicipd.AddCell(pdemcell);
                tblicicipd.AddCell(pdemcell);


                PdfPCell personaldetails = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, head_font_size, Font.BOLD, color)));
                personaldetails.HorizontalAlignment = 1;
                personaldetails.Colspan = 6;
                personaldetails.BorderColor = new BaseColor(128, 0, 0);
                tblicicipd.AddCell(personaldetails);

                tblicicipd.AddCell(pdemcell);
                tblicicipd.AddCell(pdemcell);

                PdfPCell applnamehead = new PdfPCell(new Phrase("Prefix                   First Name", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applnamehead.HorizontalAlignment = 1;
                applnamehead.Colspan = 4;
                applnamehead.Border = 0;
                applnamehead.PaddingLeft = -23;
                tblicicipd.AddCell(applnamehead);

                applnamehead = new PdfPCell(new Phrase("Middle Name", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applnamehead.HorizontalAlignment = 0;
                applnamehead.Colspan = 0;
                applnamehead.Border = 0;
                applnamehead.PaddingLeft = -65;
                tblicicipd.AddCell(applnamehead);

                applnamehead = new PdfPCell(new Phrase("Last Name", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applnamehead.HorizontalAlignment = 0;
                applnamehead.Colspan = 0;
                applnamehead.Border = 0;
                applnamehead.PaddingLeft = -30;
                tblicicipd.AddCell(applnamehead);

                applnamehead = new PdfPCell(new Phrase("*Applicant Name", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applnamehead.HorizontalAlignment = 0;
                applnamehead.Colspan = 0;
                applnamehead.Border = 0;
                tblicicipd.AddCell(applnamehead);


                PdfPCell applnamecol = new PdfPCell(new Phrase(":      " + Title, FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applnamecol.HorizontalAlignment = 0;
                applnamecol.Colspan = 0;
                applnamecol.Border = 0;
                tblicicipd.AddCell(applnamecol);



                PdfPCell applname = new PdfPCell(new Phrase(Finame, FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applname.HorizontalAlignment = 0;
                applname.Colspan = 2;
                applname.Border = 0;
                tblicicipd.AddCell(applname);

                applname = new PdfPCell(new Phrase(Sname, FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applname.HorizontalAlignment = 0;
                applname.Colspan = 1;
                applname.Border = 0;
                applname.PaddingLeft = -65;
                tblicicipd.AddCell(applname);

                applname = new PdfPCell(new Phrase(Lname, FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applname.HorizontalAlignment = 0;
                applname.Colspan = 1;
                applname.Border = 0;
                applname.PaddingLeft = -30;
                tblicicipd.AddCell(applname);

                tblicicipd.AddCell(pdemcell);

                PdfPCell applfatherhead = new PdfPCell(new Phrase("*Father Name", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applfatherhead.HorizontalAlignment = 0;
                applfatherhead.Colspan = 0;
                applfatherhead.Border = 0;
                tblicicipd.AddCell(applfatherhead);

                if (FatherName.Length > 0)
                {
                    PdfPCell applfathercol = new PdfPCell(new Phrase(":      Mr", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                    applfathercol.HorizontalAlignment = 0;
                    applfathercol.Colspan = 0;
                    applfathercol.Border = 0;
                    tblicicipd.AddCell(applfathercol);
                }
                else
                {
                    PdfPCell applfathercol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                    applfathercol.HorizontalAlignment = 0;
                    applfathercol.Colspan = 0;
                    applfathercol.Border = 0;
                    tblicicipd.AddCell(applfathercol);
                }


                PdfPCell applfather = new PdfPCell(new Phrase(FatherName, FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applfather.HorizontalAlignment = 0;
                applfather.Colspan = 0;
                applfather.Border = 0;
                tblicicipd.AddCell(applfather);

                tblicicipd.AddCell(pdemcell);

                applfatherhead = new PdfPCell(new Phrase("*Spouse Name", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applfatherhead.HorizontalAlignment = 0;
                applfatherhead.Colspan = 0;
                applfatherhead.Border = 0;
                tblicicipd.AddCell(applfatherhead);

                applfatherhead = new PdfPCell(new Phrase(":      " + spousetitle, FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applfatherhead.HorizontalAlignment = 0;
                applfatherhead.Colspan = 0;
                applfatherhead.Border = 0;
                tblicicipd.AddCell(applfatherhead);

                applfather = new PdfPCell(new Phrase(SpouseName, FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applfather.HorizontalAlignment = 0;
                applfather.Colspan = 0;
                applfather.Border = 0;
                tblicicipd.AddCell(applfather);

                tblicicipd.AddCell(pdemcell);

                applfatherhead = new PdfPCell(new Phrase("*Mother Name", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applfatherhead.HorizontalAlignment = 0;
                applfatherhead.Colspan = 0;
                applfatherhead.Border = 0;
                tblicicipd.AddCell(applfatherhead);
                if (Mname.Length > 0)
                {
                    applfatherhead = new PdfPCell(new Phrase(":      Mrs", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                    applfatherhead.HorizontalAlignment = 0;
                    applfatherhead.Colspan = 0;
                    applfatherhead.Border = 0;
                    tblicicipd.AddCell(applfatherhead);
                }
                else
                {
                    applfatherhead = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                    applfatherhead.HorizontalAlignment = 0;
                    applfatherhead.Colspan = 0;
                    applfatherhead.Border = 0;
                    tblicicipd.AddCell(applfatherhead);
                }
                applfather = new PdfPCell(new Phrase(Mname, FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applfather.HorizontalAlignment = 0;
                applfather.Colspan = 0;
                applfather.Border = 0;
                tblicicipd.AddCell(applfather);

                tblicicipd.AddCell(pdemcell);



                applfatherhead = new PdfPCell(new Phrase("Maiden Name (If any*)", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applfatherhead.HorizontalAlignment = 0;
                applfatherhead.Colspan = 0;
                applfatherhead.Border = 0;
                tblicicipd.AddCell(applfatherhead);

                applfatherhead = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applfatherhead.HorizontalAlignment = 0;
                applfatherhead.Colspan = 0;
                applfatherhead.Border = 0;
                tblicicipd.AddCell(applfatherhead);

                applfather = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applfather.HorizontalAlignment = 0;
                applfather.Colspan = 0;
                applfather.Border = 0;
                tblicicipd.AddCell(applfather);

                tblicicipd.AddCell(pdemcell);


                PdfPCell applmotherhead = new PdfPCell(new Phrase("* Mother's Maiden Name", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applmotherhead.HorizontalAlignment = 0;
                applmotherhead.Colspan = 0;
                applmotherhead.Border = 0;
                tblicicipd.AddCell(applmotherhead);

                PdfPCell applmothercol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applmothercol.HorizontalAlignment = 0;
                applmothercol.Colspan = 0;
                applmothercol.Border = 0;
                tblicicipd.AddCell(applmothercol);

                PdfPCell applmother = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applmother.HorizontalAlignment = 0;
                applmother.Colspan = 0;
                applmother.Border = 0;
                tblicicipd.AddCell(applmother);

                applmotherhead = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applmotherhead.HorizontalAlignment = 0;
                applmotherhead.Colspan = 0;
                applmotherhead.Border = 0;
                tblicicipd.AddCell(applmotherhead);

                applmothercol = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applmothercol.HorizontalAlignment = 0;
                applmothercol.Colspan = 0;
                applmothercol.Border = 0;
                tblicicipd.AddCell(applmothercol);

                applmother = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applmother.HorizontalAlignment = 0;
                applmother.Colspan = 0;
                applmother.Border = 0;
                tblicicipd.AddCell(applmother);

                PdfPCell applgenderhead = new PdfPCell(new Phrase("* Gender", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applgenderhead.HorizontalAlignment = 0;
                applgenderhead.Colspan = 0;
                applgenderhead.Border = 0;
                tblicicipd.AddCell(applgenderhead);

                PdfPCell applgendercol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applgendercol.HorizontalAlignment = 0;
                applgendercol.Colspan = 0;
                applgendercol.Border = 0;
                tblicicipd.AddCell(applgendercol);

                PdfPCell applgender = new PdfPCell(new Phrase(Gender, FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applgender.HorizontalAlignment = 0;
                applgender.Colspan = 0;
                applgender.Border = 0;
                tblicicipd.AddCell(applgender);


                applmotherhead = new PdfPCell(new Phrase("*Date of Birth", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applmotherhead.HorizontalAlignment = 0;
                applmotherhead.Colspan = 0;
                applmotherhead.Border = 0;
                tblicicipd.AddCell(applmotherhead);

                applmothercol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applmothercol.HorizontalAlignment = 0;
                applmothercol.Colspan = 0;
                applmothercol.Border = 0;
                tblicicipd.AddCell(applmothercol);

                applmother = new PdfPCell(new Phrase(dateofbirth, FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applmother.HorizontalAlignment = 0;
                applmother.Colspan = 0;
                applmother.Border = 0;
                tblicicipd.AddCell(applmother);


                PdfPCell martialstathead = new PdfPCell(new Phrase("* Martial Status", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                martialstathead.HorizontalAlignment = 0;
                martialstathead.Colspan = 0;
                martialstathead.Border = 0;
                tblicicipd.AddCell(martialstathead);

                PdfPCell martialcol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                martialcol.HorizontalAlignment = 0;
                martialcol.Colspan = 0;
                martialcol.Border = 0;
                tblicicipd.AddCell(martialcol);

                PdfPCell martialstatus = new PdfPCell(new Phrase(maritalstatus, FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                martialstatus.HorizontalAlignment = 0;
                martialstatus.Colspan = 0;
                martialstatus.Border = 0;
                tblicicipd.AddCell(martialstatus);


                PdfPCell applEducationhead = new PdfPCell(new Phrase("*Nationality", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applEducationhead.HorizontalAlignment = 0;
                applEducationhead.Colspan = 0;
                applEducationhead.Border = 0;
                tblicicipd.AddCell(applEducationhead);

                PdfPCell applEducationcol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applEducationcol.HorizontalAlignment = 0;
                applEducationcol.Colspan = 0;
                applEducationcol.Border = 0;
                tblicicipd.AddCell(applEducationcol);

                PdfPCell applEducation = new PdfPCell(new Phrase(nationality, FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applEducation.HorizontalAlignment = 0;
                applEducation.Colspan = 4;
                applEducation.Border = 0;
                tblicicipd.AddCell(applEducation);

                tblicicipd.AddCell(pdemcell);





                PdfPCell appldobhead = new PdfPCell(new Phrase("*Education", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                appldobhead.HorizontalAlignment = 0;
                appldobhead.Colspan = 0;
                appldobhead.Border = 0;
                tblicicipd.AddCell(appldobhead);

                PdfPCell appldobcol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                appldobcol.HorizontalAlignment = 0;
                appldobcol.Colspan = 0;
                appldobcol.Border = 0;
                tblicicipd.AddCell(appldobcol);

                PdfPCell appldob = new PdfPCell(new Phrase(educationqualification, FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                appldob.HorizontalAlignment = 0;
                appldob.Colspan = 0;
                appldob.Border = 0;
                tblicicipd.AddCell(appldob);

                tblicicipd.AddCell(pdemcell);

                PdfPCell applNationalityhead = new PdfPCell(new Phrase("* Residential Status", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applNationalityhead.HorizontalAlignment = 0;
                applNationalityhead.Colspan = 0;
                applNationalityhead.Border = 0;
                tblicicipd.AddCell(applNationalityhead);

                PdfPCell applNationalitycol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applNationalitycol.HorizontalAlignment = 0;
                applNationalitycol.Colspan = 0;
                applNationalitycol.Border = 0;
                tblicicipd.AddCell(applNationalitycol);

                PdfPCell applNationality = new PdfPCell(new Phrase("Resident Individual", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applNationality.HorizontalAlignment = 0;
                applNationality.Colspan = 0;
                applNationality.Border = 0;
                tblicicipd.AddCell(applNationality);

                tblicicipd.AddCell(pdemcell);



                PdfPCell applgrosshead = new PdfPCell(new Phrase("* Occupation Type", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applgrosshead.HorizontalAlignment = 0;
                applgrosshead.Colspan = 0;
                applgrosshead.Border = 0;
                tblicicipd.AddCell(applgrosshead);

                PdfPCell applgrosscol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applgrosscol.HorizontalAlignment = 0;
                applgrosscol.Colspan = 0;
                applgrosscol.Border = 0;
                tblicicipd.AddCell(applgrosscol);

                PdfPCell applgross = new PdfPCell(new Phrase("Private Sector", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applgross.HorizontalAlignment = 0;
                applgross.Colspan = 4;
                applgross.Border = 0;
                tblicicipd.AddCell(applgross);

                tblicicipd.AddCell(pdemcell);



                PdfPCell addressdetails = new PdfPCell(new Phrase("COMMUNICATION ADDRESS", FontFactory.GetFont(fontsyle, head_font_size, Font.BOLD, color)));
                addressdetails.HorizontalAlignment = 1;
                addressdetails.Colspan = 6;
                addressdetails.BorderColor = new BaseColor(128, 0, 0);
                tblicicipd.AddCell(addressdetails);

                tblicicipd.AddCell(pdemcell);
                tblicicipd.AddCell(pdemcell);
                tblicicipd.AddCell(pdemcell);
                tblicicipd.AddCell(pdemcell);
                tblicicipd.AddCell(pdemcell);


                PdfPCell applflatnohead = new PdfPCell(new Phrase("* Flat No./Society Name", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applflatnohead.HorizontalAlignment = 0;
                applflatnohead.Colspan = 0;
                //   applflatnohead.PaddingTop = 15;
                applflatnohead.Border = 0;
                tblicicipd.AddCell(applflatnohead);

                PdfPCell applflatnocol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applflatnocol.HorizontalAlignment = 0;
                applflatnocol.Colspan = 0;
                applflatnocol.Border = 0;
                tblicicipd.AddCell(applflatnocol);

                PdfPCell applflatno = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applflatno.HorizontalAlignment = 0;
                applflatno.Colspan = 4;
                applflatno.Border = 0;
                tblicicipd.AddCell(applflatno);

                tblicicipd.AddCell(pdemcell);

                PdfPCell applroadnohead = new PdfPCell(new Phrase("* Road No./Name", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applroadnohead.HorizontalAlignment = 0;
                //  applroadnohead.PaddingTop = 15;
                applroadnohead.Colspan = 0;
                applroadnohead.Border = 0;
                tblicicipd.AddCell(applroadnohead);

                PdfPCell applroadnocol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applroadnocol.HorizontalAlignment = 0;
                applroadnocol.Colspan = 0;
                applroadnocol.Border = 0;
                tblicicipd.AddCell(applroadnocol);

                PdfPCell applroadno = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applroadno.HorizontalAlignment = 0;
                applroadno.Colspan = 4;
                applroadno.Border = 0;
                tblicicipd.AddCell(applroadno);

                tblicicipd.AddCell(pdemcell);

                PdfPCell landmarkhead = new PdfPCell(new Phrase("* Nearest Landmark", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                landmarkhead.HorizontalAlignment = 0;
                landmarkhead.Colspan = 0;
                //  landmarkhead.PaddingTop = 15;
                landmarkhead.Border = 0;
                tblicicipd.AddCell(landmarkhead);

                PdfPCell landmarkcol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                landmarkcol.HorizontalAlignment = 0;
                landmarkcol.Colspan = 0;
                landmarkcol.Border = 0;
                tblicicipd.AddCell(landmarkcol);

                PdfPCell landmark = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                landmark.HorizontalAlignment = 0;
                landmark.Colspan = 0;
                landmark.Border = 0;
                tblicicipd.AddCell(landmark);


                PdfPCell cityhead = new PdfPCell(new Phrase("*City / Town / Village", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                cityhead.HorizontalAlignment = 0;
                cityhead.Colspan = 0;
                //  cityhead.PaddingTop = 15;
                cityhead.Border = 0;
                tblicicipd.AddCell(cityhead);

                PdfPCell citycol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                citycol.HorizontalAlignment = 0;
                citycol.Colspan = 0;
                citycol.Border = 0;
                tblicicipd.AddCell(citycol);

                PdfPCell applcity = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applcity.HorizontalAlignment = 0;
                applcity.Colspan = 0;
                applcity.Border = 0;
                tblicicipd.AddCell(applcity);


                PdfPCell emailhead = new PdfPCell(new Phrase("*District                            :                                               *Pin Code:                      State Code:                   * Country Code:91 ", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                emailhead.HorizontalAlignment = 0;
                emailhead.Colspan = 6;
                emailhead.Border = 0;
                tblicicipd.AddCell(emailhead);

                PdfPCell emailcol = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                emailcol.HorizontalAlignment = 0;
                emailcol.Colspan = 0;
                emailcol.Border = 0;
                tblicicipd.AddCell(emailcol);

                PdfPCell email = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                email.HorizontalAlignment = 0;
                email.Colspan = 0;
                email.Border = 0;
                tblicicipd.AddCell(email);


                tblicicipd.AddCell(pdemcell);
                tblicicipd.AddCell(pdemcell);
                tblicicipd.AddCell(pdemcell);
                tblicicipd.AddCell(pdemcell);
                tblicicipd.AddCell(pdemcell);



                PdfPCell addressdetails1 = new PdfPCell(new Phrase("PERMANENT ADDRESS", FontFactory.GetFont(fontsyle, head_font_size, Font.BOLD, color)));
                addressdetails1.HorizontalAlignment = 1;
                addressdetails1.Colspan = 6;
                addressdetails1.BorderColor = new BaseColor(128, 0, 0);
                tblicicipd.AddCell(addressdetails1);

                tblicicipd.AddCell(pdemcell);
                tblicicipd.AddCell(pdemcell);
                tblicicipd.AddCell(pdemcell);
                tblicicipd.AddCell(pdemcell);
                tblicicipd.AddCell(pdemcell);

                PdfPCell applflatnohead1 = new PdfPCell(new Phrase("* Flat No./Society Name", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applflatnohead1.HorizontalAlignment = 0;
                applflatnohead1.Colspan = 0;
                applflatnohead1.Border = 0;
                tblicicipd.AddCell(applflatnohead1);

                PdfPCell applflatnocol1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applflatnocol1.HorizontalAlignment = 0;
                applflatnocol1.Colspan = 0;
                applflatnocol1.Border = 0;
                tblicicipd.AddCell(applflatnocol1);

                PdfPCell applflatno1 = new PdfPCell(new Phrase(pelmark, FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applflatno1.HorizontalAlignment = 0;
                applflatno1.Colspan = 4;
                applflatno1.Border = 0;
                tblicicipd.AddCell(applflatno1);

                tblicicipd.AddCell(pdemcell);

                PdfPCell applroadnohead1 = new PdfPCell(new Phrase("* Road No./Name", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applroadnohead1.HorizontalAlignment = 0;
                applroadnohead1.Colspan = 0;
                applroadnohead1.Border = 0;
                tblicicipd.AddCell(applroadnohead1);

                PdfPCell applroadnocol1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applroadnocol1.HorizontalAlignment = 0;
                applroadnocol1.Colspan = 0;
                applroadnocol1.Border = 0;
                tblicicipd.AddCell(applroadnocol1);

                PdfPCell applroadno1 = new PdfPCell(new Phrase(peTown, FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applroadno1.HorizontalAlignment = 0;
                applroadno1.Colspan = 4;
                applroadno1.Border = 0;
                tblicicipd.AddCell(applroadno1);

                tblicicipd.AddCell(pdemcell);

                PdfPCell landmarkhead1 = new PdfPCell(new Phrase("* Nearest Landmark", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                landmarkhead1.HorizontalAlignment = 0;
                landmarkhead1.Colspan = 0;
                landmarkhead1.Border = 0;
                tblicicipd.AddCell(landmarkhead1);

                PdfPCell landmarkcol1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                landmarkcol1.HorizontalAlignment = 0;
                landmarkcol1.Colspan = 0;
                landmarkcol1.Border = 0;
                tblicicipd.AddCell(landmarkcol1);

                PdfPCell landmark1 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                landmark1.HorizontalAlignment = 0;
                landmark1.Colspan = 0;
                landmark1.Border = 0;
                tblicicipd.AddCell(landmark1);

                //   tblicicipd.AddCell(pdemcell);

                PdfPCell cityhead1 = new PdfPCell(new Phrase("*City / Town / Village", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                cityhead1.HorizontalAlignment = 0;
                cityhead1.Colspan = 0;
                cityhead1.Border = 0;
                tblicicipd.AddCell(cityhead1);

                PdfPCell citycol1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                citycol1.HorizontalAlignment = 0;
                citycol1.Colspan = 0;
                citycol1.Border = 0;
                tblicicipd.AddCell(citycol1);

                PdfPCell applcity1 = new PdfPCell(new Phrase(peTaluka, FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applcity1.HorizontalAlignment = 0;
                applcity1.Colspan = 0;
                applcity1.Border = 0;
                tblicicipd.AddCell(applcity1);

                emailhead = new PdfPCell(new Phrase("*District                            :                   " + pecity + "                                      *Pin Code: " + pePincode + "                     State Code:                   * Country Code:91 ", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                emailhead.HorizontalAlignment = 0;
                emailhead.Colspan = 6;
                emailhead.Border = 0;
                tblicicipd.AddCell(emailhead);



                emailcol = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                emailcol.HorizontalAlignment = 0;
                emailcol.Colspan = 0;
                emailcol.Border = 0;
                tblicicipd.AddCell(emailcol);

                email = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                email.HorizontalAlignment = 0;
                email.Colspan = 0;
                email.Border = 0;
                email.PaddingLeft = 30;
                email.PaddingTop = -10;
                tblicicipd.AddCell(email);

                tblicicipd.AddCell(pdemcell);
                tblicicipd.AddCell(pdemcell);
                tblicicipd.AddCell(pdemcell);
                tblicicipd.AddCell(pdemcell);
                tblicicipd.AddCell(pdemcell);

                addressdetails1 = new PdfPCell(new Phrase("CONTACT DETAILS", FontFactory.GetFont(fontsyle, head_font_size, Font.BOLD, color)));
                addressdetails1.HorizontalAlignment = 1;
                addressdetails1.Colspan = 6;
                addressdetails1.BorderColor = new BaseColor(128, 0, 0);
                tblicicipd.AddCell(addressdetails1);

                tblicicipd.AddCell(pdemcell);

                PdfPCell mobilehead1 = new PdfPCell(new Phrase("* Mobile", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                mobilehead1.HorizontalAlignment = 0;
                mobilehead1.Colspan = 0;
                mobilehead1.Border = 0;
                tblicicipd.AddCell(mobilehead1);

                PdfPCell mobilecol1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                mobilecol1.HorizontalAlignment = 0;
                mobilecol1.Colspan = 0;
                mobilecol1.Border = 0;
                tblicicipd.AddCell(mobilecol1);

                PdfPCell applmobile1 = new PdfPCell(new Phrase(contactno, FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applmobile1.HorizontalAlignment = 0;
                applmobile1.Colspan = 0;
                applmobile1.Border = 0;
                tblicicipd.AddCell(applmobile1);

                PdfPCell telnohead1 = new PdfPCell(new Phrase("Tel. (Res/Off)", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                telnohead1.HorizontalAlignment = 0;
                telnohead1.Colspan = 0;
                telnohead1.Border = 0;
                tblicicipd.AddCell(telnohead1);

                PdfPCell telnocol1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                telnocol1.HorizontalAlignment = 0;
                telnocol1.Colspan = 0;
                telnocol1.Border = 0;
                tblicicipd.AddCell(telnocol1);

                PdfPCell telno1 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                telno1.HorizontalAlignment = 0;
                telno1.Colspan = 0;
                telno1.Border = 0;
                tblicicipd.AddCell(telno1);

                tblicicipd.AddCell(pdemcell);


                //    tblicicipd.AddCell(pdemcell);





                PdfPCell emailhead1 = new PdfPCell(new Phrase("  E-mail ID", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                emailhead1.HorizontalAlignment = 0;
                emailhead1.Colspan = 0;
                emailhead1.Border = 0;
                tblicicipd.AddCell(emailhead1);

                PdfPCell emailcol1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                emailcol1.HorizontalAlignment = 0;
                emailcol1.Colspan = 0;
                emailcol1.Border = 0;
                tblicicipd.AddCell(emailcol1);

                PdfPCell email1 = new PdfPCell(new Phrase(EmailId, FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                email1.HorizontalAlignment = 0;
                email1.Colspan = 4;
                email1.Border = 0;
                tblicicipd.AddCell(email1);

                tblicicipd.AddCell(pdemcell);
                tblicicipd.AddCell(pdemcell);


                PdfPCell identitydetails = new PdfPCell(new Phrase("PROOF OF IDENTITY AND ADDRESS", FontFactory.GetFont(fontsyle, head_font_size, Font.BOLD, color)));
                identitydetails.HorizontalAlignment = 1;
                identitydetails.Colspan = 6;
                identitydetails.BorderColor = new BaseColor(128, 0, 0);
                tblicicipd.AddCell(identitydetails);

                tblicicipd.AddCell(pdemcell);

                mobilehead1 = new PdfPCell(new Phrase("Passport Number", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                mobilehead1.HorizontalAlignment = 0;
                mobilehead1.Colspan = 0;
                mobilehead1.Border = 0;
                tblicicipd.AddCell(mobilehead1);

                mobilecol1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                mobilecol1.HorizontalAlignment = 0;
                mobilecol1.Colspan = 0;
                mobilecol1.Border = 0;
                tblicicipd.AddCell(mobilecol1);

                applmobile1 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applmobile1.HorizontalAlignment = 0;
                applmobile1.Colspan = 0;
                applmobile1.Border = 0;
                tblicicipd.AddCell(applmobile1);

                // tblicicipd.AddCell(pdemcell);


                mobilehead1 = new PdfPCell(new Phrase("Passport Expiry Date", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                mobilehead1.HorizontalAlignment = 0;
                mobilehead1.Colspan = 0;
                mobilehead1.Border = 0;
                tblicicipd.AddCell(mobilehead1);

                mobilecol1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                mobilecol1.HorizontalAlignment = 0;
                mobilecol1.Colspan = 0;
                mobilecol1.Border = 0;
                tblicicipd.AddCell(mobilecol1);

                applmobile1 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applmobile1.HorizontalAlignment = 0;
                applmobile1.Colspan = 0;
                applmobile1.Border = 0;
                tblicicipd.AddCell(applmobile1);

                tblicicipd.AddCell(pdemcell);


                mobilehead1 = new PdfPCell(new Phrase("Voter ID Card", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                mobilehead1.HorizontalAlignment = 0;
                mobilehead1.Colspan = 0;
                mobilehead1.Border = 0;
                tblicicipd.AddCell(mobilehead1);

                mobilecol1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                mobilecol1.HorizontalAlignment = 0;
                mobilecol1.Colspan = 0;
                mobilecol1.Border = 0;
                tblicicipd.AddCell(mobilecol1);

                applmobile1 = new PdfPCell(new Phrase(VoterIDNo, FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applmobile1.HorizontalAlignment = 0;
                applmobile1.Colspan = 0;
                applmobile1.Border = 0;
                tblicicipd.AddCell(applmobile1);

                tblicicipd.AddCell(pdemcell);

                mobilehead1 = new PdfPCell(new Phrase("PAN Card", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                mobilehead1.HorizontalAlignment = 0;
                mobilehead1.Colspan = 0;
                mobilehead1.Border = 0;
                tblicicipd.AddCell(mobilehead1);

                mobilecol1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                mobilecol1.HorizontalAlignment = 0;
                mobilecol1.Colspan = 0;
                mobilecol1.Border = 0;
                tblicicipd.AddCell(mobilecol1);

                applmobile1 = new PdfPCell(new Phrase(PanCardNo, FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applmobile1.HorizontalAlignment = 0;
                applmobile1.Colspan = 0;
                applmobile1.Border = 0;
                tblicicipd.AddCell(applmobile1);

                tblicicipd.AddCell(pdemcell);


                mobilehead1 = new PdfPCell(new Phrase("Driving Licence", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                mobilehead1.HorizontalAlignment = 0;
                mobilehead1.Colspan = 0;
                mobilehead1.Border = 0;
                tblicicipd.AddCell(mobilehead1);

                mobilecol1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                mobilecol1.HorizontalAlignment = 0;
                mobilecol1.Colspan = 0;
                mobilecol1.Border = 0;
                tblicicipd.AddCell(mobilecol1);

                applmobile1 = new PdfPCell(new Phrase(DrivingLicenseNo, FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applmobile1.HorizontalAlignment = 0;
                applmobile1.Colspan = 0;
                applmobile1.Border = 0;
                tblicicipd.AddCell(applmobile1);

                //   tblicicipd.AddCell(pdemcell);


                mobilehead1 = new PdfPCell(new Phrase("Driving Licence Expiry Date", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                mobilehead1.HorizontalAlignment = 0;
                mobilehead1.Colspan = 0;
                mobilehead1.Border = 0;
                tblicicipd.AddCell(mobilehead1);

                mobilecol1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                mobilecol1.HorizontalAlignment = 0;
                mobilecol1.Colspan = 0;
                mobilecol1.Border = 0;
                tblicicipd.AddCell(mobilecol1);

                applmobile1 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applmobile1.HorizontalAlignment = 0;
                applmobile1.Colspan = 0;
                applmobile1.Border = 0;
                tblicicipd.AddCell(applmobile1);

                tblicicipd.AddCell(pdemcell);



                mobilehead1 = new PdfPCell(new Phrase("UID (Aadhaar)", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                mobilehead1.HorizontalAlignment = 0;
                mobilehead1.Colspan = 0;
                mobilehead1.Border = 0;
                tblicicipd.AddCell(mobilehead1);

                mobilecol1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                mobilecol1.HorizontalAlignment = 0;
                mobilecol1.Colspan = 0;
                mobilecol1.Border = 0;
                tblicicipd.AddCell(mobilecol1);

                applmobile1 = new PdfPCell(new Phrase(AadharCardNo, FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applmobile1.HorizontalAlignment = 0;
                applmobile1.Colspan = 0;
                applmobile1.Border = 0;
                tblicicipd.AddCell(applmobile1);

                tblicicipd.AddCell(pdemcell);


                mobilehead1 = new PdfPCell(new Phrase("NREGA Job Card", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                mobilehead1.HorizontalAlignment = 0;
                mobilehead1.Colspan = 0;
                mobilehead1.Border = 0;
                tblicicipd.AddCell(mobilehead1);

                mobilecol1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                mobilecol1.HorizontalAlignment = 0;
                mobilecol1.Colspan = 0;
                mobilecol1.Border = 0;
                tblicicipd.AddCell(mobilecol1);

                applmobile1 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applmobile1.HorizontalAlignment = 0;
                applmobile1.Colspan = 0;
                applmobile1.Border = 0;
                tblicicipd.AddCell(applmobile1);

                tblicicipd.AddCell(pdemcell);


                mobilehead1 = new PdfPCell(new Phrase("Other (any document notified by the central govt.)", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                mobilehead1.HorizontalAlignment = 0;
                mobilehead1.Colspan = 0;
                mobilehead1.Border = 0;
                tblicicipd.AddCell(mobilehead1);

                mobilecol1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                mobilecol1.HorizontalAlignment = 0;
                mobilecol1.Colspan = 0;
                mobilecol1.Border = 0;
                tblicicipd.AddCell(mobilecol1);

                applmobile1 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applmobile1.HorizontalAlignment = 0;
                applmobile1.Colspan = 0;
                applmobile1.Border = 0;
                tblicicipd.AddCell(applmobile1);




                mobilehead1 = new PdfPCell(new Phrase("Identification Number", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                mobilehead1.HorizontalAlignment = 0;
                mobilehead1.Colspan = 0;
                mobilehead1.Border = 0;
                tblicicipd.AddCell(mobilehead1);

                mobilecol1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                mobilecol1.HorizontalAlignment = 0;
                mobilecol1.Colspan = 0;
                mobilecol1.Border = 0;
                tblicicipd.AddCell(mobilecol1);

                applmobile1 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applmobile1.HorizontalAlignment = 0;
                applmobile1.Colspan = 0;
                applmobile1.Border = 0;
                tblicicipd.AddCell(applmobile1);




                mobilehead1 = new PdfPCell(new Phrase("Simplified Measures Account - Document Type code", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                mobilehead1.HorizontalAlignment = 0;
                mobilehead1.Colspan = 0;
                mobilehead1.Border = 0;
                tblicicipd.AddCell(mobilehead1);

                mobilecol1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                mobilecol1.HorizontalAlignment = 0;
                mobilecol1.Colspan = 0;
                mobilecol1.Border = 0;
                tblicicipd.AddCell(mobilecol1);

                applmobile1 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applmobile1.HorizontalAlignment = 0;
                applmobile1.Colspan = 0;
                applmobile1.Border = 0;
                tblicicipd.AddCell(applmobile1);



                mobilehead1 = new PdfPCell(new Phrase("Identification Number", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                mobilehead1.HorizontalAlignment = 0;
                mobilehead1.Colspan = 0;
                mobilehead1.Border = 0;
                tblicicipd.AddCell(mobilehead1);

                mobilecol1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                mobilecol1.HorizontalAlignment = 0;
                mobilecol1.Colspan = 0;
                mobilecol1.Border = 0;
                tblicicipd.AddCell(mobilecol1);

                applmobile1 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applmobile1.HorizontalAlignment = 0;
                applmobile1.Colspan = 0;
                applmobile1.Border = 0;
                tblicicipd.AddCell(applmobile1);

                tblicicipd.AddCell(pdemcell);


                PdfPCell formarriedwm = new PdfPCell(new Phrase("For married women, proof of identity with her maiden name, if supported with a verified true copy of marriage certificate are acceptable as valid identity proof", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                formarriedwm.HorizontalAlignment = 0;
                formarriedwm.Colspan = 6;
                formarriedwm.Border = 0;
                tblicicipd.AddCell(formarriedwm);

                tblicicipd.AddCell(pdemcell);
                tblicicipd.AddCell(pdemcell);
                tblicicipd.AddCell(pdemcell);
                tblicicipd.AddCell(pdemcell);

                document.Add(tblicicipd);
                document.NewPage();

                tblicicipd = new PdfPTable(6);
                tblicicipd.TotalWidth = 550f;
                tblicicipd.LockedWidth = true;
                widthbx1 = new float[] { 3f, 1f, 2.5f, 2f, 1f, 2.5f };
                tblicicipd.SetWidths(widthbx1);

                PdfPCell form60 = new PdfPCell(new Phrase("FORM 60 / 61 (TO BE FILLED BY THOSE WHO DO NOT HAVE EITHER PAN OR GIR)", FontFactory.GetFont(fontsyle, head_font_size, Font.BOLD, color)));
                form60.HorizontalAlignment = 1;
                form60.Colspan = 6;
                form60.BorderColor = new BaseColor(128, 0, 0);
                tblicicipd.AddCell(form60);

                tblicicipd.AddCell(pdemcell);

                PdfPCell form60desc = new PdfPCell(new Phrase("Are you a Tax Assessee ", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                form60desc.HorizontalAlignment = 0;
                form60desc.Colspan = 1;
                form60desc.Border = 0;
                tblicicipd.AddCell(form60desc);

                PdfPCell form60desc1 = new PdfPCell();
                Paragraph p6 = new Paragraph();
                //  p6.Add(new Chunk(sqpng, 0, 0));
                p6.Add(new Phrase("  Yes ", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                form60desc1.AddElement(p6);
                form60desc1.HorizontalAlignment = 0;
                form60desc1.Colspan = 2;
                form60desc1.Border = 0;
                tblicicipd.AddCell(form60desc1);



                PdfPCell form60desc3 = new PdfPCell();
                Paragraph p7 = new Paragraph();
                // p7.Add(new Chunk(sqpng, 0, 0));
                p7.Add(new Phrase("  No ", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                form60desc3.AddElement(p7);
                form60desc3.HorizontalAlignment = 0;
                form60desc3.Colspan = 2;
                form60desc3.Border = 0;
                tblicicipd.AddCell(form60desc3);



                tblicicipd.AddCell(pdemcell);

                PdfPCell form60descyes = new PdfPCell(new Phrase("If yes,   (a) Details of ward / circle / Range ware the last return of income was filled ______________________________________", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                form60descyes.HorizontalAlignment = 0;
                form60descyes.Colspan = 6;
                form60descyes.Border = 0;
                tblicicipd.AddCell(form60descyes);

                tblicicipd.AddCell(pdemcell);

                PdfPCell form60dreason = new PdfPCell(new Phrase("(b) Reason for not having PAN/GIR No. : _____________________________ I _____________________________", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                form60dreason.HorizontalAlignment = 0;
                form60dreason.Colspan = 6;
                form60dreason.Border = 0;
                tblicicipd.AddCell(form60dreason);

                tblicicipd.AddCell(pdemcell);

                PdfPCell form60declrn = new PdfPCell(new Phrase("do hereby declare that what is stated is true to the best of my knowledge and belief. Verified at __________ this the _________________ day of _________________ 20", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                form60declrn.HorizontalAlignment = 0;
                form60declrn.Colspan = 6;
                form60declrn.Border = 0;
                tblicicipd.AddCell(form60declrn);

                tblicicipd.AddCell(pdemcell);
                tblicicipd.AddCell(pdemcell);






                PdfPCell Workdetails = new PdfPCell(new Phrase("CORPORATE DETAILS", FontFactory.GetFont(fontsyle, head_font_size, Font.BOLD, color)));
                Workdetails.HorizontalAlignment = 1;
                Workdetails.Colspan = 6;
                Workdetails.BorderColor = new BaseColor(128, 0, 0);
                tblicicipd.AddCell(Workdetails);

                tblicicipd.AddCell(pdemcell);

                PdfPCell cmpnamehead = new PdfPCell(new Phrase("* Name of the Company", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                cmpnamehead.HorizontalAlignment = 0;
                cmpnamehead.Colspan = 0;
                cmpnamehead.Border = 0;
                tblicicipd.AddCell(cmpnamehead);

                PdfPCell cmpnamecol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                cmpnamecol.HorizontalAlignment = 0;
                cmpnamecol.Colspan = 0;
                cmpnamecol.Border = 0;
                tblicicipd.AddCell(cmpnamecol);

                PdfPCell cmpname = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                cmpname.HorizontalAlignment = 0;
                cmpname.Colspan = 4;
                cmpname.Border = 0;
                tblicicipd.AddCell(cmpname);

                tblicicipd.AddCell(pdemcell);

                PdfPCell depthead = new PdfPCell(new Phrase("* Office Address", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                depthead.HorizontalAlignment = 0;
                depthead.Colspan = 0;
                depthead.Border = 0;
                tblicicipd.AddCell(depthead);

                PdfPCell deptcol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                deptcol.HorizontalAlignment = 0;
                deptcol.Colspan = 0;
                deptcol.Border = 0;
                tblicicipd.AddCell(deptcol);

                PdfPCell dept = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                dept.HorizontalAlignment = 0;
                dept.Colspan = 4;
                dept.Border = 0;
                tblicicipd.AddCell(dept);

                tblicicipd.AddCell(pdemcell);


                PdfPCell Wcityhead = new PdfPCell(new Phrase("*City / Town / Village", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                Wcityhead.HorizontalAlignment = 0;
                Wcityhead.Colspan = 0;
                Wcityhead.Border = 0;
                tblicicipd.AddCell(Wcityhead);

                PdfPCell Wcitycol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                Wcitycol.HorizontalAlignment = 0;
                Wcitycol.Colspan = 0;
                Wcitycol.Border = 0;
                tblicicipd.AddCell(Wcitycol);

                PdfPCell Wcity = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                Wcity.HorizontalAlignment = 0;
                Wcity.Colspan = 0;
                Wcity.Border = 0;
                tblicicipd.AddCell(Wcity);


                PdfPCell WStatehead = new PdfPCell(new Phrase("* District", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                WStatehead.HorizontalAlignment = 0;
                WStatehead.Colspan = 0;
                WStatehead.Border = 0;
                tblicicipd.AddCell(WStatehead);

                PdfPCell WStatecol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                WStatecol.HorizontalAlignment = 0;
                WStatecol.Colspan = 0;
                WStatecol.Border = 0;
                tblicicipd.AddCell(WStatecol);

                PdfPCell WState = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                WState.HorizontalAlignment = 0;
                WState.Colspan = 0;
                WState.Border = 0;
                tblicicipd.AddCell(WState);

                WState = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                WState.HorizontalAlignment = 0;
                WState.Colspan = 6;
                WState.Border = 0;
                tblicicipd.AddCell(WState);

                PdfPCell Wpinhead = new PdfPCell(new Phrase("*Pin Code:                                            *State Code:                        *Country Code:                       *STD code:                                       Tel.: ", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                Wpinhead.HorizontalAlignment = 0;
                Wpinhead.Colspan = 6;
                Wpinhead.Border = 0;
                tblicicipd.AddCell(Wpinhead);

                PdfPCell Wpincol = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                Wpincol.HorizontalAlignment = 0;
                Wpincol.Colspan = 0;
                Wpincol.Border = 0;
                tblicicipd.AddCell(Wpincol);

                PdfPCell Wpin = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                Wpin.HorizontalAlignment = 0;
                Wpin.Colspan = 0;
                Wpin.Border = 0;
                tblicicipd.AddCell(Wpin);

                tblicicipd.AddCell(pdemcell);



                tblicicipd.AddCell(pdemcell);


                PdfPCell customers = new PdfPCell(new Phrase("FOR ICICI BANK CUSTOMERS", FontFactory.GetFont(fontsyle, 9, Font.BOLD, color)));
                customers.HorizontalAlignment = 1;
                customers.Colspan = 6;
                customers.BorderColor = new BaseColor(128, 0, 0);
                tblicicipd.AddCell(customers);

                tblicicipd.AddCell(pdemcell);
                tblicicipd.AddCell(pdemcell);

                PdfPCell custDet1 = new PdfPCell(new Phrase("Are you an existing ICICI Bank Customer : ", FontFactory.GetFont(fontsyle, 9, Font.NORMAL, BaseColor.BLACK)));
                custDet1.HorizontalAlignment = 0;
                custDet1.Colspan = 2;
                custDet1.Border = 0;
                tblicicipd.AddCell(custDet1);

                PdfPCell custDet2 = new PdfPCell();
                Paragraph p5 = new Paragraph();
                p5.Add(new Phrase("  Y ", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                p5.Add(new Phrase("  N ", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                custDet2.AddElement(p5);
                custDet2.HorizontalAlignment = 0;
                custDet2.PaddingRight = 15;
                custDet2.Colspan = 0;
                custDet2.Border = 0;
                tblicicipd.AddCell(custDet2);



                tblicicipd.AddCell(pdemcell);

                PdfPCell custDetyes = new PdfPCell(new Phrase("If yes, please specify the current \n relationship with ICICI Bank :", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                custDetyes.HorizontalAlignment = 0;
                custDetyes.Colspan = 2;
                custDetyes.Border = 0;
                tblicicipd.AddCell(custDetyes);


                iTextSharp.text.Image sqpng2 = iTextSharp.text.Image.GetInstance(imagepathpf1 + "/checkbox1.png");
                tickop11 = new PdfPCell(sqpng2);
                tickop11.HorizontalAlignment = 0;
                tickop11.Colspan = 1;
                tickop11.Border = 0;
                tickop11.PaddingTop = 7;
                tblicicipd.AddCell(tickop11);

                PdfPCell BAchk = new PdfPCell();
                Paragraph p3 = new Paragraph();
                p3.Add(new Phrase("  Bank Account", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                BAchk.AddElement(p3);
                BAchk.HorizontalAlignment = 0;
                BAchk.Colspan = 1;
                BAchk.Border = 0;
                BAchk.PaddingLeft = -100;
                tblicicipd.AddCell(BAchk);


                tickop11 = new PdfPCell(sqpng2);
                tickop11.HorizontalAlignment = 0;
                tickop11.Colspan = 1;
                tickop11.Border = 0;
                tickop11.PaddingTop = 7;
                tblicicipd.AddCell(tickop11);

                PdfPCell loanchk = new PdfPCell();
                Paragraph p2 = new Paragraph();
                p2.Add(new Phrase("  Loan Account", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                loanchk.AddElement(p2);
                loanchk.HorizontalAlignment = 0;
                loanchk.Colspan = 1;
                loanchk.Border = 0;
                loanchk.PaddingLeft = -30;
                tblicicipd.AddCell(loanchk);


                PdfPCell custDetemp = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, color)));
                custDetemp.HorizontalAlignment = 0;
                custDetemp.Colspan = 2;
                custDetemp.Border = 0;
                tblicicipd.AddCell(custDetemp);



                tickop11 = new PdfPCell(sqpng2);
                tickop11.HorizontalAlignment = 0;
                tickop11.Colspan = 1;
                tickop11.Border = 0;
                tickop11.PaddingTop = 7;
                tblicicipd.AddCell(tickop11);

                PdfPCell CDchk = new PdfPCell();
                Paragraph p1 = new Paragraph();
                p1.Add(new Phrase("  Credit / Debit / Prepaid card", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                CDchk.AddElement(p1);
                CDchk.HorizontalAlignment = 0;
                CDchk.Colspan = 1;
                CDchk.Border = 0;
                CDchk.PaddingLeft = -100;
                tblicicipd.AddCell(CDchk);


                tickop11 = new PdfPCell(sqpng2);
                tickop11.HorizontalAlignment = 0;
                tickop11.Colspan = 1;
                tickop11.Border = 0;
                tickop11.PaddingTop = 7;
                tblicicipd.AddCell(tickop11);


                PdfPCell otherschk = new PdfPCell();
                Paragraph p = new Paragraph();
                p.Add(new Phrase("  Others,Please specify ________ ", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                otherschk.AddElement(p);
                otherschk.HorizontalAlignment = 0;
                otherschk.Colspan = 1;
                otherschk.Border = 0;
                otherschk.PaddingLeft = -30;
                tblicicipd.AddCell(otherschk);



                PdfPCell note1 = new PdfPCell(new Phrase("Please provide details of the current relationship _______________________________________________________", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                note1.Colspan = 6;
                note1.HorizontalAlignment = 0;
                note1.Border = 0;
                tblicicipd.AddCell(note1);

                tblicicipd.AddCell(pdemcell);
                tblicicipd.AddCell(pdemcell);


                PdfPCell cardcharges = new PdfPCell(new Phrase("CARD CHARGES", FontFactory.GetFont(fontsyle, head_font_size, Font.BOLD, color)));
                cardcharges.HorizontalAlignment = 1;
                cardcharges.Colspan = 6;
                cardcharges.BorderColor = new BaseColor(128, 0, 0);
                tblicicipd.AddCell(cardcharges);

                tblicicipd.AddCell(pdemcell);


                PdfPCell cardchargesdesc = new PdfPCell(new Phrase("Annual Fee as per mentioned in Corporate Agreement shall be debited from the Card Upload amount towards Maintenance of Card Account. (For details please refer Terms and Conditions on our website www.icicibank.com)", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                cardchargesdesc.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                cardchargesdesc.Colspan = 6;
                cardchargesdesc.Border = 0;
                tblicicipd.AddCell(cardchargesdesc);

                tblicicipd.AddCell(pdemcell);
                tblicicipd.AddCell(pdemcell);




                PdfPCell Declaration = new PdfPCell(new Phrase("DECLARATION", FontFactory.GetFont(fontsyle, head_font_size, Font.BOLD, color)));
                Declaration.HorizontalAlignment = 1;
                Declaration.Colspan = 6;
                Declaration.BorderColor = new BaseColor(128, 0, 0);
                tblicicipd.AddCell(Declaration);

                tblicicipd.AddCell(pdemcell);

                document.Add(tblicicipd);

                PdfPTable tblicici2 = new PdfPTable(5);
                tblicici2.TotalWidth = 550f;
                tblicici2.LockedWidth = true;
                float[] widthbx3 = new float[] { 0.2f, 4.1f, 0.1f, 0.2f, 4.1f };
                tblicici2.SetWidths(widthbx3);


                PdfPCell point = new PdfPCell(new Phrase("I have understood and hereby agree to the Terms and conditions as applicable to my Card set forth on the website www.icici.com.I understood that access to any changes/update in Terms and conditions applicable to this relationship would be available on the website only. I do hereby declare that information furnished in this form is true to the best of my knowledge and belief \n\n I declare, confirm, agree : ", FontFactory.GetFont(fontsyle, 6, Font.NORMAL, BaseColor.BLACK)));
                point.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point.Colspan = 2;
                point.Border = 0;
                tblicici2.AddCell(point);

                PdfPCell pointem = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, 6, Font.NORMAL, BaseColor.BLACK)));
                pointem.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                pointem.Colspan = 0;
                pointem.Border = 0;
                tblicici2.AddCell(pointem);

                PdfPCell poinnum = new PdfPCell(new Phrase("8.", FontFactory.GetFont(fontsyle, 6, Font.BOLD, BaseColor.BLACK)));
                poinnum.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                poinnum.Colspan = 0;
                poinnum.Border = 0;
                tblicici2.AddCell(poinnum);

                PdfPCell point10 = new PdfPCell(new Phrase("I hereby authorize ICICI Bank Ltd./ its group companies to exchange share or part with all the information date or documents relating to my Application to other ICICI group companies/ Bank/ Financial instruction/ credit bureaus / Agencies statutory Bodies such other persons as ICICI Bank Ltd./ its group companies may deem necessary or appropiated as amy be required for use or processing of said information/data by such person or furnishing of the processed information/data thereof to other bank/financial institutions/credit provider/users registered with such persons and shall not hold ICICI Bank Ltd. ", FontFactory.GetFont(fontsyle, 6, Font.NORMAL, BaseColor.BLACK)));
                point10.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point10.Colspan = 0;
                point10.Border = 0;
                tblicici2.AddCell(point10);
                //2nd row
                PdfPCell point1no = new PdfPCell(new Phrase("1.", FontFactory.GetFont(fontsyle, 6, Font.BOLD, BaseColor.BLACK)));
                point1no.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point1no.Colspan = 0;
                point1no.Border = 0;
                tblicici2.AddCell(point1no);

                PdfPCell point1 = new PdfPCell(new Phrase("That all the particulars and information given in the Application form (and all documents referred or provided therewith) are true, correct, complete and up-to-date in all respects and I have not withheld any information. I understand that certain particulars given by me are required by operational guidelines governing banking companies. I agree and undertake to provide and further information that ICICI Bank Ltd. may require ", FontFactory.GetFont(fontsyle, 6, Font.NORMAL, BaseColor.BLACK)));
                point1.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point1.Colspan = 0;
                point1.Border = 0;
                tblicici2.AddCell(point1);


                tblicici2.AddCell(pointem);

                PdfPCell poinnum11 = new PdfPCell(new Phrase("9.", FontFactory.GetFont(fontsyle, 6, Font.BOLD, BaseColor.BLACK)));
                poinnum11.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                poinnum11.Colspan = 0;
                poinnum11.Border = 0;
                tblicici2.AddCell(poinnum11);

                PdfPCell point11 = new PdfPCell(new Phrase("I agree and understand that I have to complete further Application Forms fror specific liability products services from ICICI bank Ltd./ its group companies as prescribed from time to time and that such further application shall be regarded as an integral part of this application and vice versa and that unless otherwise disclosed in such further forms are prescribed the particulars and information set forth herein as well as the documents referred or provide  herewith are true and uptodate in all aspect.I agree and understand that such further application will require  incoperation of the application from number,to facilitate data management  ", FontFactory.GetFont(fontsyle, 6, Font.NORMAL, BaseColor.BLACK)));
                point11.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point11.Colspan = 0;
                point11.Border = 0;
                tblicici2.AddCell(point11);

                //3rd row
                PdfPCell point2no = new PdfPCell(new Phrase("2.", FontFactory.GetFont(fontsyle, 6, Font.BOLD, BaseColor.BLACK)));
                point2no.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point2no.Colspan = 0;
                point2no.Border = 0;
                tblicici2.AddCell(point2no);

                PdfPCell point2 = new PdfPCell(new Phrase("That I have no inslvency proceedings initiated against me nor have I ever been adjudicated insolvent. I authorize ICICI Bank and/or its associates to verify, make enquires with respect to any information or otherwise at my office/ residence or to contact me or any other source to obtain or provide any information that ICICI Bank may consider necessary in respect of or in relation to information in this Application/ Further Application Form including but not limited to confirming membership requirements or maintaining my account in good standing ", FontFactory.GetFont(fontsyle, 6, Font.NORMAL, BaseColor.BLACK)));
                point2.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point2.Colspan = 0;
                point2.Border = 0;
                tblicici2.AddCell(point2);


                tblicici2.AddCell(pointem);

                PdfPCell poinnum12 = new PdfPCell(new Phrase("10.", FontFactory.GetFont(fontsyle, 6, Font.BOLD, BaseColor.BLACK)));
                poinnum12.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                poinnum12.Colspan = 0;
                poinnum12.Border = 0;
                tblicici2.AddCell(poinnum12);

                PdfPCell point12 = new PdfPCell(new Phrase("I authorise ICICI Bank Ltd., to issue an ICICI Bank Pay Direct card/ Meal card to me. I acknowledge that the issue and usage of the pay Direct Card/Meal Card is governed by the terms and conditions as in force from time to time and agree to be bound by the same. I accept that the Terms and condition of Pay Direct Card are liable to be ammended by ICICI Bank Ltd. from time to time.I futher unconditionally and irrevocably authorise ICICI Bank ltd. to debit my Card Account annually with an amount equivalent to fee.  ", FontFactory.GetFont(fontsyle, 6, Font.NORMAL, BaseColor.BLACK)));
                point12.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point12.Colspan = 0;
                point12.Border = 0;
                tblicici2.AddCell(point12);

                //4th row
                PdfPCell point3no = new PdfPCell(new Phrase("3.", FontFactory.GetFont(fontsyle, 6, Font.BOLD, BaseColor.BLACK)));
                point3no.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point3no.Colspan = 0;
                point3no.Border = 0;
                tblicici2.AddCell(point3no);

                PdfPCell point3 = new PdfPCell(new Phrase("That I have read the Application Form and Brochures and  am/are aware of all the terms and conditions of availing finance or service or products from ICICI Bankand its group companies. ", FontFactory.GetFont(fontsyle, 6, Font.NORMAL, BaseColor.BLACK)));
                point3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point3.Colspan = 0;
                point3.Border = 0;
                tblicici2.AddCell(point3);


                tblicici2.AddCell(pointem);

                PdfPCell poinnum13 = new PdfPCell(new Phrase("11.", FontFactory.GetFont(fontsyle, 6, Font.BOLD, BaseColor.BLACK)));
                poinnum13.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                poinnum13.Colspan = 0;
                poinnum13.Border = 0;
                tblicici2.AddCell(poinnum13);

                PdfPCell point13 = new PdfPCell(new Phrase("I Shall at all times comply with applicable laws and regulations while using this card.", FontFactory.GetFont(fontsyle, 6, Font.NORMAL, BaseColor.BLACK)));
                point13.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point13.Colspan = 0;
                point13.Border = 0;
                tblicici2.AddCell(point13);

                //5th row
                PdfPCell point4no = new PdfPCell(new Phrase("4.", FontFactory.GetFont(fontsyle, 6, Font.BOLD, BaseColor.BLACK)));
                point4no.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point4no.Colspan = 0;
                point4no.Border = 0;
                tblicici2.AddCell(point4no);

                PdfPCell point4 = new PdfPCell(new Phrase("I agree and understand that ICICI Bank Ltd./ group companies reserve the right to reject any application form without providing any reason.I agree and understand that ICICI Bank Ltd reserve the right to retain the application forms and the documents provide there with, including photographs and will not return the same to me", FontFactory.GetFont(fontsyle, 6, Font.NORMAL, BaseColor.BLACK)));
                point4.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point4.Colspan = 0;
                point4.Border = 0;
                tblicici2.AddCell(point4);


                tblicici2.AddCell(pointem);

                PdfPCell poinnum14 = new PdfPCell(new Phrase("12.", FontFactory.GetFont(fontsyle, 6, Font.BOLD, BaseColor.BLACK)));
                poinnum14.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                poinnum14.Colspan = 0;
                poinnum14.Border = 0;
                tblicici2.AddCell(poinnum14);

                PdfPCell point14 = new PdfPCell(new Phrase("I understand that it shall be my responsibility to keep the card , its PIN and password/s protected and concealed at all times. I shall not hold ICICI Bank liable for any loss/damage/harm resulting from failure to do so", FontFactory.GetFont(fontsyle, 6, Font.NORMAL, BaseColor.BLACK)));
                point14.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point14.Colspan = 0;
                point14.Border = 0;
                tblicici2.AddCell(point14);

                //6th row
                PdfPCell point5no = new PdfPCell(new Phrase("5.", FontFactory.GetFont(fontsyle, 6, Font.BOLD, BaseColor.BLACK)));
                point5no.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point5no.Colspan = 0;
                point5no.Border = 0;
                tblicici2.AddCell(point5no);

                PdfPCell point5 = new PdfPCell(new Phrase("I have also read and understand Terms and Conditions under which the scheme is offered to my organisation and its employees.", FontFactory.GetFont(fontsyle, 6, Font.NORMAL, BaseColor.BLACK)));
                point5.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point5.Colspan = 0;
                point5.Border = 0;
                tblicici2.AddCell(point5);


                tblicici2.AddCell(pointem);

                PdfPCell poinnum15 = new PdfPCell(new Phrase("13.", FontFactory.GetFont(fontsyle, 6, Font.BOLD, BaseColor.BLACK)));
                poinnum15.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                poinnum15.Colspan = 0;
                poinnum15.Border = 0;
                tblicici2.AddCell(poinnum15);

                PdfPCell point15 = new PdfPCell(new Phrase("I hereby agree to keep ICICI Bank fully indemnifiedagainst any loss / damage / harm that may be caused to ICICI Bank as a result of breach of any declarations , breach of any terms and conditions or any unauthorized / unlawful use of the card.  ", FontFactory.GetFont(fontsyle, 6, Font.NORMAL, BaseColor.BLACK)));
                point15.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point15.Colspan = 0;
                point15.Border = 0;
                tblicici2.AddCell(point15);

                //7th row
                PdfPCell point6no = new PdfPCell(new Phrase("6.", FontFactory.GetFont(fontsyle, 6, Font.BOLD, BaseColor.BLACK)));
                point6no.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point6no.Colspan = 0;
                point6no.Border = 0;
                tblicici2.AddCell(point6no);

                PdfPCell point6 = new PdfPCell(new Phrase("I agree that my employer has full right to reverse an instruction given by them for any amount within a period of three working days and I will not dispute or hold the bank responsible for any such debits on the card. ", FontFactory.GetFont(fontsyle, 6, Font.NORMAL, BaseColor.BLACK)));
                point6.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point6.Colspan = 0;
                point6.Border = 0;
                tblicici2.AddCell(point6);


                tblicici2.AddCell(pointem);

                PdfPCell poinnum16 = new PdfPCell(new Phrase("14.", FontFactory.GetFont(fontsyle, 6, Font.BOLD, BaseColor.BLACK)));
                poinnum16.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                poinnum16.Colspan = 0;
                poinnum16.Border = 0;
                tblicici2.AddCell(poinnum16);

                PdfPCell point16 = new PdfPCell(new Phrase("The Applicant has/have no objection to ICICI Bank Limited, its group companies, agents/ representatives to provide me/us information on various products, offers and services provided by ICICI Bank Ltd through any mode and authorise ICICI Bank Ltd", FontFactory.GetFont(fontsyle, 6, Font.NORMAL, BaseColor.BLACK)));
                point16.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point16.Colspan = 0;
                point16.Border = 0;
                tblicici2.AddCell(point16);

                //8th row
                PdfPCell point7no = new PdfPCell(new Phrase("7.", FontFactory.GetFont(fontsyle, 6, Font.BOLD, BaseColor.BLACK)));
                point7no.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point7no.Colspan = 0;
                point7no.Border = 0;
                tblicici2.AddCell(point7no);

                PdfPCell point7 = new PdfPCell(new Phrase("I understand that is my responsibility to inform ICICI Bank immediately on termination of my employment with my current employer where upon I will cease to enjoyany or all benefits under this scheme and to inform ICICI Bank & its group companies regarding change in my residence / employment and to provide any further information that ICICI Bank & its group companies may require time to time.", FontFactory.GetFont(fontsyle, 6, Font.NORMAL, BaseColor.BLACK)));
                point7.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point7.Colspan = 0;
                point7.Border = 0;
                tblicici2.AddCell(point7);


                tblicici2.AddCell(pointem);

                PdfPCell poinnum17 = new PdfPCell(new Phrase("15.", FontFactory.GetFont(fontsyle, 6, Font.BOLD, BaseColor.BLACK)));
                poinnum17.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                poinnum17.Colspan = 0;
                poinnum17.Border = 0;
                tblicici2.AddCell(poinnum17);

                PdfPCell point17 = new PdfPCell(new Phrase("In the event of change in address due to relocation or any other reason, card holder should intimate the new address to the Bank within 2 weeks of such a change through corporate.", FontFactory.GetFont(fontsyle, 6, Font.NORMAL, BaseColor.BLACK)));
                point17.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point17.Colspan = 0;
                point17.Border = 0;
                tblicici2.AddCell(point17);

                document.Add(tblicici2);


                PdfPTable tblicici3 = new PdfPTable(3);
                tblicici3.TotalWidth = 550f;
                tblicici3.LockedWidth = true;
                float[] widthbx4 = new float[] { 3f, 1.5f, 3f };
                tblicici3.SetWidths(widthbx4);

                PdfPCell emptycell = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, 6, Font.BOLD, BaseColor.BLACK)));
                emptycell.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                emptycell.Colspan = 3;
                emptycell.Border = 0;
                tblicici3.AddCell(emptycell);
                tblicici3.AddCell(emptycell);

                //PdfPCell banksign = new PdfPCell(new Phrase("________________________________ \n\n     Signature of Bank official in \n       whose presence signed", FontFactory.GetFont(fontsyle, 7, Font.BOLD, BaseColor.BLACK)));
                //banksign.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                //banksign.Colspan = 0;
                //banksign.Border = 0;
                //banksign.PaddingTop = 50;
                //banksign.MinimumHeight = 60;
                //tblicici3.AddCell(banksign);

                //PdfPCell photo = new PdfPCell(new Phrase("   Applicant's Photo \n\n Please affix a recent       Photograph. \n\n Please Sign in black ink within the box", FontFactory.GetFont(fontsyle, 8, Font.BOLD, BaseColor.BLACK)));
                //photo.HorizontalAlignment = 1;
                //photo.Colspan = 0;
                //photo.MinimumHeight = 100;
                //photo.PaddingTop = 15;

                //tblicici3.AddCell(photo);

                PdfPCell ApplSign = new PdfPCell(new Phrase("                          ___________________________ \n \n   Signature of Applicant", FontFactory.GetFont(fontsyle, 7, Font.BOLD, BaseColor.BLACK)));
                ApplSign.HorizontalAlignment = 2;
                ApplSign.Colspan = 3;
                ApplSign.MinimumHeight = 60;
                ApplSign.PaddingTop = 50;
                ApplSign.Border = 0;
                tblicici3.AddCell(ApplSign);

                tblicici3.AddCell(emptycell);

                //PdfPCell certificationdate = new PdfPCell(new Phrase("Date :", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                //certificationdate.HorizontalAlignment = 0;
                //certificationdate.Colspan = 3;
                //certificationdate.Border = 0;
                //tblicici3.AddCell(certificationdate);

                //tblicici3.AddCell(emptycell);
                tblicici3.AddCell(emptycell);

                //iTextSharp.text.Image kyc = iTextSharp.text.Image.GetInstance(imagepath1 + "/KYC.png");
                //PdfPCell certification = new PdfPCell();
                //Paragraph kyclogo = new Paragraph();
                //kyclogo.Add(new Chunk(kyc, 0, 0));
                //certification.AddElement(kyclogo);
                //certification.HorizontalAlignment = 0;
                //certification.Colspan = 6;
                //certification.Border = 0;
                //tblicici3.AddCell(certification);

                PdfPCell certification = new PdfPCell(new Phrase("KYC CERTIFICATION (To be filled by the bank official)", FontFactory.GetFont(fontsyle, head_font_size, Font.BOLD, color)));
                certification.HorizontalAlignment = 1;
                certification.Colspan = 6;
                certification.BorderColor = new BaseColor(126, 0, 0);
                tblicici3.AddCell(certification);

                //tblicici3.AddCell(emptycell);
                // tblicici3.AddCell(emptycell);

                PdfPCell certificationdes = new PdfPCell(new Phrase("I have met Mr./Ms._________________ in person at his/ her residence/ office/ others (please specify) ______________ and confirm that I have verified the copies of the identity and address documents(as applicable) against originals as produced by the applicant. I also confirm that the form has been signed by the applicant in my presence.", FontFactory.GetFont(fontsyle, 9, Font.NORMAL, BaseColor.BLACK)));
                certificationdes.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                certificationdes.SetLeading(0.0f, 1.5f);
                certificationdes.Colspan = 3;
                certificationdes.Border = 0;
                tblicici3.AddCell(certificationdes);

                PdfPCell certificationdate = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                certificationdate.HorizontalAlignment = 0;
                certificationdate.Colspan = 3;
                certificationdate.Border = 0;
                tblicici3.AddCell(certificationdate);

                ApplSign = new PdfPCell(new Phrase("*Name of the Bank Official/ SE/ BDE authorising the Application form", FontFactory.GetFont(fontsyle, 9, Font.NORMAL, BaseColor.BLACK)));
                ApplSign.HorizontalAlignment = 0;
                ApplSign.Colspan = 3;
                ApplSign.Border = 0;
                tblicici3.AddCell(ApplSign);
                tblicici3.AddCell(emptycell);

                ApplSign = new PdfPCell(new Phrase("Designation:____________________________________ Employee No.:____________________________________________", FontFactory.GetFont(fontsyle, 9, Font.NORMAL, BaseColor.BLACK)));
                ApplSign.HorizontalAlignment = 0;
                ApplSign.Colspan = 3;
                ApplSign.Border = 0;
                tblicici3.AddCell(ApplSign);
                tblicici3.AddCell(emptycell);
                tblicici3.AddCell(emptycell);
                tblicici3.AddCell(emptycell);
                tblicici3.AddCell(emptycell);
                tblicici3.AddCell(emptycell);
                tblicici3.AddCell(emptycell);

                certificationdate = new PdfPCell(new Phrase("Date :_______________", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                certificationdate.HorizontalAlignment = 0;
                certificationdate.Colspan = 3;
                certificationdate.Border = 0;
                tblicici3.AddCell(certificationdate);


                tblicici3.AddCell(emptycell);
                tblicici3.AddCell(emptycell);
                tblicici3.AddCell(emptycell);
                tblicici3.AddCell(emptycell);
                tblicici3.AddCell(emptycell);

                certificationdate = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                certificationdate.HorizontalAlignment = 1;
                certificationdate.Colspan = 2;
                certificationdate.Border = 0;
                tblicici3.AddCell(certificationdate);

                certificationdate = new PdfPCell(new Phrase("Signature of Bank official in\nwhose presence signed", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                certificationdate.HorizontalAlignment = 1;
                certificationdate.Colspan = 1;
                certificationdate.BorderWidthTop = 0.5f;
                certificationdate.BorderWidthBottom = 0;
                certificationdate.BorderWidthLeft = 0;
                certificationdate.BorderWidthRight = 0;
                tblicici3.AddCell(certificationdate);

                tblicici3.AddCell(emptycell);
                tblicici3.AddCell(emptycell);
                document.Add(tblicici3);
                #endregion for ICICI Form

                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "ICICI.pdf";

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }
        }


        public class PageEventHelper : PdfPageEventHelper
        {
            PdfContentByte cb;
            PdfTemplate template;
            BaseFont bf = BaseFont.CreateFont(BaseFont.HELVETICA, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);

            public override void OnOpenDocument(PdfWriter writer, Document document)
            {
                cb = writer.DirectContent;
                template = cb.CreateTemplate(50, 50);
            }
            public override void OnEndPage(PdfWriter writer, Document document)
            {
                base.OnEndPage(writer, document);

                int pageN = writer.PageNumber;
                String text = "Page " + pageN.ToString() + " of ";
                float len = bf.GetWidthPoint(text, 8);


                iTextSharp.text.Rectangle pageSize = document.PageSize;

                cb.SetRGBColorFill(100, 100, 100);
                cb.BeginText();
                cb.SetFontAndSize(bf, 8);
                cb.SetTextMatrix(document.RightMargin, pageSize.GetBottom(document.BottomMargin));
                cb.ShowText(text);
                cb.EndText();
                cb.AddTemplate(template, document.RightMargin + len, pageSize.GetBottom(document.BottomMargin));
            }

            int totalpgcount = 0;
            public override void OnCloseDocument(PdfWriter writer, Document document)
            {

                base.OnCloseDocument(writer, document);

                template.BeginText();
                template.SetFontAndSize(bf, 8);
                template.SetTextMatrix(0, 0);
                template.SetGrayStroke(11);
                totalpgcount = writer.PageNumber - 1;
                template.ShowText("" + totalpgcount);
                template.EndText();

            }
        }

        protected void btnESIForm_Click(object sender, EventArgs e)
        {
            int Fontsize = 11;
            string fontsyle = "verdana";

            #region Variable Declaration


            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";
            string SpouseName = "";
            string FatherName = "";
            string FSpouseName = "";
            string prTown = "";
            string prPostOffice = "";
            string prTaluka = "";
            string prPoliceStation = "";
            string prcity = "";
            string prLmark = "";
            string prPincode = "";
            string prState = "";


            string peTown = "";
            string pePostOffice = "";
            string peTaluka = "";
            string pePoliceStation = "";
            string pecity = "";
            string pelmark = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";


            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";
            string RPlace = "";
            string PrevCompAddress = "";
            string PrevYrExp = "";

            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string Hname = "";
            string Hage = "";
            string email = "";
            string Esino = "";
            string EmpESIDispName = "";
            string prphone = "";
            string pephone = "";

            string CompanyName = "";
            string Address = "";
            string phno = "";
            string compMail = "";
            string BranchOffice = "";
            string ESICNoForms = "";
            string FatherSpouseName = "";
            string Relplace = "";
            string Relresidence = "";
            string RelrelationType = "";
            string Relname = "";
            string Relage = "";
            string RelDOFBirth = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "EmpBiodataPDF";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure


            string queryEsi = " select * from EmpRelationships where EmpId='" + txtEmpid.Text + "' and ESINominee='Y' ";
            DataTable dtesi = config.ExecuteAdaptorAsyncWithQueryParams(queryEsi).Result;
            string residence = ""; string place = "";





            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Father' ";
            DataTable dtfather = config.ExecuteAdaptorAsyncWithQueryParams(query).Result;

            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Husband' ";
            DataTable dthusband = config.ExecuteAdaptorAsyncWithQueryParams(query2).Result;

            if (dthusband.Rows.Count > 0)
            {
                Hname = dthusband.Rows[0]["RName"].ToString();
                Hage = dthusband.Rows[0]["age"].ToString();
                if (Hage == "0")
                {
                    Hage = "";
                }
                else
                {
                    Hage = dthusband.Rows[0]["age"].ToString();
                }
            }



            string Gender = "";

            string RelationName = "";
            if (Fname.Length > 0)
            {
                RelationName = Fname;
            }
            else if (Hname.Length > 0)
            {
                RelationName = Hname;
            }
            else
            {
                RelationName = "";
            }

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                FatherName = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                SpouseName = dtEmpdetails.Rows[0]["EmpSpouseName"].ToString();
                FSpouseName = dtEmpdetails.Rows[0]["SpouseName"].ToString();

                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();

                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();



                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();

                email = dtEmpdetails.Rows[0]["Email"].ToString();


                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prTown = dtEmpdetails.Rows[0]["prTown"].ToString();
                prPostOffice = dtEmpdetails.Rows[0]["prPostOffice"].ToString();
                prTaluka = dtEmpdetails.Rows[0]["prTaluka"].ToString();
                prPoliceStation = dtEmpdetails.Rows[0]["prPoliceStation"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();

                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peTown = dtEmpdetails.Rows[0]["peTown"].ToString();
                pePostOffice = dtEmpdetails.Rows[0]["pePostOffice"].ToString();
                peTaluka = dtEmpdetails.Rows[0]["peTaluka"].ToString();
                pePoliceStation = dtEmpdetails.Rows[0]["pePoliceStation"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                // pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();


                CompanyName = dtEmpdetails.Rows[0]["CompanyName"].ToString();
                Address = dtEmpdetails.Rows[0]["CompanyAddress"].ToString();
                phno = dtEmpdetails.Rows[0]["CompanyPhone"].ToString();
                compMail = dtEmpdetails.Rows[0]["CompanyEmail"].ToString();
                Esino = dtEmpdetails.Rows[0]["ESINo"].ToString();
                EmpESIDispName = dtEmpdetails.Rows[0]["EmpESIDispName"].ToString();

                string Image1 = "";

                if (dtEmpdetails.Rows[0]["Image"].ToString() != "")
                {
                    Image1 = dtEmpdetails.Rows[0]["Image"].ToString();
                }
                else
                {

                }

                BranchOffice = dtEmpdetails.Rows[0]["BranchOffice"].ToString();
                ESICNoForms = dtEmpdetails.Rows[0]["ESICNoForms"].ToString();
                PrevCompAddress = dtEmpdetails.Rows[0]["PrevCompAddress"].ToString();
                PrevYrExp = dtEmpdetails.Rows[0]["PrevYrExp"].ToString();

                #endregion
            }

            MemoryStream ms = new MemoryStream();
            Document document = new Document(PageSize.LEGAL);
            var writer = PdfWriter.GetInstance(document, ms);
            PageEventHelper pageEventHelper = new PageEventHelper();
            writer.PageEvent = pageEventHelper;

            document.Open();
            string imagepath1 = Server.MapPath("assets/Images");


            #region  for ESI form

            PdfPTable table5 = new PdfPTable(6);
            table5.TotalWidth = 550f;
            table5.LockedWidth = true;
            float[] width3 = new float[] { 3f, 2f, 2f, 2f, 3f, 2f };
            table5.SetWidths(width3);

            PdfPCell cellspace111 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
            cellspace111.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellspace111.Colspan = 6;
            cellspace111.Border = 0;
            cellspace111.MinimumHeight = 40;
            table5.AddCell(cellspace111);

            PdfPCell cellHeadId = new PdfPCell(new Phrase("ID No:", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
            cellHeadId.HorizontalAlignment = 2;
            cellHeadId.Colspan = 5;
            cellHeadId.Border = 0;
            table5.AddCell(cellHeadId);

            PdfPCell cellHeadId1 = new PdfPCell(new Phrase(Idno, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
            cellHeadId1.HorizontalAlignment = 0;
            cellHeadId1.Colspan = 1;
            cellHeadId1.Border = 0;
            table5.AddCell(cellHeadId1);


            iTextSharp.text.Image headtext = iTextSharp.text.Image.GetInstance(imagepath1 + "/Text.png");
            iTextSharp.text.Image esi = iTextSharp.text.Image.GetInstance(imagepath1 + "/ESIC-LOGO102.png");

            PdfPCell esiclogo = new PdfPCell();
            Paragraph p9 = new Paragraph();
            p9.Add(new Chunk(esi, 0, 0));
            p9.Add(new Chunk(headtext, 60, 10));
            esiclogo.AddElement(p9);
            esiclogo.HorizontalAlignment = 0;
            esiclogo.Colspan = 6;
            esiclogo.Border = 0;
            table5.AddCell(esiclogo);



            PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
            cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellspace.Colspan = 6;
            cellspace.Border = 0;
            table5.AddCell(cellspace);
            // cellspace111.MinimumHeight = 60;



            PdfPCell cellHead411 = new PdfPCell(new Phrase(" (A) INSURED PERSON'S PARTICULARS", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
            cellHead411.HorizontalAlignment = 0;
            cellHead411.Colspan = 2;
            cellHead411.MinimumHeight = 30;
            table5.AddCell(cellHead411);

            PdfPCell cellHead6 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
            cellHead6.HorizontalAlignment = 0;
            cellHead6.Colspan = 2;
            table5.AddCell(cellHead6);

            PdfPCell cellHead511 = new PdfPCell(new Phrase(" (B) EMPLOYER'S PARTICULARS", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
            cellHead511.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellHead511.Colspan = 3;
            cellHead511.MinimumHeight = 20;
            table5.AddCell(cellHead511);
            // table.AddCell(cellspace);
            // table.AddCell(cellspace);


            PdfPCell cellDesign1 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellDesign1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellDesign1.Colspan = 2;
            // cellDesign.Border = 0;
            table5.AddCell(cellDesign1);


            PdfPCell cellDesign11 = new PdfPCell(new Phrase("Employer's Code Number", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellDesign11.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellDesign11.Colspan = 2;
            cellDesign11.MinimumHeight = 30;
            table5.AddCell(cellDesign11);

            PdfPCell cellpost11 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
            cellpost11.HorizontalAlignment = 0;
            cellpost11.Colspan = 2;
            // cellpost1.Border = 0;
            //cellpost1.PaddingLeft = 10;
            table5.AddCell(cellpost11);


            PdfPCell cellTop33 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellTop33.HorizontalAlignment = 0;
            cellTop33.Colspan = 2;
            table5.AddCell(cellTop33);

            PdfPCell cellTop44 = new PdfPCell(new Phrase(ESICNoForms, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
            cellTop44.HorizontalAlignment = 1;
            cellTop44.Colspan = 2;
            cellTop44.MinimumHeight = 30;
            table5.AddCell(cellTop44);

            PdfPCell cellTop5 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
            cellTop5.HorizontalAlignment = 0;
            cellTop5.Colspan = 2;
            table5.AddCell(cellTop5);

            PdfPCell cellInsurance = new PdfPCell(new Phrase(" 1. Insurance Number ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellInsurance.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellInsurance.Colspan = 3;
            cellInsurance.MinimumHeight = 30;
            table5.AddCell(cellInsurance);

            PdfPCell celldateofapp = new PdfPCell(new Phrase(" 6. Date of Appointment", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            celldateofapp.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            celldateofapp.Colspan = 3;
            celldateofapp.MinimumHeight = 30;
            table5.AddCell(celldateofapp);

            PdfPCell cellInsurance1 = new PdfPCell(new Phrase(Esino, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
            cellInsurance1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellInsurance1.Colspan = 3;
            cellInsurance1.MinimumHeight = 30;
            table5.AddCell(cellInsurance1);

            PdfPCell celldateofapp1 = new PdfPCell(new Phrase(date, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
            celldateofapp1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            celldateofapp1.Colspan = 3;
            celldateofapp.MinimumHeight = 30;
            table5.AddCell(celldateofapp1);


            PdfPCell cellname = new PdfPCell(new Phrase(" 2. Name (in block letters)", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellname.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellname.Colspan = 3;
            cellname.MinimumHeight = 30;
            table5.AddCell(cellname);

            PdfPCell celladdress = new PdfPCell(new Phrase(" 7. Date of Birth", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            celladdress.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            celladdress.Colspan = 3;
            celladdress.MinimumHeight = 30;
            table5.AddCell(celladdress);

            PdfPCell cellname1 = new PdfPCell(new Phrase(name, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
            cellname1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellname1.Colspan = 3;
            cellname1.MinimumHeight = 30;
            table5.AddCell(cellname1);

            PdfPCell celladdress1 = new PdfPCell(new Phrase(dateofbirth, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
            celladdress1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            celladdress1.Colspan = 3;
            celladdress1.MinimumHeight = 30;
            table5.AddCell(celladdress1);

            PdfPCell cellfather = new PdfPCell(new Phrase(" 3. Father's/Husband's Name", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellfather.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellfather.Colspan = 3;
            cellfather.MinimumHeight = 30;
            table5.AddCell(cellfather);

            PdfPCell celldtofbirth = new PdfPCell(new Phrase(" 8. Sex", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            celldtofbirth.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            celldtofbirth.Colspan = 0;
            celldtofbirth.MinimumHeight = 30;
            table5.AddCell(celldtofbirth);

            PdfPCell cellmarital = new PdfPCell(new Phrase(" 9. Marital Status", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellmarital.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellmarital.Colspan = 2;
            cellmarital.MinimumHeight = 30;
            table5.AddCell(cellmarital);


            if (FatherName.Length > 0)
            {
                RelationName = FatherName;
            }
            else if (SpouseName.Length > 0)
            {
                RelationName = SpouseName;
            }
            else if (FSpouseName.Length > 0)
            {
                RelationName = FSpouseName;
            }
            else
            {
                RelationName = "";
            }

            PdfPCell cellfather1 = new PdfPCell(new Phrase(RelationName, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
            cellfather1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellfather1.Colspan = 3;
            cellfather1.MinimumHeight = 30;
            table5.AddCell(cellfather1);

            PdfPCell celldtofbirth1 = new PdfPCell(new Phrase(Gender, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
            celldtofbirth1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            celldtofbirth1.Colspan = 0;
            celldtofbirth1.MinimumHeight = 30;
            table5.AddCell(celldtofbirth1);


            PdfPCell cellmarried = new PdfPCell(new Phrase(maritalstatus, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
            cellmarried.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellmarried.Colspan = 2;
            cellmarried.MinimumHeight = 30;
            table5.AddCell(cellmarried);



            PdfPCell cellpresent = new PdfPCell(new Phrase(" 4. Present Address", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellpresent.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellpresent.Colspan = 3;
            cellpresent.MinimumHeight = 30;
            table5.AddCell(cellpresent);

            PdfPCell cellpermanent = new PdfPCell(new Phrase(" 10. Address of the Employer", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellpermanent.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellpermanent.Colspan = 3;
            cellpermanent.MinimumHeight = 30;
            table5.AddCell(cellpermanent);

            #region Present address String array

            string[] PrAdress = new string[8];
            if (prLmark.Length > 0)
            {
                PrAdress[0] = "Landmark: " + prLmark + ", ";
            }
            else
            {
                PrAdress[0] = "";
            }
            if (prTown.Length > 0)
            {
                PrAdress[1] = "Vill: " + prTown + ", ";
            }
            else
            {
                PrAdress[1] = "";
            }

            if (prPostOffice.Length > 0)
            {
                PrAdress[2] = "Postoffice: " + prPostOffice + ", ";
            }
            else
            {
                PrAdress[2] = "";
            }
            if (prTaluka.Length > 0)
            {
                PrAdress[3] = "Taluka: " + prTaluka + ", ";
            }
            else
            {
                PrAdress[3] = "";
            }
            if (prPoliceStation.Length > 0)
            {
                PrAdress[4] = "Policestation: " + prPoliceStation + ", ";
            }
            else
            {
                PrAdress[4] = "";
            }
            if (prcity.Length > 0)
            {
                PrAdress[5] = "City: " + prcity + ", ";
            }
            else
            {
                PrAdress[5] = "";
            }

            if (prState.Length > 0)
            {
                PrAdress[6] = "State: " + prState + " ";
            }
            else
            {
                PrAdress[6] = ".";
            }


            if (prPincode.Length > 0)
            {
                PrAdress[7] = "Pincode:" + prPincode + ".";
            }
            else
            {
                PrAdress[7] = "";
            }

            string Address1 = string.Empty;

            for (int i = 0; i < 8; i++)
            {
                Address1 += PrAdress[i];
            }


            #endregion

            PdfPCell cellpresent1 = new PdfPCell(new Phrase(Address1.TrimStart(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
            cellpresent1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellpresent1.Colspan = 3;
            cellpresent1.MinimumHeight = 70;
            table5.AddCell(cellpresent1);

            PdfPCell cellpermanent1 = new PdfPCell(new Phrase(CompanyName + " " + Address, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
            cellpermanent1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellpermanent1.Colspan = 3;
            cellpermanent1.MinimumHeight = 70;
            table5.AddCell(cellpermanent1);


            PdfPCell celltel = new PdfPCell(new Phrase("Telephone", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            celltel.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            celltel.Colspan = 3;
            celltel.MinimumHeight = 30;
            table5.AddCell(celltel);

            PdfPCell celltel3 = new PdfPCell(new Phrase("Telephone  " + phno, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            celltel3.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            celltel3.Colspan = 3;
            celltel3.MinimumHeight = 30;
            table5.AddCell(celltel3);


            PdfPCell mobile1 = new PdfPCell(new Phrase("Mobile  " + contactno, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            mobile1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            mobile1.Colspan = 3;
            mobile1.MinimumHeight = 30;
            table5.AddCell(mobile1);

            PdfPCell mobile3 = new PdfPCell(new Phrase("Mobile ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            mobile3.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            mobile3.Colspan = 3;
            mobile3.MinimumHeight = 30;
            table5.AddCell(mobile3);


            PdfPCell cellemail = new PdfPCell(new Phrase("Email Address  " + email, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellemail.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellemail.Colspan = 3;
            cellemail.MinimumHeight = 30;
            table5.AddCell(cellemail);

            PdfPCell cellemail3 = new PdfPCell(new Phrase("Email Address  " + compMail, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellemail3.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellemail3.Colspan = 3;
            cellemail3.MinimumHeight = 30;
            table5.AddCell(cellemail3);


            PdfPCell cellperm2 = new PdfPCell(new Phrase(" 5. Permanent Address", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellperm2.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellperm2.Colspan = 3;
            cellperm2.MinimumHeight = 30;
            table5.AddCell(cellperm2);


            PdfPCell cellprevemp = new PdfPCell(new Phrase(" 11. Previous Employment, if any", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellprevemp.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellprevemp.Colspan = 3;
            cellprevemp.MinimumHeight = 30;
            table5.AddCell(cellprevemp);

            #region Permanent address String array

            string[] PeAdress = new string[8];

            if (pelmark.Length > 0)
            {
                PeAdress[0] = pelmark + ", ";
            }
            else
            {
                PeAdress[0] = "";
            }
            if (peTown.Length > 0)
            {
                PeAdress[1] = "Vill:" + peTown + ", ";
            }
            else
            {
                PeAdress[1] = "";
            }

            if (pePostOffice.Length > 0)
            {
                PeAdress[2] = "Postoffice:" + pePostOffice + ", ";
            }
            else
            {
                PeAdress[2] = "";
            }
            if (peTaluka.Length > 0)
            {
                PeAdress[3] = "Taluka:" + peTaluka + ", ";
            }
            else
            {
                PeAdress[3] = " ";
            }
            if (pePoliceStation.Length > 0)
            {
                PeAdress[4] = "Policestation:" + pePoliceStation + ", ";
            }
            else
            {
                PeAdress[4] = " ";
            }
            if (pecity.Length > 0)
            {
                PeAdress[5] = "City:" + pecity + ", ";
            }
            else
            {
                PeAdress[5] = " ";
            }

            if (peState.Length > 0)
            {
                PeAdress[6] = "State:" + peState + " ";
            }
            else
            {
                PeAdress[6] = ".";
            }


            if (pePincode.Length > 0)
            {
                PeAdress[7] = "Pincode:" + pePincode + ".";
            }
            else
            {
                PeAdress[7] = "";
            }

            string Address2 = string.Empty;

            for (int i = 0; i < 8; i++)
            {
                Address2 += PeAdress[i];
            }


            #endregion

            PdfPCell cellperm4 = new PdfPCell(new Phrase(Address2.TrimStart(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
            cellperm4.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellperm4.Colspan = 3;
            cellperm4.MinimumHeight = 40;
            table5.AddCell(cellperm4);


            PdfPCell cellprevemp1 = new PdfPCell(new Phrase(PrevYrExp, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
            cellprevemp1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellprevemp1.Colspan = 3;
            cellprevemp1.MinimumHeight = 40;
            table5.AddCell(cellprevemp1);


            PdfPCell cellbranchoff = new PdfPCell(new Phrase(" BRANCH OFFICE", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 1, Font.BOLD, BaseColor.BLACK)));
            cellbranchoff.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellbranchoff.Colspan = 1;
            cellbranchoff.MinimumHeight = 30;
            table5.AddCell(cellbranchoff);

            PdfPCell cellbranchoff1 = new PdfPCell(new Phrase(BranchOffice, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
            cellbranchoff1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellbranchoff1.Colspan = 2;
            cellbranchoff1.MinimumHeight = 30;
            table5.AddCell(cellbranchoff1);

            PdfPCell celldispensary = new PdfPCell(new Phrase(" DISPENSARY", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 1, Font.BOLD, BaseColor.BLACK)));
            celldispensary.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            celldispensary.Colspan = 1;
            celldispensary.MinimumHeight = 30;
            table5.AddCell(celldispensary);

            PdfPCell celldispensary1 = new PdfPCell(new Phrase(EmpESIDispName, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
            celldispensary1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            celldispensary1.Colspan = 2;
            celldispensary1.MinimumHeight = 30;
            table5.AddCell(celldispensary1);

            PdfPCell celldesc = new PdfPCell(new Phrase("(C) DETAILS OF NOMINEE U/S 71 OF ESI ACT 1948/RULE 56(2) OF ESI (CENTRAL) RULES, 1950 FOR PAYMENT OF CASH BENEFIT IN THE EVENT OF DEATH.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
            celldesc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            celldesc.Colspan = 6;
            celldesc.MinimumHeight = 30;
            table5.AddCell(celldesc);

            PdfPCell cellname3 = new PdfPCell(new Phrase(" Name", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellname3.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellname3.Colspan = 2;
            cellname3.MinimumHeight = 30;
            table5.AddCell(cellname3);

            PdfPCell cellrelp = new PdfPCell(new Phrase(" Relationship", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellrelp.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellrelp.Colspan = 0;
            cellrelp.MinimumHeight = 30;
            table5.AddCell(cellrelp);

            PdfPCell celladdr = new PdfPCell(new Phrase(" Address, Mobile & Email", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            celladdr.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            celladdr.Colspan = 3;
            celladdr.MinimumHeight = 30;
            table5.AddCell(celladdr);




            if (dtesi.Rows.Count > 0)
            {
                for (int i = 0; i < dtesi.Rows.Count; i++)
                {
                    relationName = dtesi.Rows[i]["RName"].ToString();

                    PdfPCell cellname4 = new PdfPCell(new Phrase(relationName, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellname4.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellname4.Colspan = 2;
                    cellname4.MinimumHeight = 30;
                    table5.AddCell(cellname4);

                    relationType = dtesi.Rows[i]["RType"].ToString();
                    if (relationType != "--Select--")
                    {
                        PdfPCell cellrelp1 = new PdfPCell(new Phrase(relationType, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellrelp1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        cellrelp1.Colspan = 0;
                        cellrelp1.MinimumHeight = 30;
                        table5.AddCell(cellrelp1);


                    }
                    else
                    {
                        PdfPCell cellRType1 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellRType1.HorizontalAlignment = 1;
                        cellRType1.Colspan = 0;
                        table5.AddCell(cellRType1);


                    }


                    RPlace = dtEmpdetails.Rows[i]["RPlace"].ToString();


                    PdfPCell celladdr1 = new PdfPCell(new Phrase(RPlace, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    celladdr1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    celladdr1.Colspan = 3;
                    celladdr1.MinimumHeight = 30;
                    table5.AddCell(celladdr1);
                }
            }

            document.Add(table5);

            document.NewPage();

            PdfPTable table6 = new PdfPTable(6);
            table6.TotalWidth = 550f;
            table6.LockedWidth = true;
            float[] width4 = new float[] { 3f, 2f, 2f, 2f, 3f, 2f };
            table6.SetWidths(width4);

            PdfPCell celldescemp = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
            celldescemp.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            celldescemp.Colspan = 6;
            celldescemp.Border = 0;
            celldescemp.MinimumHeight = 60;
            table6.AddCell(celldescemp);


            PdfPCell celldesc2 = new PdfPCell(new Phrase("(D) FAMILY * PARTICULARS OF INSURED PERSON", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
            celldesc2.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            celldesc2.Colspan = 6;
            celldesc2.MinimumHeight = 30;
            table6.AddCell(celldesc2);

            PdfPCell cellrelname = new PdfPCell(new Phrase("Name", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellrelname.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellrelname.Colspan = 2;
            cellrelname.MinimumHeight = 30;
            table6.AddCell(cellrelname);

            PdfPCell cellreldob = new PdfPCell(new Phrase("Age", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellreldob.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellreldob.Colspan = 0;
            cellreldob.MinimumHeight = 30;
            table6.AddCell(cellreldob);

            PdfPCell cellreltype = new PdfPCell(new Phrase("Relationship with the Employee", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellreltype.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellreltype.Colspan = 0;
            cellreltype.MinimumHeight = 30;
            table6.AddCell(cellreltype);

            PdfPCell cellres = new PdfPCell(new Phrase("Whether residing with him/her ?", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellres.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellres.Colspan = 0;
            cellres.MinimumHeight = 30;
            table6.AddCell(cellres);

            PdfPCell cellrelplace = new PdfPCell(new Phrase("If 'No', Place of Residence", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellrelplace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellrelplace.Colspan = 0;
            cellrelplace.MinimumHeight = 30;
            table6.AddCell(cellrelplace);


            if (dtEmpdetails.Rows.Count > 0)
            {
                for (int i = 0; i < dtEmpdetails.Rows.Count; i++)
                {
                    Relname = dtEmpdetails.Rows[i]["RName"].ToString();
                    Relage = dtEmpdetails.Rows[i]["age"].ToString();
                    RelDOFBirth = dtEmpdetails.Rows[i]["DOfBirth"].ToString();
                    if (Relage == "0")
                    {
                        if (RelDOFBirth == "01/01/1900")
                        {
                            Relage = "";
                        }
                        else
                        {
                            Relage = RelDOFBirth;
                        }
                    }
                    else if (Relage.Length > 0 && Relage != "0")
                    {
                        Relage = dtEmpdetails.Rows[i]["age"].ToString();
                    }
                    else
                    {

                        Relage = "";
                    }

                    PdfPCell cellRName = new PdfPCell(new Phrase(Relname, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellRName.HorizontalAlignment = 1;
                    cellRName.Colspan = 2;
                    table6.AddCell(cellRName);


                    PdfPCell cellreldob1 = new PdfPCell(new Phrase(Relage, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellreldob1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellreldob1.Colspan = 0;
                    cellreldob1.MinimumHeight = 30;
                    table6.AddCell(cellreldob1);



                    RelrelationType = dtEmpdetails.Rows[i]["RType"].ToString();
                    if (relationType != "--Select--")
                    {
                        PdfPCell cellRType = new PdfPCell(new Phrase(RelrelationType, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellRType.HorizontalAlignment = 1;
                        cellRType.Colspan = 0;
                        table6.AddCell(cellRType);
                    }
                    else
                    {
                        PdfPCell cellRType = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellRType.HorizontalAlignment = 1;
                        cellRType.Colspan = 0;
                        table6.AddCell(cellRType);


                    }
                    Relresidence = dtEmpdetails.Rows[i]["RResidence"].ToString();
                    if (Relresidence != "--Select--")
                    {
                        PdfPCell cellres1 = new PdfPCell(new Phrase(Relresidence, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellres1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        cellres1.Colspan = 0;
                        cellres1.MinimumHeight = 30;
                        table6.AddCell(cellres1);
                    }
                    else
                    {
                        PdfPCell cellres1 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellres1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        cellres1.Colspan = 0;
                        cellres1.MinimumHeight = 30;
                        table6.AddCell(cellres1);

                    }
                    Relplace = dtEmpdetails.Rows[i]["RPlace"].ToString();

                    PdfPCell cellrelplace1 = new PdfPCell(new Phrase(Relplace, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellrelplace1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellrelplace1.Colspan = 0;
                    cellrelplace1.MinimumHeight = 30;
                    table6.AddCell(cellrelplace1);
                }
            }





            document.Add(table6);




            PdfPTable table22 = new PdfPTable(2);
            table22.TotalWidth = 500f;
            table22.LockedWidth = true;
            float[] width22 = new float[] { 5f, 2f };
            table22.SetWidths(width22);

            PdfPCell cellspace3 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellspace3.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellspace3.Colspan = 2;
            cellspace3.Border = 0;
            table22.AddCell(cellspace3);

            PdfPCell cellName22 = new PdfPCell(new Phrase("                      I hereby declare that the particulars given by me are correct to the best of my knowledge and belief.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 2, Font.NORMAL, BaseColor.BLACK)));
            cellName22.HorizontalAlignment = 0;
            cellName22.Colspan = 2;
            cellName22.Border = 0;
            cellName22.PaddingTop = 40;
            table22.AddCell(cellName22);


            PdfPCell cellName42 = new PdfPCell(new Phrase("                      I undertake to intimate the Corporation any changes in the membership of my family within 15 days of such change. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 2, Font.NORMAL, BaseColor.BLACK)));
            cellName42.HorizontalAlignment = 0;
            cellName42.Colspan = 2;
            cellName42.Border = 0;
            cellName42.PaddingTop = 5;
            table22.AddCell(cellName42);

            PdfPCell cellsp4 = new PdfPCell(new Phrase("   ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellsp4.HorizontalAlignment = 0;
            cellsp4.Colspan = 2;
            cellsp4.Border = 0;
            cellsp4.PaddingTop = 5;
            table22.AddCell(cellsp4);

            PdfContentByte cb = writer.DirectContent;
            cb.SetLineWidth(2.0f);   // Make a bit thicker than 1.0 default
            cb.SetGrayStroke(0.95f); // 1 = black, 0 = white
            cb.MoveTo(20, 30);
            cb.LineTo(400, 30);
            cb.Stroke();

            table22.AddCell(cellspace);
            table22.AddCell(cellspace);
            table22.AddCell(cellspace);
            table22.AddCell(cellspace);

            PdfPCell cellName31 = new PdfPCell(new Phrase("Counter Signature by the Employer with seal \n\n", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 11, Font.BOLDITALIC, BaseColor.BLACK)));
            cellName31.HorizontalAlignment = 0;
            cellName31.Colspan = 0;
            cellName31.Border = 0;
            cellName31.BorderColorBottom = new BaseColor(System.Drawing.Color.Black);
            cellName31.BorderWidthBottom = 1f;
            cellName31.PaddingTop = 60;
            table22.AddCell(cellName31);

            PdfPCell cellspace41 = new PdfPCell(new Phrase("Signature / T.I.of IP \n\n", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 11, Font.BOLDITALIC, BaseColor.BLACK)));
            cellspace41.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellspace41.Colspan = 0;
            cellspace41.Border = 0;
            cellspace41.BorderColorBottom = new BaseColor(System.Drawing.Color.Black);
            cellspace41.BorderWidthBottom = 1f;
            cellspace41.PaddingTop = 60;
            cellspace41.PaddingLeft = 10;
            table22.AddCell(cellspace41);


            PdfPCell celloff = new PdfPCell(new Phrase("For Office use :-", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.UNDERLINE | Font.BOLD, BaseColor.BLACK)));
            celloff.HorizontalAlignment = 0;
            celloff.Colspan = 2;
            celloff.Border = 0;
            celloff.PaddingTop = 5;
            table22.AddCell(celloff);

            PdfPCell cellauth = new PdfPCell(new Phrase("Authentication by ESIC Branch Manager", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellauth.HorizontalAlignment = 0;
            cellauth.Colspan = 2;
            cellauth.Border = 0;
            cellauth.PaddingTop = 5;
            table22.AddCell(cellauth);

            table22.AddCell(cellspace);
            table22.AddCell(cellspace);
            table22.AddCell(cellspace);
            table22.AddCell(cellspace);


            PdfPCell cellseal = new PdfPCell(new Phrase("Seal \n\n", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 11, Font.BOLD, BaseColor.BLACK)));
            cellseal.HorizontalAlignment = 0;
            cellseal.Colspan = 0;
            cellseal.Border = 0;
            cellseal.BorderColorBottom = new BaseColor(System.Drawing.Color.Black);
            cellseal.BorderWidthBottom = 1f;
            cellseal.PaddingTop = 70;
            table22.AddCell(cellseal);



            PdfPCell cellseal2 = new PdfPCell(new Phrase("Signature \n\n", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 11, Font.BOLD, BaseColor.BLACK)));
            cellseal2.HorizontalAlignment = 1;
            cellseal2.Colspan = 0;
            cellseal2.Border = 0;
            cellseal2.BorderColorBottom = new BaseColor(System.Drawing.Color.Black);
            cellseal2.BorderWidthBottom = 1f;
            cellseal2.PaddingTop = 70;
            table22.AddCell(cellseal2);

            table22.AddCell(cellspace);


            PdfPCell cellfamilytc = new PdfPCell(new Phrase("* Family, as defined under section 2(11) of the ESI Act, 1948, includes the following persons :-", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 12, Font.BOLD, BaseColor.BLACK)));
            cellfamilytc.HorizontalAlignment = 0;
            cellfamilytc.Colspan = 2;
            cellfamilytc.Border = 0;
            cellfamilytc.PaddingTop = 5;
            cellfamilytc.PaddingLeft = 20;
            table22.AddCell(cellfamilytc);

            Font fstyle = FontFactory.GetFont(FontFactory.TIMES_ROMAN, 11, Font.BOLD, BaseColor.BLACK);

            PdfPCell cellfamilytc1 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 11, Font.BOLD, BaseColor.BLACK)));
            Paragraph pt1 = new Paragraph("1)     Spouse of the insured person (Wife or Husband) \n2)     Minor dependant son (legitimate or adopted) \n3)     Minor dependant daughter (legitimate or adopted) \n4)     Son or daughter till he or she attains 21 years of age, if wholly dependant and receiving education \n5)     Daughter,if wholly dependant and unmarried \n6)     Infirm child, if wholly dependant \n7)     Dependant parents", fstyle);
            cellfamilytc1.AddElement(pt1);
            cellfamilytc1.HorizontalAlignment = 0;
            cellfamilytc1.Colspan = 2;
            cellfamilytc1.Border = 0;
            cellfamilytc1.PaddingTop = 5;
            cellfamilytc1.PaddingLeft = 20;
            table22.AddCell(cellfamilytc1);

            document.Add(table22);

            #endregion for ESI Form

            string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "ESI.pdf";

            document.Close();
            Response.ContentType = "application/pdf";
            Response.AddHeader("content-disposition", "attachment;filename=" + filename);
            Response.Buffer = true;
            Response.Clear();
            Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
            Response.OutputStream.Flush();
            Response.End();
        }

        protected void btnApplForm_Click(object sender, EventArgs e)
        {
            int Fontsize = 11;

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";



            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Gender = "";


            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code As on [31-05-2014]




            #region Begin Variable Declaration
            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                string EmpGender = "";

                if (Gender == "True")
                {
                    EmpGender = "Male";
                }
                if (Gender == "False")
                {
                    EmpGender = "Female";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                Document document = new Document(PageSize.LEGAL);
                PdfWriter writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);

                #region Headings of the Pdf



                PdfPTable table = new PdfPTable(2);
                table.TotalWidth = 500f;
                table.LockedWidth = true;
                float[] width = new float[] { 3f, 3f };
                table.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 2;
                cellspace.Border = 0;
                cellspace.PaddingTop = -5;
                table.AddCell(cellspace);


                PdfPCell cellHead = new PdfPCell(new Phrase("LETTER OF APPOINTMENT", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 4, Font.UNDERLINE | Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 1;
                cellHead.Colspan = 2;
                cellHead.Border = 0;
                cellHead.PaddingTop = 40;
                table.AddCell(cellHead);

                table.AddCell(cellspace);


                PdfPCell cellHead4 = new PdfPCell(new Phrase("Date : _____________", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellHead4.HorizontalAlignment = 2;
                cellHead4.Border = 0;
                cellHead4.PaddingTop = 20;
                cellHead4.Colspan = 2;
                table.AddCell(cellHead4);

                table.AddCell(cellspace);


                PdfPCell cellHead6 = new PdfPCell(new Phrase("To ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellHead6.HorizontalAlignment = 0;
                cellHead6.Border = 0;
                cellHead6.Colspan = 2;
                table.AddCell(cellHead6);

                table.AddCell(cellspace);


                PdfPCell cellHead5 = new PdfPCell(new Phrase("Mr  ____________", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellHead5.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                cellHead5.Colspan = 2;
                cellHead5.Border = 0;
                table.AddCell(cellHead5);

                table.AddCell(cellspace);


                PdfPCell cellDesign1 = new PdfPCell(new Phrase("S/o  ____________", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellDesign1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                cellDesign1.Colspan = 2;
                cellDesign1.Border = 0;
                table.AddCell(cellDesign1);

                table.AddCell(cellspace);

                PdfPCell cellDesign = new PdfPCell(new Phrase("R/o  ____________", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellDesign.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                cellDesign.Colspan = 2;
                cellDesign.Border = 0;
                table.AddCell(cellDesign);

                table.AddCell(cellspace);
                table.AddCell(cellspace);
                table.AddCell(cellspace);
                table.AddCell(cellspace);


                PdfPCell cellpost1 = new PdfPCell(new Phrase("Ref : Your Application dated .......... with Biodata for the post Contract Labour/Security Officer on contract  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                cellpost1.HorizontalAlignment = 0;
                cellpost1.Colspan = 2;
                cellpost1.Border = 0;
                //cellpost1.PaddingLeft = 10;
                table.AddCell(cellpost1);

                table.AddCell(cellspace);
                table.AddCell(cellspace);
                table.AddCell(cellspace);
                table.AddCell(cellspace);

                PdfPCell cellTop3 = new PdfPCell(new Phrase("With reference to your application along with Bio data cited above seeking employment in our Organization / establishment and in consequence to your interview in person with us held on ____________  at ___________ A.M / P.M in our office and on accepting the Terms and Conditions of employment / appointment by you. We are pleased to inform you that your appointed to the post Security Lady Searcher as Contract Labour with effect from _____________ in our organization.    ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                cellTop3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                cellTop3.SetLeading(0.0f, 1.5f);
                cellTop3.Colspan = 2;
                cellTop3.Border = 0;
                table.AddCell(cellTop3);


                table.AddCell(cellspace);
                table.AddCell(cellspace);
                table.AddCell(cellspace);
                table.AddCell(cellspace);


                PdfPCell cellTop4 = new PdfPCell(new Phrase("You will be posted to any factory/ establishment on reporting to duty in the state of Telangana. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                cellTop4.HorizontalAlignment = 0;
                cellTop4.Colspan = 2;
                cellTop4.Border = 0;
                table.AddCell(cellTop4);

                table.AddCell(cellspace);
                table.AddCell(cellspace);
                table.AddCell(cellspace);
                table.AddCell(cellspace);


                PdfPCell cellTop5 = new PdfPCell(new Phrase("Your monthly Salary at the consolidated raye is fixed @ Rs__________ /- per month inclusive all.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                cellTop5.HorizontalAlignment = 0;
                cellTop5.Colspan = 2;
                cellTop5.Border = 0;
                table.AddCell(cellTop5);

                table.AddCell(cellspace);
                table.AddCell(cellspace);
                table.AddCell(cellspace);
                table.AddCell(cellspace);


                PdfPCell cellInsurance = new PdfPCell(new Phrase("Basing on your satisfactory performance,annual grade increment will be granted @ Rs_________ /- in future. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                cellInsurance.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                cellInsurance.Colspan = 2;
                cellInsurance.Border = 0;
                table.AddCell(cellInsurance);

                table.AddCell(cellspace);
                table.AddCell(cellspace);



                PdfPCell celldateofapp = new PdfPCell(new Phrase("Signature of the Candidate", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                celldateofapp.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                celldateofapp.Colspan = 0;
                celldateofapp.PaddingTop = 50;
                celldateofapp.Border = 0;
                table.AddCell(celldateofapp);

                PdfPCell cellInsurance1 = new PdfPCell(new Phrase("Authorised Signatory with Seal ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellInsurance1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                cellInsurance1.Colspan = 0;
                cellInsurance1.PaddingTop = 50;
                cellInsurance1.Border = 0;
                table.AddCell(cellInsurance1);

                table.AddCell(cellspace);


                PdfPCell celldateofapp1 = new PdfPCell(new Phrase("Signature : _______________ ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                celldateofapp1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                celldateofapp1.Colspan = 2;
                celldateofapp1.PaddingTop = 40;
                celldateofapp1.Border = 0;
                table.AddCell(celldateofapp1);



                document.Add(table);

                #endregion Headings of the Pdf

                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "AppointmentLetter.pdf";

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }



        }

        protected void btnEnrolmentForm_Click(object sender, EventArgs e)
        {
            int Fontsize = 11;


            #region Variable Declaration

            string CompanyName = "";
            string Address = "";
            string phno = "";
            string compMail = "";


            string SpouseName = "";
            string NomineeName = "";
            string NomineeAddress = "";
            string NomineePhone = "";
            string nomineegmail = "";
            string NomineeRelation = "";
            string NomineeText = "";
            string FSpouseName = "";
            string FatherName = "";
            string FatherOccupation = "";
            string MotherName = "";
            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string dateofbirth = "";
            string Gender = "";
            string Dateofjoining = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";

            string MaritalStatusSpouseText = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string birthplace = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prTown = "";
            string prPostOffice = "";
            string prTaluka = "";
            string prPoliceStation = "";
            string prcity = "";
            string prLmark = "";
            string prPincode = "";
            string prState = "";


            string peTown = "";
            string pePostOffice = "";
            string peTaluka = "";
            string pePoliceStation = "";
            string pecity = "";
            string pelmark = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";
            string refphone1 = "";
            string refphone2 = "";
            string refmail1 = "";
            string refmail2 = "";
            string PoliceRecord = "";

            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";
            string reldateofbirth = "";
            string PrevYrExp = "";


            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string sitepostedto = "";
            string EmergencyPhone = "";


            string Esino = "";
            string PfNo = "";
            string pephone = "";
            string prphone = "";
            string RType = "";
            string RName = "";
            var PanCardNo = "";
            var AadharCardNo = "";
            var RationCardNo = "";
            var VoterIDNo = "";
            var DrivingLicenseNo = "";
            var bankpassbookno = "";
            var electricitybillno = "";
            var ESICCardNo = "";
            var othersno = "";
            var PanCardKYCName = "";
            var AadharCardKYCName = "";
            var RationCardKYCName = "";
            var VoterIDKYCName = "";
            var DrivingLicenseKYCName = "";
            var bankpassbookKYCName = "";
            var electricitybillKYCName = "";
            var ESICCardKYCName = "";
            var othersname = "";
            var aadharoriginal = "";
            var SSCNo = "";
            var SSCOriginal = "";
           
            var panoriginal = "";
          
            var rationoriginal = "";
           
            var drivinglicenceoriginal = "";
          
            var voteridoriginal = "";
         
            var electricityoriginal = "";
         
            var bankpassbookoriginal = "";
           
            var ESICoriginal = "";
           
            var othersoriginal = "";
          


            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            string FormNo = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "EmpBiodataPDF";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]
            string fontstyle = "calibri";
            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
                Dateofjoining = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                FatherName = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                FatherOccupation = dtEmpdetails.Rows[0]["EmpFatherOccupation"].ToString();
                SpouseName = dtEmpdetails.Rows[0]["EmpSpouseName"].ToString();
                MotherName = dtEmpdetails.Rows[0]["EmpMotherName"].ToString();
                PrevYrExp = dtEmpdetails.Rows[0]["PrevYrExp"].ToString();
                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                RType = dtEmpdetails.Rows[0]["RType"].ToString();
                RName = dtEmpdetails.Rows[0]["RName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();

                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();

                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();
                birthplace= dtEmpdetails.Rows[0]["BirthPlace"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                if (bloodgroup == "1")
                {
                    bloodgroup = "A";
                }

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();
                PanCardNo = dtEmpdetails.Rows[0]["PanCardNo"].ToString();
                AadharCardNo = dtEmpdetails.Rows[0]["AadharCardNo"].ToString();
                 RationCardNo = dtEmpdetails.Rows[0]["RationCardNo"].ToString();
                 VoterIDNo = dtEmpdetails.Rows[0]["VoterIDNo"].ToString();
                 DrivingLicenseNo = dtEmpdetails.Rows[0]["DrivingLicenseNo"].ToString();
                 bankpassbookno = dtEmpdetails.Rows[0]["PassBookNo"].ToString();
                 electricitybillno = dtEmpdetails.Rows[0]["ElectricityBillNo"].ToString();
                ESICCardNo = dtEmpdetails.Rows[0]["ESICCardNo"].ToString();
                othersno = dtEmpdetails.Rows[0]["OtherType"].ToString();
               PanCardKYCName = dtEmpdetails.Rows[0]["PanCardName"].ToString(); ;
               AadharCardKYCName = dtEmpdetails.Rows[0]["AadharCardName"].ToString(); ;
                RationCardKYCName = dtEmpdetails.Rows[0]["RationCardName"].ToString(); ;
                VoterIDKYCName = dtEmpdetails.Rows[0]["VoterIDName"].ToString(); ;
                DrivingLicenseKYCName = dtEmpdetails.Rows[0]["drivingLicenseName"].ToString(); ;
                bankpassbookKYCName = dtEmpdetails.Rows[0]["BankPassbookName"].ToString(); ;
                electricitybillKYCName = dtEmpdetails.Rows[0]["ElectricityBillName"].ToString(); ;
                 ESICCardKYCName = dtEmpdetails.Rows[0]["ESICName"].ToString(); ;
                 othersname = dtEmpdetails.Rows[0]["Othertextname"].ToString(); ;

                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prTown = dtEmpdetails.Rows[0]["prTown"].ToString();
                prPostOffice = dtEmpdetails.Rows[0]["prPostOffice"].ToString();
                prTaluka = dtEmpdetails.Rows[0]["prTaluka"].ToString();
                prPoliceStation = dtEmpdetails.Rows[0]["prPoliceStation"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peTown = dtEmpdetails.Rows[0]["peTown"].ToString();
                pePostOffice = dtEmpdetails.Rows[0]["pePostOffice"].ToString();
                peTaluka = dtEmpdetails.Rows[0]["peTaluka"].ToString();
                pePoliceStation = dtEmpdetails.Rows[0]["pePoliceStation"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                
              pephone = dtEmpdetails.Rows[0]["pephone"].ToString();
                prphone = dtEmpdetails.Rows[0]["prphone"].ToString();

                refphone1 = dtEmpdetails.Rows[0]["RefPhoneno1"].ToString();
                refphone2= dtEmpdetails.Rows[0]["RefPhoneno2"].ToString();
                refmail1= dtEmpdetails.Rows[0]["refmail1"].ToString();
                refmail2= dtEmpdetails.Rows[0]["refmail2"].ToString();
                aadharoriginal = dtEmpdetails.Rows[0]["Aadharstatus"].ToString();
                 panoriginal = dtEmpdetails.Rows[0]["Pancardstatus"].ToString();                 
                 rationoriginal = dtEmpdetails.Rows[0]["Rationcardstatus"].ToString();
                drivinglicenceoriginal = dtEmpdetails.Rows[0]["drivinglicencestatus"].ToString();
                 voteridoriginal = dtEmpdetails.Rows[0]["VoterIDStatus"].ToString();
                 electricityoriginal = dtEmpdetails.Rows[0]["electricitybillstatus"].ToString();
                bankpassbookoriginal = dtEmpdetails.Rows[0]["bankaccountstatus"].ToString();
                ESICoriginal = dtEmpdetails.Rows[0]["ESICStatus"].ToString();
                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Image1 = "";

                if (dtEmpdetails.Rows[0]["Image"].ToString() != "")
                {
                    Image1 = dtEmpdetails.Rows[0]["Image"].ToString();
                }
                else
                {

                }
                CompanyName = dtEmpdetails.Rows[0]["CompanyName"].ToString();
                Address = dtEmpdetails.Rows[0]["CompanyAddress"].ToString();
                phno = dtEmpdetails.Rows[0]["CompanyPhone"].ToString();
                compMail = dtEmpdetails.Rows[0]["CompanyEmail"].ToString();
                FSpouseName = dtEmpdetails.Rows[0]["SpouseName"].ToString();
                FormNo = dtEmpdetails.Rows[0]["FormNo"].ToString();
                PoliceRecord= dtEmpdetails.Rows[0]["PoliceRecord"].ToString();
                SSCNo= dtEmpdetails.Rows[0]["SSCNo"].ToString();
                SSCOriginal= dtEmpdetails.Rows[0]["SSCCardstatus"].ToString();
                #endregion

                MemoryStream ms = new MemoryStream();
                string fileheader2 = Idno + "" + name + "" + "Biodata" + " .Pdf";
                Document document = new Document(PageSize.LEGAL);
                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("assets/EmpPhotos/" + Image1);
                // string imagepath2 = Server.MapPath("assets/Images/" + CmpIDPrefix + "Billlogo1.png");
                string imagepath2 = Server.MapPath("assets/Images/" + CmpIDPrefix + "logoBW.jpg");
                string imagepath = Server.MapPath("assets/" + "emptyphoto.png");
                string imagepath11 = Server.MapPath("assets/Images");
                string imagepathpf1 = Server.MapPath("assets/images");
                #region Headings of the Pdf

                PdfPTable table = new PdfPTable(6);
                table.TotalWidth = 570f;
                table.LockedWidth = true;
                float[] width = new float[] { 1.5f, 2f, 2f, 2f, 1.5f, 2f };
                table.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(fontstyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 6;
                cellspace.Border = 0;
                cellspace.PaddingTop = -5;

                PdfPCell cellHead = new PdfPCell(new Phrase(CompanyName, FontFactory.GetFont(fontstyle, Fontsize +6, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 0;
                cellHead.Colspan = 4;
                cellHead.Border = 0;
                cellHead.SetLeading(0f, 1.0f);
                cellHead.PaddingTop = 10;
                cellHead.PaddingLeft =35;
                table.AddCell(cellHead);


                iTextSharp.text.Image icici = iTextSharp.text.Image.GetInstance(imagepath2);
                icici.ScalePercent(8f);
                //icici.Alignment = (iTextSharp.text.Image.ALIGN_RIGHT | iTextSharp.text.Image.UNDERLYING);
                icici.ScaleAbsolute(150f, 90f);
                PdfPCell companylogo = new PdfPCell();
                Paragraph cmplogo = new Paragraph();
                cmplogo.Add(new Chunk(icici, 0, 0));
                companylogo.PaddingLeft = -8;
                companylogo.AddElement(cmplogo);
                companylogo.HorizontalAlignment = 0;
                companylogo.Colspan = 2;
                companylogo.Border = 0;
                table.AddCell(companylogo);



                cellHead = new PdfPCell(new Phrase(Address, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellHead.HorizontalAlignment =0;
                cellHead.Colspan = 6;
                cellHead.Border = 0;
                cellHead.SetLeading(0f, 1.2f);
                cellHead.PaddingTop = -60;
                //cellHead.PaddingLeft =-150;
                cellHead.PaddingLeft = 35;
                table.AddCell(cellHead);

                if (phno.Length > 0)
                {
                    cellHead = new PdfPCell(new Phrase("Ph : " + phno, FontFactory.GetFont(fontstyle, Fontsize + 2, Font.BOLD, BaseColor.BLACK)));
                    cellHead.HorizontalAlignment = 0;
                    cellHead.Colspan = 6;
                    cellHead.Border = 0;
                    cellHead.SetLeading(0f, 1.3f);
                    cellHead.PaddingTop = -17;
                    cellHead.PaddingLeft = 124;
                    table.AddCell(cellHead);
                }
                PdfPCell dateofdis = new PdfPCell();
                var dated = new Phrase();
                dated.Add(new Chunk("             Date        ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                dated.Add(new Chunk(date, FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                dateofdis.AddElement(dated);
                dateofdis.HorizontalAlignment = 2;
                dateofdis.Colspan = 6;
                dateofdis.Border = 0;
                dateofdis.PaddingLeft = 350;
                table.AddCell(dateofdis);

                PdfPCell cellpfCERTIFY = new PdfPCell();
                var celldescription1 = new Phrase();
                celldescription1.Add(new Chunk("     Employee ID ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldescription1.Add(new Chunk(Empid, FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellpfCERTIFY.AddElement(celldescription1);
                cellpfCERTIFY.HorizontalAlignment = 0;
                // cellHead.PaddingLeft =200;
                cellpfCERTIFY.Colspan = 2;
                cellpfCERTIFY.Border = 0;
                table.AddCell(cellpfCERTIFY);


                PdfPCell cellHead4 = new PdfPCell();
                var celldescriptionnew = new Phrase();
                celldescriptionnew.Add(new Chunk("          ", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                celldescriptionnew.Add(new Chunk("BIO-DATA", FontFactory.GetFont(fontstyle, Fontsize + 4, Font.UNDERLINE | Font.BOLD, BaseColor.BLACK)));
                celldescriptionnew.Add(new Chunk("                                              ", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellHead4.AddElement(celldescriptionnew);
                cellHead4.HorizontalAlignment = 1;
                cellHead4.Colspan = 2;
                cellHead4.Border = 0;
                table.AddCell(cellHead4);

                PdfPCell FormNo2 = new PdfPCell();
                var formno1 = new Phrase();
                formno1.Add(new Chunk("Form No ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                formno1.Add(new Chunk(FormNo, FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                FormNo2.AddElement(formno1);
                FormNo2.HorizontalAlignment = 2;
                FormNo2.Colspan = 2;
                FormNo2.Border = 0;
                //dateofdis.PaddingLeft = 200;
                table.AddCell(FormNo2);

                PdfPCell cellNo1 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNo1.HorizontalAlignment = 0;
                cellNo1.Colspan = 2;
                cellNo1.Border = 0;
                cellNo1.PaddingLeft = -3;
                table.AddCell(cellNo1);

                PdfPCell celldate1 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                celldate1.HorizontalAlignment = 1;
                celldate1.Colspan = 4;
                celldate1.Border = 0;
                //celldate1.PaddingLeft = 135;
                table.AddCell(celldate1);

                document.Add(table);

                #endregion

                #region Basic Information of the Employee

                PdfPTable temptable1 = new PdfPTable(8);
                temptable1.TotalWidth = 500f;
                temptable1.LockedWidth = true;
                float[] tempwidth1 = new float[] { 0.6f, 5f, 5f, 5f, 5f, 5f, 5f, 5f };
                temptable1.SetWidths(tempwidth1);

                #region For Childtable One

                PdfPTable childtable = new PdfPTable(6);
                childtable.TotalWidth = 300f;
                childtable.LockedWidth = true;
                float[] childwidth = new float[] { 0.6f, 5f, 5f, 5f, 1f, 10f };
                childtable.SetWidths(childwidth);

                PdfPCell cellName4 = new PdfPCell(new Phrase("1", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName4.HorizontalAlignment = 0;
                cellName4.Border = 0;
                cellName4.Colspan = 1;
                cellName4.PaddingTop = 15;
                //cellName4.PaddingLeft = 25;
                //cellName4.PaddingRight = -25;
                childtable.AddCell(cellName4);

                PdfPCell cellName2 = new PdfPCell(new Phrase(" Name(Surname and Alias)", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName2.HorizontalAlignment = 0;
                cellName2.Border = 0;
                cellName2.Colspan = 3;
                // cellName2.PaddingRight = -25;
                cellName2.PaddingTop = 15;
                childtable.AddCell(cellName2);

                PdfPCell cellName3 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellName3.HorizontalAlignment = 0;
                cellName3.Border = 0;
                cellName3.Colspan = 1;
                cellName3.PaddingTop = 15;
                cellName3.PaddingRight = 0;
                childtable.AddCell(cellName3);

                PdfPCell cellName42 = new PdfPCell(new Phrase(name, FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellName42.HorizontalAlignment = 0;
                cellName42.Border = 0;
                cellName42.Colspan = 1;
                cellName42.PaddingTop = 15;
                // cellName42.PaddingRight = -25;
                childtable.AddCell(cellName42);




                PdfPCell cellName4post = new PdfPCell(new Phrase("2", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName4post.HorizontalAlignment = 0;
                cellName4post.Border = 0;
                cellName4post.Colspan = 1;
                cellName4post.PaddingTop = 15;
                // cellName4post.PaddingRight = -25;
                //  cellName4post.PaddingLeft= 10;
                childtable.AddCell(cellName4post);
                PdfPCell cellNamepost = new PdfPCell(new Phrase("  Post Applied For", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamepost.HorizontalAlignment = 0;
                cellNamepost.Border = 0;
                cellNamepost.Colspan = 3;
                cellNamepost.PaddingTop = 15;
                cellNamepost.PaddingRight = 0;
                childtable.AddCell(cellNamepost);

                PdfPCell cellName3post = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellName3post.HorizontalAlignment = 0;
                cellName3post.Border = 0;
                cellName3post.Colspan = 1;
                cellName3post.PaddingTop = 15;
                childtable.AddCell(cellName3post);

                PdfPCell cellName3post1 = new PdfPCell(new Phrase(postappliedfor, FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellName3post1.HorizontalAlignment = 0;
                cellName3post1.Border = 0;
                cellName3post1.Colspan = 1;
                cellName3post1.PaddingTop = 15;
                childtable.AddCell(cellName3post1);

                PdfPCell cellFather41 = new PdfPCell(new Phrase("3", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellFather41.HorizontalAlignment = 0;
                cellFather41.Border = 0;
                cellFather41.Colspan = 1;
                cellFather41.PaddingTop = 15;
                childtable.AddCell(cellFather41);
                PdfPCell cellFather21 = new PdfPCell(new Phrase(" Father’s Name/Husband's Name", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellFather21.HorizontalAlignment = 0;
                cellFather21.Border = 0;
                cellFather21.Colspan = 3;
                cellFather21.PaddingTop = 15;
                // cellFather21.PaddingRight = -25;
                childtable.AddCell(cellFather21);

                PdfPCell cellFather31 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellFather31.HorizontalAlignment = 0;
                cellFather31.Border = 0;
                cellFather31.Colspan = 1;
                cellFather31.PaddingTop = 15;
                cellFather31.PaddingRight = 0;
                childtable.AddCell(cellFather31);

                PdfPCell cellFather32 = new PdfPCell(new Phrase(FatherName, FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellFather32.HorizontalAlignment = 0;
                cellFather32.Border = 0;
                cellFather32.Colspan = 1;
                cellFather32.PaddingTop = 15;
                cellFather32.PaddingRight = -25;
                childtable.AddCell(cellFather32);

                PdfPCell cellDateofbirth2 = new PdfPCell(new Phrase("4", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellDateofbirth2.HorizontalAlignment = 0;
                cellDateofbirth2.Border = 0;
                cellDateofbirth2.Colspan = 1;
                cellDateofbirth2.PaddingTop = 15;
                childtable.AddCell(cellDateofbirth2);

                PdfPCell cellDateofbirth = new PdfPCell(new Phrase(" Date of Birth & Age ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellDateofbirth.HorizontalAlignment = 0;
                cellDateofbirth.Border = 0;
                cellDateofbirth.Colspan = 3;
                cellDateofbirth.PaddingTop = 15;
                childtable.AddCell(cellDateofbirth);

                PdfPCell cellDateofbirth1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellDateofbirth1.HorizontalAlignment = 0;
                cellDateofbirth1.Border = 0;
                cellDateofbirth1.Colspan = 1;
                cellDateofbirth1.PaddingTop = 15;
                childtable.AddCell(cellDateofbirth1);

                PdfPCell cellDateofbirth21 = new PdfPCell(new Phrase(dateofbirth, FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellDateofbirth21.HorizontalAlignment = 0;
                cellDateofbirth21.Border = 0;
                cellDateofbirth21.Colspan = 1;
                cellDateofbirth21.PaddingTop = 15;
                childtable.AddCell(cellDateofbirth21);



                PdfPCell cellDesign1 = new PdfPCell(new Phrase("5", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellDesign1.HorizontalAlignment = 0;
                cellDesign1.Border = 0;
                cellDesign1.Colspan = 1;
                cellDesign1.PaddingTop = 15;
                childtable.AddCell(cellDesign1);
                PdfPCell cellDesign = new PdfPCell(new Phrase(" Qualification  ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellDesign.HorizontalAlignment = 0;
                cellDesign.Border = 0;
                cellDesign.Colspan = 3;
                cellDesign.PaddingTop = 15;
                childtable.AddCell(cellDesign);

                PdfPCell cellDesign3 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellDesign3.HorizontalAlignment = 0;
                cellDesign3.Border = 0;
                cellDesign3.Colspan = 1;
                cellDesign3.PaddingTop = 15;
                childtable.AddCell(cellDesign3);

                PdfPCell cellDesign31 = new PdfPCell(new Phrase(TechnicalQualification + educationqualification, FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellDesign31.HorizontalAlignment = 0;
                cellDesign31.Border = 0;
                cellDesign31.Colspan = 1;
                cellDesign31.PaddingTop = 15;
                childtable.AddCell(cellDesign31);


                PdfPCell Contactno2 = new PdfPCell(new Phrase("6", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                Contactno2.HorizontalAlignment = 0;
                Contactno2.Border = 0;
                Contactno2.Colspan = 1;
                Contactno2.PaddingTop = 15;
                childtable.AddCell(Contactno2);

                PdfPCell Contactno = new PdfPCell(new Phrase(" Previous Post held, Name Of ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                Contactno.HorizontalAlignment = 0;
                Contactno.Border = 0;
                Contactno.PaddingTop = 15;
                Contactno.Colspan = 3;
                childtable.AddCell(Contactno);

                PdfPCell Contactno1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                Contactno1.HorizontalAlignment = 0;
                Contactno1.Border = 0;
                Contactno1.Colspan = 1;
                Contactno1.PaddingTop = 15;
                childtable.AddCell(Contactno1);

                PdfPCell Contactno21 = new PdfPCell(new Phrase(previouspost, FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                Contactno21.HorizontalAlignment = 0;
                Contactno21.Border = 0;
                Contactno21.Colspan = 1;
                Contactno21.PaddingTop = 15;
                childtable.AddCell(Contactno21);

                PdfPCell Rank2 = new PdfPCell(new Phrase("7", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                Rank2.HorizontalAlignment = 0;
                Rank2.Border = 0;
                Rank2.Colspan = 1;
                Rank2.PaddingTop = 15;
                childtable.AddCell(Rank2);

                PdfPCell Rank = new PdfPCell(new Phrase(" Marital Status", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                Rank.HorizontalAlignment = 0;
                Rank.Border = 0;
                Rank.Colspan = 3;
                Rank.PaddingTop = 15;
                childtable.AddCell(Rank);

                PdfPCell Rank1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                Rank1.HorizontalAlignment = 0;
                Rank1.Border = 0;
                Rank1.Colspan = 1;
                Rank1.PaddingTop = 15;
                childtable.AddCell(Rank1);

                PdfPCell Rank12 = new PdfPCell(new Phrase(maritalstatus, FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                Rank12.HorizontalAlignment = 0;
                Rank12.Border = 0;
                Rank12.Colspan = 1;
                Rank12.PaddingTop = 15;
                childtable.AddCell(Rank12);

                PdfPCell Rank211 = new PdfPCell(new Phrase("8", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                Rank211.HorizontalAlignment = 0;
                Rank211.Border = 0;
                Rank211.Colspan = 1;
                Rank211.PaddingTop = 15;
                childtable.AddCell(Rank211);

                PdfPCell Contactno11 = new PdfPCell(new Phrase(" Contact No", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                Contactno11.HorizontalAlignment = 0;
                Contactno11.Border = 0;
                Contactno11.Colspan = 3;
                Contactno11.PaddingTop = 15;
                childtable.AddCell(Contactno11);

                PdfPCell Rank111 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                Rank111.HorizontalAlignment = 0;
                Rank111.Border = 0;
                Rank111.Colspan = 1;
                Rank111.PaddingTop = 15;
                childtable.AddCell(Rank111);

                PdfPCell Rank121 = new PdfPCell(new Phrase(contactno, FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                Rank121.HorizontalAlignment = 0;
                Rank121.Border = 0;
                Rank121.Colspan = 1;
                Rank121.PaddingTop = 15;
                childtable.AddCell(Rank121);

                PdfPCell ChildTable1 = new PdfPCell(childtable);
                ChildTable1.Colspan = 5;
                ChildTable1.Border = 0;
                temptable1.AddCell(ChildTable1);

                #endregion

                #region For Childtable 2

                PdfPTable childphoto = new PdfPTable(2);
                childphoto.TotalWidth = 200f;
                childphoto.LockedWidth = true;
                float[] childwidth2 = new float[] { 0.5f, 5f };
                childphoto.SetWidths(childwidth2);

                if (File.Exists(imagepath1))
                {
                    iTextSharp.text.Image srflogo = iTextSharp.text.Image.GetInstance(imagepath1);
                    srflogo.ScaleAbsolute(85f, 90f);
                    PdfPCell companylogo1 = new PdfPCell();
                    Paragraph cmplogo1 = new Paragraph();
                    cmplogo1.Add(new Chunk(srflogo, 50f, 0f));
                    companylogo1.AddElement(srflogo);
                    companylogo1.HorizontalAlignment = 2;
                    companylogo1.Colspan = 2;
                    companylogo1.PaddingLeft = 60;
                    companylogo1.Border = 0;
                    childphoto.AddCell(companylogo1);
                }
                else
                {
                    PdfPCell Cellempty = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    Cellempty.HorizontalAlignment = 2;
                    Cellempty.Border = 0;
                    Cellempty.Colspan = 1;
                    childphoto.AddCell(Cellempty);

                    iTextSharp.text.Image srflogo = iTextSharp.text.Image.GetInstance(imagepath);
                    srflogo.ScaleAbsolute(85f, 90f);
                    PdfPCell companylogo1 = new PdfPCell();
                    Paragraph cmplogo1 = new Paragraph();
                   cmplogo1.Add(new Chunk(srflogo, 50f, 0f));
                    companylogo1.AddElement(srflogo);
                    companylogo1.HorizontalAlignment = 2;
                    companylogo1.PaddingLeft = 60;
                    companylogo1.Colspan = 1;
                    companylogo1.Border = 0;
                    childphoto.AddCell(companylogo1);
                    //PdfPCell companyempty = new PdfPCell();
                    //companyempty.HorizontalAlignment = 1;
                    //companyempty.Border = 0;
                    //companyempty.Colspan = 1;
                    //companyempty.FixedHeight = 90;
                    //childphoto.AddCell(companyempty);

                    //PdfPCell companyempty1 = new PdfPCell();
                    //companyempty1.HorizontalAlignment = 2;
                    //companyempty1.Colspan = 1;

                    //companyempty1.BorderWidthTop = 0.2f;
                    //companyempty1.BorderWidthBottom = 0.2f;
                    //companyempty1.BorderWidthLeft = 0.2f;
                    //companyempty1.BorderWidthRight = 0.2f;
                    ////companyempty1.PaddingLeft = 10f;
                    //companyempty1.PaddingLeft = 60;
                    //companyempty1.FixedHeight = 90;
                    //childphoto.AddCell(companyempty1);
                }

                PdfPCell cellplaceofbirth1 = new PdfPCell(new Phrase("Place Of Birth :" +birthplace, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellplaceofbirth1.HorizontalAlignment = 0;
                cellplaceofbirth1.Border = 0;
                cellplaceofbirth1.Colspan = 2;
                cellplaceofbirth1.PaddingTop = 15;
                cellplaceofbirth1.PaddingLeft = 60;
                childphoto.AddCell(cellplaceofbirth1);



                PdfPCell Blood = new PdfPCell(new Phrase("Blood Group : " + bloodgroup, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                Blood.HorizontalAlignment = 0;
                Blood.Border = 0;
                Blood.Colspan = 2;
                Blood.PaddingTop = 15;
                Blood.PaddingLeft = 60;
                childphoto.AddCell(Blood);

                PdfPCell ChildPhoto1 = new PdfPCell(childphoto);
                ChildPhoto1.Colspan = 3;
                ChildPhoto1.Border = 0;
                temptable1.AddCell(ChildPhoto1);


                #endregion

                

                Rank2 = new PdfPCell(new Phrase("9", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                Rank2.HorizontalAlignment = 0;
                Rank2.Border = 0;
                Rank2.Colspan = 1;
                Rank2.PaddingTop = 15;
                Rank2.PaddingLeft = -5;
                temptable1.AddCell(Rank2);

                Rank = new PdfPCell(new Phrase(" Measurements", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                Rank.HorizontalAlignment = 0;
                Rank.Border = 0;
                Rank.Colspan = 7;
                Rank.PaddingTop = 15;
                Rank.PaddingLeft = -5;
                temptable1.AddCell(Rank);

                Rank = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                Rank.HorizontalAlignment = 0;
                Rank.Border = 0;
                Rank.Colspan = 2;
                Rank.PaddingTop = 15;
                Rank.PaddingLeft = -5;
                temptable1.AddCell(Rank);

                Rank1 = new PdfPCell(new Phrase("Height", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                Rank1.HorizontalAlignment = 0;
                Rank1.Border = 0;
                Rank1.Colspan = 1;
                Rank1.PaddingTop = 15;
                Rank1.PaddingLeft = -10;
                temptable1.AddCell(Rank1);

                Rank1 = new PdfPCell(new Phrase(height, FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                Rank1.HorizontalAlignment = 0;
                Rank1.Border = 0;
                Rank1.Colspan = 1;
                Rank1.PaddingTop = 15;
                Rank1.PaddingLeft = -10;
                temptable1.AddCell(Rank1);

                Rank1 = new PdfPCell(new Phrase("Weight", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                Rank1.HorizontalAlignment = 0;
                Rank1.Border = 0;
                Rank1.Colspan = 1;
                Rank1.PaddingTop = 15;
                Rank1.PaddingLeft = -35;
                temptable1.AddCell(Rank1);

                Rank1 = new PdfPCell(new Phrase(weight, FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                Rank1.HorizontalAlignment = 0;
                Rank1.Border = 0;
                Rank1.Colspan = 1;
                Rank1.PaddingTop = 15;
                Rank1.PaddingLeft = -30;
                temptable1.AddCell(Rank1);

                Rank1 = new PdfPCell(new Phrase("Chest      ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                Rank1.HorizontalAlignment = 0;
                Rank1.Border = 0;
                Rank1.Colspan = 1;
                Rank1.PaddingTop = 15;
                Rank1.PaddingLeft = 10;
                temptable1.AddCell(Rank1);

                Rank1 = new PdfPCell(new Phrase(chest, FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                Rank1.HorizontalAlignment = 0;
                Rank1.Border = 0;
                Rank1.Colspan = 1;
                Rank1.PaddingTop = 15;
                Rank1.PaddingLeft = -15;
                temptable1.AddCell(Rank1);

                PdfPCell cellEdq2 = new PdfPCell(new Phrase("10", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellEdq2.HorizontalAlignment = 0;
                cellEdq2.Border = 0;
                cellEdq2.PaddingTop = 15;
                cellEdq2.PaddingLeft = -7;
                cellEdq2.Colspan = 1;
                temptable1.AddCell(cellEdq2);

                PdfPCell cellEdq = new PdfPCell(new Phrase(" Identification Marks ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellEdq.HorizontalAlignment = 0;
                cellEdq.Border = 0;
                cellEdq.Colspan = 3;
                cellEdq.PaddingTop = 15;
                cellEdq.PaddingLeft = -5;
                temptable1.AddCell(cellEdq);

                PdfPCell cellEdq1 = new PdfPCell(new Phrase(":i)" + identificationmark1, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellEdq1.HorizontalAlignment = 0;
                cellEdq1.Border = 0;
                cellEdq1.Colspan = 8;
                cellEdq1.PaddingTop = 15;
                cellEdq1.PaddingLeft = -35;
                temptable1.AddCell(cellEdq1);


                PdfPCell cellEdq123 = new PdfPCell(new Phrase(":ii)" + identificationmark2, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellEdq123.HorizontalAlignment = 0;
                cellEdq123.Border = 0;
                cellEdq123.Colspan = 8;
                cellEdq123.PaddingTop = 15;
                cellEdq123.PaddingLeft = 180;
                temptable1.AddCell(cellEdq123);


                PdfPCell cellEdqlan = new PdfPCell(new Phrase("11 Languages Known ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellEdqlan.HorizontalAlignment = 0;
                cellEdqlan.Border = 0;
                cellEdqlan.Colspan = 8;
                cellEdqlan.PaddingTop = 15;
                cellEdqlan.PaddingLeft = -5;
                temptable1.AddCell(cellEdqlan);

                PdfPCell cellEdqlan2em = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellEdqlan2em.HorizontalAlignment = 0;
                cellEdqlan2em.Border = 0;
                cellEdqlan2em.Colspan = 1;
                cellEdqlan2em.PaddingTop = 15;
                temptable1.AddCell(cellEdqlan2em);

                PdfPCell cellEdqlan2 = new PdfPCell(new Phrase("Telugu", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellEdqlan2.HorizontalAlignment = 0;
                cellEdqlan2.Border = 0;
                cellEdqlan2.Colspan = 1;
                cellEdqlan2.PaddingTop = 15;
                temptable1.AddCell(cellEdqlan2);

                cellEdqlan2 = new PdfPCell(new Phrase("Speak", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellEdqlan2.HorizontalAlignment = 0;
                cellEdqlan2.Border = 0;
                cellEdqlan2.Colspan = 1;
                cellEdqlan2.PaddingTop = 15;
                temptable1.AddCell(cellEdqlan2);

                iTextSharp.text.Image sqpng = iTextSharp.text.Image.GetInstance(imagepathpf1 + "/checkbox1.png");
                PdfPCell tickop11 = new PdfPCell(sqpng);
                tickop11.HorizontalAlignment = 0;
                tickop11.Colspan = 1;
                tickop11.Border = 0;
                tickop11.PaddingTop = 15;
                temptable1.AddCell(tickop11);

                cellEdqlan2 = new PdfPCell(new Phrase("Read", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellEdqlan2.HorizontalAlignment = 0;
                cellEdqlan2.Border = 0;
                cellEdqlan2.Colspan = 1;
                cellEdqlan2.PaddingTop = 15;
                temptable1.AddCell(cellEdqlan2);

                iTextSharp.text.Image sqpng1 = iTextSharp.text.Image.GetInstance(imagepathpf1 + "/checkbox1.png");
                PdfPCell tickop111 = new PdfPCell(sqpng1);
                tickop111.HorizontalAlignment = 0;
                tickop111.Colspan = 1;
                tickop111.Border = 0;
                tickop111.PaddingTop = 15;
                temptable1.AddCell(tickop111);

                cellEdqlan2 = new PdfPCell(new Phrase("Write", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellEdqlan2.HorizontalAlignment = 0;
                cellEdqlan2.Border = 0;
                cellEdqlan2.Colspan = 1;
                cellEdqlan2.PaddingTop = 15;
                temptable1.AddCell(cellEdqlan2);

                iTextSharp.text.Image sqpng2 = iTextSharp.text.Image.GetInstance(imagepathpf1 + "/checkbox1.png");
                PdfPCell tickop112 = new PdfPCell(sqpng2);
                tickop112.HorizontalAlignment = 0;
                tickop112.Colspan = 1;
                tickop112.Border = 0;
                tickop112.PaddingTop = 15;
                temptable1.AddCell(tickop112);

                cellEdqlan2 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellEdqlan2.HorizontalAlignment = 0;
                cellEdqlan2.Border = 0;
                cellEdqlan2.Colspan = 1;
                cellEdqlan2.PaddingTop = 15;
                temptable1.AddCell(cellEdqlan2);

                PdfPCell cellhindi = new PdfPCell(new Phrase("Hindi", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellhindi.HorizontalAlignment = 0;
                cellhindi.Border = 0;
                cellhindi.Colspan = 1;
                cellhindi.PaddingTop = 15;
                temptable1.AddCell(cellhindi);

                cellhindi = new PdfPCell(new Phrase("Speak", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellhindi.HorizontalAlignment = 0;
                cellhindi.Border = 0;
                cellhindi.Colspan = 1;
                cellhindi.PaddingTop = 15;
                temptable1.AddCell(cellhindi);

                iTextSharp.text.Image sqpng3 = iTextSharp.text.Image.GetInstance(imagepathpf1 + "/checkbox1.png");
                PdfPCell tickop13 = new PdfPCell(sqpng3);
                tickop13.HorizontalAlignment = 0;
                tickop13.Colspan = 1;
                tickop13.Border = 0;
                tickop13.PaddingTop = 15;
                temptable1.AddCell(tickop13);

                cellhindi = new PdfPCell(new Phrase("Read", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellhindi.HorizontalAlignment = 0;
                cellhindi.Border = 0;
                cellhindi.Colspan = 1;
                cellhindi.PaddingTop = 15;
                temptable1.AddCell(cellhindi);

                iTextSharp.text.Image sqpng4 = iTextSharp.text.Image.GetInstance(imagepathpf1 + "/checkbox1.png");
                PdfPCell tickop14 = new PdfPCell(sqpng4);
                tickop14.HorizontalAlignment = 0;
                tickop14.Colspan = 1;
                tickop14.Border = 0;
                tickop14.PaddingTop = 15;
                temptable1.AddCell(tickop14);

                cellhindi = new PdfPCell(new Phrase("Write", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellhindi.HorizontalAlignment = 0;
                cellhindi.Border = 0;
                cellhindi.Colspan = 1; cellhindi.PaddingTop = 15;
                temptable1.AddCell(cellhindi);

                iTextSharp.text.Image sqpng5 = iTextSharp.text.Image.GetInstance(imagepathpf1 + "/checkbox1.png");
                PdfPCell tickop15 = new PdfPCell(sqpng5);
                tickop15.HorizontalAlignment = 0;
                tickop15.Colspan = 1;
                tickop15.Border = 0;
                tickop15.PaddingTop = 15;
                temptable1.AddCell(tickop15);

                cellhindi = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellhindi.HorizontalAlignment = 0;
                cellhindi.Border = 0;
                cellhindi.Colspan = 1;
                cellhindi.PaddingTop = 15;
                temptable1.AddCell(cellhindi);

                PdfPCell cellEdqlanenglish = new PdfPCell(new Phrase("English", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellEdqlanenglish.HorizontalAlignment = 0;
                cellEdqlanenglish.Border = 0;
                cellEdqlanenglish.Colspan = 1;
                cellEdqlanenglish.PaddingTop = 15;
                temptable1.AddCell(cellEdqlanenglish);

                cellEdqlanenglish = new PdfPCell(new Phrase("Speak", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellEdqlanenglish.HorizontalAlignment = 0;
                cellEdqlanenglish.Border = 0;
                cellEdqlanenglish.PaddingTop = 15;
                cellEdqlanenglish.Colspan = 1;
                temptable1.AddCell(cellEdqlanenglish);

                iTextSharp.text.Image sqpng6 = iTextSharp.text.Image.GetInstance(imagepathpf1 + "/checkbox1.png");
                PdfPCell tickop16 = new PdfPCell(sqpng6);
                tickop16.HorizontalAlignment = 0;
                tickop16.PaddingTop = 15;
                tickop16.Colspan = 1;
                tickop16.Border = 0;
                temptable1.AddCell(tickop16);

                cellEdqlanenglish = new PdfPCell(new Phrase("Read", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellEdqlanenglish.HorizontalAlignment = 0;
                cellEdqlanenglish.Border = 0;
                cellEdqlanenglish.PaddingTop = 15;
                cellEdqlanenglish.Colspan = 1;
                temptable1.AddCell(cellEdqlanenglish);

                iTextSharp.text.Image sqpng7 = iTextSharp.text.Image.GetInstance(imagepathpf1 + "/checkbox1.png");
                PdfPCell tickop17 = new PdfPCell(sqpng7);
                tickop17.HorizontalAlignment = 0;
                tickop17.PaddingTop = 15;
                tickop17.Colspan = 1;
                tickop17.Border = 0;
                temptable1.AddCell(tickop17);

                cellEdqlanenglish = new PdfPCell(new Phrase("Write", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellEdqlanenglish.HorizontalAlignment = 0;
                cellEdqlanenglish.Border = 0;
                cellEdqlanenglish.PaddingTop = 15;
                cellEdqlanenglish.Colspan = 1;
                temptable1.AddCell(cellEdqlanenglish);

                iTextSharp.text.Image sqpng8 = iTextSharp.text.Image.GetInstance(imagepathpf1 + "/checkbox1.png");
                PdfPCell tickop18 = new PdfPCell(sqpng8);
                tickop18.HorizontalAlignment = 0;
                tickop18.Colspan = 1;
                tickop18.PaddingTop = 15;
                tickop18.Border = 0;
                temptable1.AddCell(tickop18);

                PdfPCell cellEdqlerm = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellEdqlerm.HorizontalAlignment = 0;
                cellEdqlerm.Border = 0;
                cellEdqlerm.Colspan = 1;
                cellEdqlerm.PaddingTop = 15;
                temptable1.AddCell(cellEdqlerm);

                PdfPCell cellEmptylan = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellEmptylan.HorizontalAlignment = 0;
                cellEmptylan.Border = 0;
                cellEmptylan.Colspan = 1;
                cellEmptylan.PaddingTop = 15;
                temptable1.AddCell(cellEmptylan);

                cellEmptylan = new PdfPCell(new Phrase("Speak", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellEmptylan.HorizontalAlignment = 0;
                cellEmptylan.Border = 0;
                cellEmptylan.PaddingTop = 15;
                cellEmptylan.Colspan = 1;
                temptable1.AddCell(cellEmptylan);

                iTextSharp.text.Image sqpng9 = iTextSharp.text.Image.GetInstance(imagepathpf1 + "/checkbox1.png");
                PdfPCell tickop19 = new PdfPCell(sqpng9);
                tickop19.HorizontalAlignment = 0;
                tickop19.Colspan = 1;
                tickop19.Border = 0;
                tickop19.PaddingTop = 15;
                temptable1.AddCell(tickop19);

                cellEmptylan = new PdfPCell(new Phrase("Read", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellEmptylan.HorizontalAlignment = 0;
                cellEmptylan.Border = 0;
                cellEmptylan.Colspan = 1;
                cellEmptylan.PaddingTop = 15;
                temptable1.AddCell(cellEmptylan);

                iTextSharp.text.Image sqpng20 = iTextSharp.text.Image.GetInstance(imagepathpf1 + "/checkbox1.png");
                PdfPCell tickop20 = new PdfPCell(sqpng20);
                tickop20.HorizontalAlignment = 0;
                tickop20.Colspan = 1;
                tickop20.Border = 0;
                tickop20.PaddingTop = 15;
                temptable1.AddCell(tickop20);

                cellEmptylan = new PdfPCell(new Phrase("Write", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellEmptylan.HorizontalAlignment = 0;
                cellEmptylan.Border = 0;
                cellEmptylan.Colspan = 1;
                cellEmptylan.PaddingTop = 15;
                temptable1.AddCell(cellEmptylan);

                iTextSharp.text.Image sqpng21 = iTextSharp.text.Image.GetInstance(imagepathpf1 + "/checkbox1.png");
                PdfPCell tickop21 = new PdfPCell(sqpng21);
                tickop21.HorizontalAlignment = 0;
                tickop21.Colspan = 1;
                tickop21.Border = 0;
                tickop21.PaddingTop = 15;
                temptable1.AddCell(tickop21);
                document.Add(temptable1);

                PdfPTable temptablesub = new PdfPTable(11);
                temptablesub.TotalWidth = 500f;
                temptablesub.LockedWidth = true;
                float[] tempwidthsub = new float[] { 3f, 0.5f, 5f, 0.5f, 5f, 0.5f, 5f, 0.5f, 5f, 0.5f, 5f };
                temptablesub.SetWidths(tempwidthsub);

                PdfPCell cellEdqlanfinger = new PdfPCell(new Phrase("12 Finger prints", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellEdqlanfinger.HorizontalAlignment = 0;
                cellEdqlanfinger.Border = 0;
                cellEdqlanfinger.Colspan = 11;
                cellEdqlanfinger.PaddingTop = 15;
                cellEdqlanfinger.PaddingLeft = -5;
                temptablesub.AddCell(cellEdqlanfinger);


                PdfPCell cellEmpty = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellEmpty.HorizontalAlignment = 0;
                cellEmpty.Border = 0;
                cellEmpty.Colspan = 2;
                cellEmpty.PaddingBottom = 15;
                cellEmpty.PaddingTop = 15;
                temptablesub.AddCell(cellEmpty);

                PdfPCell cellsmallf = new PdfPCell(new Phrase("Small Finger", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsmallf.HorizontalAlignment = 0;
                cellsmallf.Border = 0;
                cellsmallf.Colspan = 1;
                cellsmallf.PaddingBottom = 15;
                cellsmallf.PaddingTop = 15;
                temptablesub.AddCell(cellsmallf);

                cellEmpty = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellEmpty.HorizontalAlignment = 0;
                cellEmpty.Border = 0;
                cellEmpty.Colspan = 1;
                cellEmpty.PaddingBottom = 15;
                cellEmpty.PaddingTop = 15;
                temptablesub.AddCell(cellEmpty);

                PdfPCell cellRingfinger = new PdfPCell(new Phrase("Ring Finger", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellRingfinger.HorizontalAlignment = 0;
                cellRingfinger.Border = 0;
                cellRingfinger.Colspan = 1;
                cellRingfinger.PaddingBottom = 15;
                cellRingfinger.PaddingTop = 15;
                temptablesub.AddCell(cellRingfinger);

                cellEmpty = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellEmpty.HorizontalAlignment = 0;
                cellEmpty.Border = 0;
                cellEmpty.Colspan = 1;
                cellEmpty.PaddingBottom = 15;
                cellEmpty.PaddingTop = 15;
                temptablesub.AddCell(cellEmpty);

                PdfPCell cellmiddlefinger = new PdfPCell(new Phrase("Middle Finger", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellmiddlefinger.HorizontalAlignment = 0;
                cellmiddlefinger.Border = 0;
                cellmiddlefinger.Colspan = 1;
                cellmiddlefinger.PaddingBottom = 15;
                cellmiddlefinger.PaddingTop = 15;
                temptablesub.AddCell(cellmiddlefinger);


                cellEmpty = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellEmpty.HorizontalAlignment = 0;
                cellEmpty.Border = 0;
                cellEmpty.Colspan = 1;
                cellEmpty.PaddingBottom = 15;
                cellEmpty.PaddingTop = 15;
                temptablesub.AddCell(cellEmpty);

                PdfPCell cellIndexfinger = new PdfPCell(new Phrase("Index Finger", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellIndexfinger.HorizontalAlignment = 0;
                cellIndexfinger.Border = 0;
                cellIndexfinger.Colspan = 1;
                cellIndexfinger.PaddingBottom = 15;
                cellIndexfinger.PaddingTop = 15;
                temptablesub.AddCell(cellIndexfinger);


                cellEmpty = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellEmpty.HorizontalAlignment = 0;
                cellEmpty.Border = 0;
                cellEmpty.Colspan = 1;
                cellEmpty.PaddingBottom = 15;
                cellEmpty.PaddingTop = 15;
                temptablesub.AddCell(cellEmpty);

                PdfPCell cellthumb = new PdfPCell(new Phrase("Thumb", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellthumb.HorizontalAlignment = 0;
                cellthumb.Border = 0;
                cellthumb.Colspan = 1;
                cellthumb.PaddingBottom = 15;
                cellthumb.PaddingTop = 15;
                temptablesub.AddCell(cellthumb);

                PdfPCell cellRighthand = new PdfPCell(new Phrase("Right Hand ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellRighthand.HorizontalAlignment = 1;
                cellRighthand.Colspan = 1;
              cellRighthand.MinimumHeight = 60;
                cellRighthand.PaddingTop = 15;
                temptablesub.AddCell(cellRighthand);

                cellRighthand = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellRighthand.HorizontalAlignment = 0;
                cellRighthand.Colspan = 1;
                cellRighthand.BorderWidthTop = 0;
                cellRighthand.BorderWidthRight = 0;
                cellRighthand.BorderWidthBottom = 0;
                cellRighthand.BorderWidthLeft = 0;
                cellRighthand.MinimumHeight = 20;
                temptablesub.AddCell(cellRighthand);

                cellRighthand = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellRighthand.HorizontalAlignment = 0;
                cellRighthand.Colspan = 1;
                cellRighthand.MinimumHeight = 60;
                temptablesub.AddCell(cellRighthand);

                cellRighthand = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellRighthand.HorizontalAlignment = 0;
                cellRighthand.Colspan = 1;
                cellRighthand.BorderWidthTop = 0;
                cellRighthand.BorderWidthRight = 0;
                cellRighthand.BorderWidthBottom = 0;
                cellRighthand.BorderWidthLeft = 0;
                cellRighthand.MinimumHeight = 20;
                temptablesub.AddCell(cellRighthand);

                cellRighthand = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellRighthand.HorizontalAlignment = 0;
                cellRighthand.Colspan = 1;
                cellRighthand.MinimumHeight = 60;               
                temptablesub.AddCell(cellRighthand);

                cellRighthand = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellRighthand.HorizontalAlignment = 0;
                cellRighthand.Colspan = 1;
                cellRighthand.BorderWidthTop = 0;
                cellRighthand.BorderWidthRight = 0;
                cellRighthand.BorderWidthBottom = 0;
                cellRighthand.BorderWidthLeft = 0;
                cellRighthand.MinimumHeight = 20;
                temptablesub.AddCell(cellRighthand);

                cellRighthand = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellRighthand.HorizontalAlignment = 0;
                cellRighthand.Colspan = 1;
                cellRighthand.MinimumHeight = 60;
                temptablesub.AddCell(cellRighthand);

                cellRighthand = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellRighthand.HorizontalAlignment = 0;
                cellRighthand.Colspan = 1;
                cellRighthand.BorderWidthTop = 0;
                cellRighthand.BorderWidthRight = 0;
                cellRighthand.BorderWidthBottom = 0;
                cellRighthand.BorderWidthLeft = 0;
                cellRighthand.MinimumHeight = 20;
                temptablesub.AddCell(cellRighthand);

                cellRighthand = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellRighthand.HorizontalAlignment = 0;
                cellRighthand.Colspan = 1;
                cellRighthand.MinimumHeight = 60;                
                temptablesub.AddCell(cellRighthand);

                cellRighthand = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellRighthand.HorizontalAlignment = 0;
                cellRighthand.Colspan = 1;
                cellRighthand.BorderWidthTop = 0;
                cellRighthand.BorderWidthRight = 0;
                cellRighthand.BorderWidthBottom = 0;
                cellRighthand.BorderWidthLeft = 0;
                cellRighthand.MinimumHeight = 20;
                temptablesub.AddCell(cellRighthand);

                cellRighthand = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellRighthand.HorizontalAlignment = 0;
                cellRighthand.Colspan = 1;
                cellRighthand.MinimumHeight = 60;                
                temptablesub.AddCell(cellRighthand);

                PdfPCell cellEmptyhand = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellEmptyhand.HorizontalAlignment = 0;
                cellEmptyhand.Colspan = 1;
                cellEmptyhand.Border = 0;
                temptablesub.AddCell(cellEmptyhand);

                cellEmptyhand = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellEmptyhand.HorizontalAlignment = 0;
                cellEmptyhand.Colspan = 1;
                cellEmptyhand.Border = 0;
                temptablesub.AddCell(cellEmptyhand);

                cellEmptyhand = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellEmptyhand.HorizontalAlignment = 0;
                cellEmptyhand.Colspan = 1;
                cellEmptyhand.Border = 0;
                temptablesub.AddCell(cellEmptyhand);

                cellEmptyhand = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellEmptyhand.HorizontalAlignment = 0;
                cellEmptyhand.Colspan = 1;
                cellEmptyhand.Border = 0;
                temptablesub.AddCell(cellEmptyhand);

                cellEmptyhand = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellEmptyhand.HorizontalAlignment = 0;
                cellEmptyhand.Colspan = 1;
                cellEmptyhand.Border = 0;
                cellEmptyhand.MinimumHeight = 60;                
                temptablesub.AddCell(cellEmptyhand);

                cellEmptyhand = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellEmptyhand.HorizontalAlignment = 0;
                cellEmptyhand.Colspan = 1;
                cellEmptyhand.Border = 0;
                temptablesub.AddCell(cellEmptyhand);

                cellEmptyhand = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellEmptyhand.HorizontalAlignment = 0;
                cellEmptyhand.Colspan = 1;
                cellEmptyhand.Border = 0;
                temptablesub.AddCell(cellEmptyhand);

                cellEmptyhand = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellEmptyhand.HorizontalAlignment = 0;
                cellEmptyhand.Colspan = 1;
                cellEmptyhand.Border = 0;
                temptablesub.AddCell(cellEmptyhand);

                cellEmptyhand = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellEmptyhand.HorizontalAlignment = 0;
                cellEmptyhand.Colspan = 1;
                cellEmptyhand.Border = 0;
                temptablesub.AddCell(cellEmptyhand);

                cellEmptyhand = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellEmptyhand.HorizontalAlignment = 0;
                cellEmptyhand.Colspan = 1;
                cellEmptyhand.Border = 0;
                temptablesub.AddCell(cellEmptyhand);

                cellEmptyhand = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellEmptyhand.HorizontalAlignment = 0;
                cellEmptyhand.Colspan = 1;
                cellEmptyhand.Border = 0;
                temptablesub.AddCell(cellEmptyhand);

                PdfPCell cellLefthand = new PdfPCell(new Phrase("Left Hand ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellLefthand.HorizontalAlignment = 1;
                cellLefthand.Colspan = 1;
                cellLefthand.MinimumHeight = 60;
                cellLefthand.PaddingTop = 15;
                temptablesub.AddCell(cellLefthand);

                cellLefthand = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellLefthand.HorizontalAlignment = 0;
                cellLefthand.Colspan = 1;
                cellLefthand.BorderWidthTop = 0;
                cellLefthand.BorderWidthRight = 0;
                cellLefthand.BorderWidthBottom = 0;
                cellLefthand.BorderWidthLeft = 0;
                cellLefthand.MinimumHeight = 20;
                temptablesub.AddCell(cellLefthand);

                cellLefthand = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellLefthand.HorizontalAlignment = 0;
                cellLefthand.Colspan = 1;
                cellLefthand.MinimumHeight = 60;
                temptablesub.AddCell(cellLefthand);

                cellLefthand = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellLefthand.HorizontalAlignment = 0;
                cellLefthand.Colspan = 1;
                cellLefthand.BorderWidthTop = 0;
                cellLefthand.BorderWidthRight = 0;
                cellLefthand.BorderWidthBottom = 0;
                cellLefthand.BorderWidthLeft = 0;
                cellLefthand.MinimumHeight = 20;
                temptablesub.AddCell(cellLefthand);

                cellLefthand = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellLefthand.HorizontalAlignment = 0;
                cellLefthand.Colspan = 1;
                cellLefthand.MinimumHeight = 60;
                temptablesub.AddCell(cellLefthand);

                cellLefthand = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellLefthand.HorizontalAlignment = 0;
                cellLefthand.Colspan = 1;
                cellLefthand.BorderWidthTop = 0;
                cellLefthand.BorderWidthRight = 0;
                cellLefthand.BorderWidthBottom = 0;
                cellLefthand.BorderWidthLeft = 0;
                cellLefthand.MinimumHeight = 15;
                temptablesub.AddCell(cellLefthand);

                cellLefthand = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellLefthand.HorizontalAlignment = 0;
                cellLefthand.Colspan = 1;
                cellLefthand.MinimumHeight = 60;
                temptablesub.AddCell(cellLefthand);

                cellLefthand = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellLefthand.HorizontalAlignment = 0;
                cellLefthand.Colspan = 1;
                cellLefthand.BorderWidthTop = 0;
                cellLefthand.BorderWidthRight = 0;
                cellLefthand.BorderWidthBottom = 0;
                cellLefthand.BorderWidthLeft = 0;
                cellLefthand.MinimumHeight = 20;
                temptablesub.AddCell(cellLefthand);

                cellLefthand = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellLefthand.HorizontalAlignment = 0;
                cellLefthand.Colspan = 1;
                cellLefthand.MinimumHeight = 60;
                temptablesub.AddCell(cellLefthand);

                cellLefthand = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellLefthand.HorizontalAlignment = 0;
                cellLefthand.Colspan = 1;
                cellLefthand.BorderWidthTop = 0;
                cellLefthand.BorderWidthRight = 0;
                cellLefthand.BorderWidthBottom = 0;
                cellLefthand.BorderWidthLeft = 0;
                cellLefthand.MinimumHeight = 20;
                temptablesub.AddCell(cellLefthand);

                cellLefthand = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellLefthand.HorizontalAlignment = 0;
                cellLefthand.Colspan = 1;
                cellLefthand.MinimumHeight = 60;
                temptablesub.AddCell(cellLefthand);
                document.Add(temptablesub);
                document.NewPage();


                PdfPTable tableFamily = new PdfPTable(5);
                tableFamily.TotalWidth = 500f;
                tableFamily.LockedWidth = true;
                float[] Widthfamily = new float[] { 0.5f, 2.5f, 1.5f, 2f, 2f };
                tableFamily.SetWidths(Widthfamily);
                PdfPCell FamilyCell;

                #region for Family Details By Anil Reddy on 24-04-2015

                PdfPCell cellemptyspace = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellemptyspace.HorizontalAlignment = 0;
                cellemptyspace.Border = 0;
                cellemptyspace.Colspan = 5;
                cellemptyspace.PaddingTop = 20;
                tableFamily.AddCell(cellemptyspace);

                PdfPCell cellsnonjm = new PdfPCell(new Phrase("13", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsnonjm.HorizontalAlignment = 0;
                cellsnonjm.Border = 0;
                cellsnonjm.Colspan = 1;
                tableFamily.AddCell(cellsnonjm);

                PdfPCell cellsubname = new PdfPCell(new Phrase("Family/Parents particulars", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsubname.HorizontalAlignment = 0;
                cellsubname.Border = 0;
                cellsubname.Colspan = 4;
                tableFamily.AddCell(cellsubname);

                cellsubname = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsubname.HorizontalAlignment = 0;
                cellsubname.Border = 0;
                cellsubname.Colspan = 5;
                cellsubname.MinimumHeight = 15;
                tableFamily.AddCell(cellsubname);

                FamilyCell = new PdfPCell(new Phrase("S.No", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                FamilyCell.HorizontalAlignment = 1;
                FamilyCell.Colspan = 1;
                tableFamily.AddCell(FamilyCell);
                FamilyCell = new PdfPCell(new Phrase("Name", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                FamilyCell.HorizontalAlignment = 1;
                FamilyCell.Colspan = 1;
                tableFamily.AddCell(FamilyCell);
                FamilyCell = new PdfPCell(new Phrase("Age", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                FamilyCell.HorizontalAlignment = 1;
                FamilyCell.Colspan = 1;
                tableFamily.AddCell(FamilyCell);
                FamilyCell = new PdfPCell(new Phrase("Relationship", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                FamilyCell.HorizontalAlignment = 1;
                FamilyCell.Colspan = 1;
                tableFamily.AddCell(FamilyCell);
                FamilyCell = new PdfPCell(new Phrase("Occupation", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                FamilyCell.HorizontalAlignment = 1;
                FamilyCell.Colspan = 1;
                tableFamily.AddCell(FamilyCell);

                string QryRel = "select RName,RType,age,ROccupation from EmpRelationships where Empid='" + Empid + "'";
                DataTable dtRel = config.ExecuteAdaptorAsyncWithQueryParams(QryRel).Result;
                if (dtRel.Rows.Count > 0)
                {
                    string RNames = "";
                    string RTypes = "";
                    string age = "";
                    string ROccupation = "";

                    int RelSno = 1;
                    for (int E = 0; E < dtRel.Rows.Count; E++)
                    {
                        RNames = dtRel.Rows[E]["RName"].ToString();
                        RTypes = dtRel.Rows[E]["RType"].ToString();
                        age = dtRel.Rows[E]["age"].ToString();
                        ROccupation = dtRel.Rows[E]["ROccupation"].ToString();

                        FamilyCell = new PdfPCell(new Phrase(RelSno++.ToString(), FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        FamilyCell.HorizontalAlignment = 1;
                        FamilyCell.Colspan = 1;
                        tableFamily.AddCell(FamilyCell);
                        FamilyCell = new PdfPCell(new Phrase(RNames, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        FamilyCell.HorizontalAlignment = 0;
                        FamilyCell.Colspan = 1;
                        tableFamily.AddCell(FamilyCell);
                        FamilyCell = new PdfPCell(new Phrase(age, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        FamilyCell.HorizontalAlignment = 1;
                        FamilyCell.Colspan = 1;
                        tableFamily.AddCell(FamilyCell);
                        FamilyCell = new PdfPCell(new Phrase(RTypes, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        FamilyCell.HorizontalAlignment = 1;
                        FamilyCell.Colspan = 1;
                        tableFamily.AddCell(FamilyCell);
                        FamilyCell = new PdfPCell(new Phrase(ROccupation, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        FamilyCell.HorizontalAlignment = 1;
                        FamilyCell.Colspan = 1;
                        tableFamily.AddCell(FamilyCell);
                    }

                }
                else
                {
                    for (int E = 0; E < 2; E++)
                    {

                        FamilyCell = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        FamilyCell.HorizontalAlignment = 0;
                        FamilyCell.Colspan = 1;
                        FamilyCell.MinimumHeight = 15;
                        tableFamily.AddCell(FamilyCell);
                        FamilyCell = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        FamilyCell.HorizontalAlignment = 0;
                        FamilyCell.Colspan = 1;
                        tableFamily.AddCell(FamilyCell);
                        FamilyCell = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        FamilyCell.HorizontalAlignment = 0;
                        FamilyCell.Colspan = 1;
                        tableFamily.AddCell(FamilyCell);
                        FamilyCell = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        FamilyCell.HorizontalAlignment = 0;
                        FamilyCell.Colspan = 1;
                        tableFamily.AddCell(FamilyCell);
                        FamilyCell = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        FamilyCell.HorizontalAlignment = 0;
                        FamilyCell.Colspan = 1;
                        tableFamily.AddCell(FamilyCell);
                    }
                }

                #endregion

                document.Add(tableFamily);

                PdfPTable temptable2 = new PdfPTable(8);
                temptable2.TotalWidth = 500f;
                temptable2.LockedWidth = true;
                float[] tempwidth2 = new float[] { 1f, 3f, 3f, 3f, 3f, 3f, 3f, 3f };
                temptable2.SetWidths(tempwidth2);


                PdfPCell cellnativeplacesno = new PdfPCell(new Phrase("14", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellnativeplacesno.HorizontalAlignment = 0;
                cellnativeplacesno.Border = 0;
                cellnativeplacesno.Colspan = 1;
                cellnativeplacesno.PaddingTop = 15;
                temptable2.AddCell(cellnativeplacesno);

                PdfPCell cellnativeplace = new PdfPCell(new Phrase("Native Place and Permanent Address : ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellnativeplace.HorizontalAlignment = 0;
                cellnativeplace.Border = 1;
                cellnativeplace.Colspan = 7;
                cellnativeplace.PaddingTop = 15;
                temptable2.AddCell(cellnativeplace);


                #region Permanent address String array

                string[] PeAdress = new string[8];

                if (pelmark.Length > 0)
                {
                    PeAdress[0] = pelmark + ", ";
                }
                else
                {
                    PeAdress[0] = "";
                }
                if (peTown.Length > 0)
                {
                    PeAdress[1] = peTown + ", ";
                }
                else
                {
                    PeAdress[1] = "";
                }

                if (pePostOffice.Length > 0)
                {
                    PeAdress[2] = pePostOffice + ", ";
                }
                else
                {
                    PeAdress[2] = "";
                }
                if (peTaluka.Length > 0)
                {
                    PeAdress[3] = peTaluka + ", ";
                }
                else
                {
                    PeAdress[3] = " ";
                }
                if (pePoliceStation.Length > 0)
                {
                    PeAdress[4] = pePoliceStation + ", ";
                }
                else
                {
                    PeAdress[4] = " ";
                }
                if (pecity.Length > 0)
                {
                    PeAdress[5] = pecity + ", ";
                }
                else
                {
                    PeAdress[5] = " ";
                }

                if (peState.Length > 0)
                {
                    PeAdress[6] = peState + " ";
                }
                else
                {
                    PeAdress[6] = ".";
                }


                if (pePincode.Length > 0)
                {
                    PeAdress[7] = pePincode + ".";
                }
                else
                {
                    PeAdress[7] = "";
                }

                string Address2 = string.Empty;

                for (int i = 0; i < 8; i++)
                {
                    Address2 += PeAdress[i];
                }


                #endregion

                PdfPCell cellvaluew = new PdfPCell(new Phrase(Address2, FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellvaluew.HorizontalAlignment = 0;
                //cellvaluew.Border = 1;
                cellvaluew.BorderWidthLeft = 0.5f;
                cellvaluew.BorderWidthRight = 0.5f;
                cellvaluew.BorderWidthTop = 0.5f;
                cellvaluew.BorderWidthBottom = 0.5f;
                cellvaluew.Colspan = 8;
                cellvaluew.PaddingTop = 15;
                temptable2.AddCell(cellvaluew);
                PdfPCell cellphoneno = new PdfPCell(new Phrase("Residence Ph.No:", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellphoneno.HorizontalAlignment = 0;
                //cellphoneno.Border = 1;
                cellphoneno.BorderWidthLeft = 0.5f;
                // cellphoneno.BorderWidthRight = 0.5f;
                //cellphoneno.BorderWidthTop = 0.5f;
                cellphoneno.BorderWidthBottom = 0.5f;
                cellphoneno.Colspan = 2;
                cellphoneno.PaddingTop = 15;
                temptable2.AddCell(cellphoneno);

                PdfPCell cellphonenovalue = new PdfPCell(new Phrase(pephone, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellphonenovalue.HorizontalAlignment = 0;
                cellphonenovalue.BorderWidthRight = 0.5f;
                cellphonenovalue.BorderWidthTop = 0.5f;
                cellphonenovalue.BorderWidthBottom = 0.5f;
                cellphonenovalue.Colspan = 2;
                cellphonenovalue.PaddingTop = 15;
                temptable2.AddCell(cellphonenovalue);

                PdfPCell cellpolicestation = new PdfPCell(new Phrase("Police Station:", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpolicestation.HorizontalAlignment = 0;
                //cellpolicestation.Border = 0;
                cellpolicestation.BorderWidthTop = 0.5f;
                cellpolicestation.BorderWidthBottom = 0.5f;
                cellpolicestation.Colspan = 2;
                cellpolicestation.PaddingTop = 15;
                temptable2.AddCell(cellpolicestation);

                PdfPCell cellpolicestationvalue = new PdfPCell(new Phrase(pePoliceStation, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpolicestationvalue.HorizontalAlignment = 0;
                // cellpolicestationvalue.Border = 0;
                cellpolicestationvalue.BorderWidthTop = 0.5f;
                cellpolicestationvalue.BorderWidthBottom = 0.5f;
                cellpolicestationvalue.BorderWidthRight = 0.5f;
                cellpolicestationvalue.Colspan = 2;
                cellpolicestationvalue.PaddingTop = 15;
                temptable2.AddCell(cellpolicestationvalue);

                #region Present address String array

                string[] PrAdress = new string[8];

                if (prLmark.Length > 0)
                {
                    PrAdress[0] = prLmark + ", ";
                }
                else
                {
                    PrAdress[0] = "";
                }
                if (prTown.Length > 0)
                {
                    PrAdress[1] = prTown + ", ";
                }
                else
                {
                    PrAdress[1] = "";
                }

                if (prPostOffice.Length > 0)
                {
                    PrAdress[2] = prPostOffice + ", ";
                }
                else
                {
                    PrAdress[2] = "";
                }
                if (prTaluka.Length > 0)
                {
                    PrAdress[3] = prTaluka + ", ";
                }
                else
                {
                    PrAdress[3] = " ";
                }
                if (prPoliceStation.Length > 0)
                {
                    PrAdress[4] = prPoliceStation + ", ";
                }
                else
                {
                    PrAdress[4] = " ";
                }
                if (prcity.Length > 0)
                {
                    PrAdress[5] = prcity + ", ";
                }
                else
                {
                    PrAdress[5] = " ";
                }

                if (prState.Length > 0)
                {
                    PrAdress[6] = prState + " ";
                }
                else
                {
                    PrAdress[6] = ".";
                }


                if (prPincode.Length > 0)
                {
                    PrAdress[7] = prPincode + ".";
                }
                else
                {
                    PrAdress[7] = "";
                }

                string Address3 = string.Empty;

                for (int i = 0; i < 8; i++)
                {
                    Address3 += PrAdress[i];
                }


                #endregion

                PdfPCell cellplace = new PdfPCell(new Phrase("15 Place of Residence since Last 5 Years with Door No.", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellplace.HorizontalAlignment = 0;
                cellplace.Border = 1;

                cellplace.Colspan = 8;
                cellplace.PaddingTop = 15;
                temptable2.AddCell(cellplace);

                PdfPCell cellplacevalue = new PdfPCell(new Phrase(Address3, FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellplacevalue.HorizontalAlignment = 0;
                //cellplacevalue.Border = 1;
                cellplacevalue.BorderWidthTop = 0.5f;
                cellplacevalue.BorderWidthBottom = 0.5f;
                cellplacevalue.BorderWidthRight = 0.5f;
                cellplacevalue.BorderWidthLeft = 0.5f;
                cellplacevalue.Colspan = 8;
                cellplacevalue.PaddingTop = 15;
                temptable2.AddCell(cellplacevalue);

                PdfPCell cellRecidence = new PdfPCell(new Phrase("Residence Ph.No:", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellRecidence.HorizontalAlignment = 0;
                // cellRecidence.Border = 0;
                cellRecidence.BorderWidthBottom = 0.5f;
                cellRecidence.BorderWidthRight = 0.5f;
                cellRecidence.Colspan = 2;
                cellRecidence.PaddingTop = 15;
                temptable2.AddCell(cellRecidence);

                PdfPCell cellRecidencevalue = new PdfPCell(new Phrase(prphone, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellRecidencevalue.HorizontalAlignment = 0;
                // cellRecidencevalue.Border = 0;
                cellRecidencevalue.BorderWidthBottom = 0.5f;
                cellRecidencevalue.Colspan = 2;
                cellRecidencevalue.PaddingTop = 15;
                temptable2.AddCell(cellRecidencevalue);

                PdfPCell cellpolicestion = new PdfPCell(new Phrase("Police Station:", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpolicestion.HorizontalAlignment = 0;
                // cellpolicestion.Border = 1;
                cellpolicestion.BorderWidthBottom = 0.5f;

                cellpolicestion.Colspan = 2;
                cellpolicestion.PaddingTop = 15;
                temptable2.AddCell(cellpolicestion);

                PdfPCell cellpolicestionvalue = new PdfPCell(new Phrase(prPoliceStation, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpolicestionvalue.HorizontalAlignment = 0;
                // cellpolicestionvalue.Border = 1;
                cellpolicestionvalue.BorderWidthBottom = 0.5f;
                cellpolicestionvalue.BorderWidthRight = 0.5f;
                cellpolicestionvalue.Colspan = 2;
                cellpolicestionvalue.PaddingTop = 15;
                temptable2.AddCell(cellpolicestionvalue);


                PdfPCell cellnamebloodsno = new PdfPCell(new Phrase("16", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellnamebloodsno.HorizontalAlignment = 0;
                cellnamebloodsno.Border = 0;
                cellnamebloodsno.Colspan = 1;
                cellnamebloodsno.PaddingTop = 15;
                temptable2.AddCell(cellnamebloodsno);

                PdfPCell cellnameblood = new PdfPCell(new Phrase("Names of Father, Mother & Siblings with Address:", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellnameblood.HorizontalAlignment = 0;
                cellnameblood.Border = 1;
                cellnameblood.Colspan = 7;
                cellnameblood.PaddingTop = 15;
                temptable2.AddCell(cellnameblood);

                string QueryNominee = "select id, RName as NomineeName ,Rtype as NomineeRelation,RPlace,RPhone,RGMail from emprelationships where empid='" + Idno + "' order by id";
                DataTable DtNominee = config.ExecuteAdaptorAsyncWithQueryParams(QueryNominee).Result;
                if (DtNominee.Rows.Count > 0)
                {
                    for (int i = 0; i < DtNominee.Rows.Count; i++)
                    {
                        NomineeRelation = DtNominee.Rows[i]["NomineeRelation"].ToString();
                        NomineeName = DtNominee.Rows[i]["NomineeName"].ToString();
                        NomineeAddress = DtNominee.Rows[i]["RPlace"].ToString();
                        NomineePhone = DtNominee.Rows[i]["RPhone"].ToString();
                        nomineegmail = DtNominee.Rows[i]["RGMail"].ToString();
                        string id = DtNominee.Rows[i]["id"].ToString();

                        PdfPCell cellEmptyvalue1 = new PdfPCell(new Phrase(id+"." +" " + NomineeName + NomineeAddress, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellEmptyvalue1.HorizontalAlignment = 0;
                        cellEmptyvalue1.BorderWidthTop = 0.5f;
                        cellEmptyvalue1.BorderWidthLeft = 0.5f;
                        cellEmptyvalue1.BorderWidthBottom = 0.5f;
                        cellEmptyvalue1.BorderWidthRight = 0.5f;
                        cellEmptyvalue1.Colspan = 8;
                        cellEmptyvalue1.PaddingTop = 15;
                        temptable2.AddCell(cellEmptyvalue1);
                        PdfPCell cellphonenod = new PdfPCell(new Phrase("   Mobile No : " + NomineePhone, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellphonenod.HorizontalAlignment = 0;
                        //cellphonenod.Border = 1;
                        //cellphonenod.BorderWidthTop = 0.5f;
                        cellphonenod.BorderWidthLeft = 0.5f;
                        cellphonenod.BorderWidthBottom = 0.5f;
                        cellphonenod.BorderWidthRight = 0.5f;
                        cellphonenod.Colspan = 4;
                        cellphonenod.PaddingTop = 15;
                        temptable2.AddCell(cellphonenod);
                        PdfPCell cellmobile = new PdfPCell(new Phrase("   Relationship : " + NomineeRelation, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellmobile.HorizontalAlignment = 0;
                        //cellmobile.Border = 1;
                        cellmobile.BorderWidthTop = 0.5f;
                        // cellEmptyvalue1.BorderWidthLeft = 0.5f;
                        cellmobile.BorderWidthBottom = 0.5f;
                        cellmobile.BorderWidthRight = 0.5f;
                        cellmobile.Colspan = 4;
                        cellmobile.PaddingTop = 15;
                        temptable2.AddCell(cellmobile);
                    }
                }
                //PdfPCell cellemptyvalue2 = new PdfPCell(new Phrase("   2.", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                //cellemptyvalue2.HorizontalAlignment = 0;
                //// cellemptyvalue2.Border = 1;
                //cellemptyvalue2.BorderWidthTop = 0.5f;
                //cellemptyvalue2.BorderWidthLeft = 0.5f;
                //cellemptyvalue2.BorderWidthBottom = 0.5f;
                //cellemptyvalue2.BorderWidthRight = 0.5f;
                //cellemptyvalue2.Colspan = 8;
                //cellemptyvalue2.PaddingTop = 15;
                //temptable2.AddCell(cellemptyvalue2);
                //PdfPCell cellparphone = new PdfPCell(new Phrase("   Mobile No : ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                //cellparphone.HorizontalAlignment = 0;
                //// cellparphone.Border = 1;
                //cellparphone.BorderWidthTop = 0.5f;
                //cellparphone.BorderWidthLeft = 0.5f;
                //cellparphone.BorderWidthBottom = 0.5f;
                //cellparphone.BorderWidthRight = 0.5f;
                //cellparphone.Colspan = 4;
                //cellparphone.PaddingTop = 15;
                //temptable2.AddCell(cellparphone);
                //PdfPCell cellRemobile = new PdfPCell(new Phrase("   Email : ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                //cellRemobile.HorizontalAlignment = 0;
                ////cellRemobile.Border = 1;
                //cellRemobile.BorderWidthTop = 0.5f;
                //// cellEmptyvalue1.BorderWidthLeft = 0.5f;
                //cellRemobile.BorderWidthBottom = 0.5f;
                //cellRemobile.BorderWidthRight = 0.5f;
                //cellRemobile.Colspan = 4;
                //cellRemobile.PaddingTop = 15;
                //temptable2.AddCell(cellRemobile);

                PdfPCell cellReference = new PdfPCell(new Phrase("17 For Reference,give two Respectable Persons Name and Address:", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellReference.HorizontalAlignment = 0;
                cellReference.Border = 1;
                cellReference.Colspan = 8;
                cellReference.PaddingTop = 15;
                temptable2.AddCell(cellReference);

                PdfPCell cellReferencevalue = new PdfPCell(new Phrase("   1." + refaddress1, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellReferencevalue.HorizontalAlignment = 0;
                // cellReferencevalue.Border = 1;
                cellReferencevalue.BorderWidthTop = 0.5f;
                cellReferencevalue.BorderWidthLeft = 0.5f;
                cellReferencevalue.BorderWidthBottom = 0.5f;
                cellReferencevalue.BorderWidthRight = 0.5f;
                cellReferencevalue.Colspan = 8;
                cellReferencevalue.PaddingTop = 15;
                temptable2.AddCell(cellReferencevalue);
                PdfPCell cellphonenodref = new PdfPCell(new Phrase("   Mobile No : "+refphone1, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellphonenodref.HorizontalAlignment = 0;
                //cellphonenodref.Border = 1;
                //cellReferencevalue.BorderWidthTop = 0.5f;
                cellphonenodref.BorderWidthLeft = 0.5f;
                cellphonenodref.BorderWidthBottom = 0.5f;
                cellphonenodref.BorderWidthRight = 0.5f;
                cellphonenodref.Colspan = 4;
                cellphonenodref.PaddingTop = 15;
                temptable2.AddCell(cellphonenodref);
                PdfPCell cellmobileRef = new PdfPCell(new Phrase("   Email : " +refmail1, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellmobileRef.HorizontalAlignment = 0;
                // cellmobileRef.Border = 1;
                // cellReferencevalue.BorderWidthTop = 0.5f;
                // cellReferencevalue.BorderWidthLeft = 0.5f;
                cellmobileRef.BorderWidthBottom = 0.5f;
                cellmobileRef.BorderWidthRight = 0.5f;

                cellmobileRef.Colspan = 4;
                cellmobileRef.PaddingTop = 15;
                temptable2.AddCell(cellmobileRef);

                PdfPCell cellRefval2 = new PdfPCell(new Phrase("   2." + refaddress2, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellRefval2.HorizontalAlignment = 0;
                // cellRefval2.Border = 1;
                cellRefval2.BorderWidthTop = 0.5f;
                cellRefval2.BorderWidthLeft = 0.5f;
                cellRefval2.BorderWidthBottom = 0.5f;
                cellRefval2.BorderWidthRight = 0.5f;
                cellRefval2.Colspan = 8;
                cellRefval2.PaddingTop = 15;
                temptable2.AddCell(cellRefval2);
                PdfPCell cellRefvalinphone = new PdfPCell(new Phrase("   Mobile No : "+refphone2, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellRefvalinphone.HorizontalAlignment = 0;
                // cellRefvalinphone.Border = 1;
                // cellRefvalinphone.BorderWidthTop = 0.5f;
                cellRefvalinphone.BorderWidthLeft = 0.5f;
                cellRefvalinphone.BorderWidthBottom = 0.5f;
                cellRefvalinphone.BorderWidthRight = 0.5f;
                cellRefvalinphone.Colspan = 4;
                cellRefvalinphone.PaddingTop = 15;
                temptable2.AddCell(cellRefvalinphone);
                PdfPCell cellRefmmobile = new PdfPCell(new Phrase("   Email : "+ refmail2, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellRefmmobile.HorizontalAlignment = 0;
                // cellRefmmobile.Border = 1;
                // cellRefvalinphone.BorderWidthTop = 0.5f;
                // cellRefvalinphone.BorderWidthLeft = 0.5f;
                cellRefmmobile.BorderWidthBottom = 0.5f;
                cellRefmmobile.BorderWidthRight = 0.5f;
                cellRefmmobile.Colspan = 4;
                cellRefmmobile.PaddingTop = 15;
                temptable2.AddCell(cellRefmmobile);


                PdfPCell cellsuffring = new PdfPCell(new Phrase("18 Are you suffering from any Disease,if so furnish the details:", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsuffring.HorizontalAlignment = 0;
                cellsuffring.Border = 0;
                cellsuffring.Colspan = 6;
                cellsuffring.PaddingTop = 15;
                temptable2.AddCell(cellsuffring);
                PdfPCell cellsuffring2 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsuffring2.HorizontalAlignment = 0;
                cellsuffring2.Border = 0;
                cellsuffring2.Colspan = 2;
                cellsuffring2.PaddingTop = 15;
                cellsuffring2.MinimumHeight = 15;
                temptable2.AddCell(cellsuffring2);

                PdfPCell cellcriminals = new PdfPCell(new Phrase("19 Any Criminal Cases pending if So furnish the details: ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellcriminals.HorizontalAlignment = 0;
                cellcriminals.Border = 0;
                cellcriminals.Colspan = 6;
                cellcriminals.PaddingTop = 15;
                temptable2.AddCell(cellcriminals);
                PdfPCell cellcriminals2 = new PdfPCell(new Phrase(PoliceRecord, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellcriminals2.HorizontalAlignment = 0;
                cellcriminals2.Border = 0;
                cellcriminals2.Colspan = 2;
                cellcriminals2.PaddingTop = 15;
                cellcriminals2.MinimumHeight = 15;
                temptable2.AddCell(cellcriminals2);

                PdfPCell cellproof = new PdfPCell(new Phrase("20 Proof of Residence(Enclose):", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellproof.HorizontalAlignment = 0;
                cellproof.Border = 0;
                cellproof.Colspan = 6;
                cellproof.PaddingTop = 15;
                temptable2.AddCell(cellproof);
                PdfPCell cellproof2 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellproof2.HorizontalAlignment = 0;
                cellproof2.Border = 0;
                cellproof2.Colspan = 2;
                cellproof2.PaddingTop = 15;
                cellproof2.MinimumHeight = 15;
                temptable2.AddCell(cellproof2);

                #region for Educational Details By Anil Reddy on 24-04-2015

                PdfPCell cellqemptyspace = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellqemptyspace.HorizontalAlignment = 0;
                cellqemptyspace.Border = 0;
                cellqemptyspace.Colspan = 8;
                cellqemptyspace.PaddingTop = 15;
                cellqemptyspace.MinimumHeight = 15;
                temptable2.AddCell(cellqemptyspace);

                PdfPCell cellEducation = new PdfPCell(new Phrase("21 Educational Qualifications", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellEducation.HorizontalAlignment = 0;
                cellEducation.Border = 0;
                // cellproof.PaddingTop = 50;
                cellEducation.Colspan = 6;
                temptable2.AddCell(cellEducation);

                PdfPCell cellcriminals1 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellcriminals1.HorizontalAlignment = 0;
                cellcriminals1.Border = 0;
                cellcriminals1.Colspan = 2;
                cellcriminals1.PaddingTop = 25;
                cellcriminals1.MinimumHeight = 15;
                temptable2.AddCell(cellcriminals1);


                cellEducation = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellEducation.HorizontalAlignment = 0;
                cellEducation.Border = 0;
                cellEducation.Colspan = 6;
                cellEducation.MinimumHeight = 15;
                // temptable2.AddCell(cellEducation);


                PdfPCell cellsno = new PdfPCell(new Phrase("S.No", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsno.HorizontalAlignment = 1;
                cellsno.Colspan = 2;
                temptable2.AddCell(cellsno);
                PdfPCell cellclass = new PdfPCell(new Phrase("Class Studied", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellclass.HorizontalAlignment = 1;
                cellclass.Colspan = 2;
                temptable2.AddCell(cellclass);
                PdfPCell cellcollege = new PdfPCell(new Phrase("Name & Place Of School/College", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellcollege.HorizontalAlignment = 1;
                cellcollege.Colspan = 2;
                temptable2.AddCell(cellcollege);
                PdfPCell cellyear = new PdfPCell(new Phrase("Year", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellyear.HorizontalAlignment = 1;
                cellyear.Colspan = 2;
                temptable2.AddCell(cellyear);

                string QryEdu = "select case Qualification when '1' then 'ILLITERATE' when '2' then 'NON-MATRIC' when '3' then 'METRICULATION/SSC' when '4' then 'SENIOR SECONDARY' when '5' then 'GRADUATE' when '6' then 'POST GRADUATE' when '7' then 'DOCTOR' when '8' then 'TECHNICAL/PROFESSIONAL' end Description,NameOfSchoolClg,YrOfStudy from EmpEducationDetails where Empid='" + Empid + "'";
                DataTable dtEdu = config.ExecuteAdaptorAsyncWithQueryParams(QryEdu).Result;
                if (dtEdu.Rows.Count > 0)
                {
                    string Description = "";
                    string NameOfSchoolClg = "";
                    string YrOfStudy = "";
                    int EduSno = 1;
                    for (int E = 0; E < dtEdu.Rows.Count; E++)
                    {
                        Description = dtEdu.Rows[E]["Description"].ToString();
                        NameOfSchoolClg = dtEdu.Rows[E]["NameOfSchoolClg"].ToString();
                        YrOfStudy = dtEdu.Rows[E]["YrOfStudy"].ToString();

                        PdfPCell cellsnoval = new PdfPCell(new Phrase(EduSno++.ToString(), FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellsnoval.HorizontalAlignment = 1;
                        cellsnoval.Colspan = 2;
                        temptable2.AddCell(cellsnoval);
                        PdfPCell cellclassval = new PdfPCell(new Phrase(Description, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellclassval.HorizontalAlignment = 0;
                        cellclassval.Colspan = 2;
                        temptable2.AddCell(cellclassval);
                        PdfPCell cellcollegeval = new PdfPCell(new Phrase(NameOfSchoolClg, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellcollegeval.HorizontalAlignment = 0;
                        cellcollegeval.Colspan = 2;
                        temptable2.AddCell(cellcollegeval);
                        PdfPCell cellyearval = new PdfPCell(new Phrase(YrOfStudy, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellyearval.HorizontalAlignment = 1;
                        cellyearval.Colspan = 2;
                        temptable2.AddCell(cellyearval);
                    }

                }
                else
                {
                    for (int E = 0; E < 2; E++)
                    {
                        PdfPCell cellsnoval = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellsnoval.HorizontalAlignment = 0;
                        cellsnoval.Colspan = 2;
                        cellsnoval.MinimumHeight = 15;
                        temptable2.AddCell(cellsnoval);
                        PdfPCell cellclassval = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellclassval.HorizontalAlignment = 0;
                        cellclassval.Colspan = 2;
                        temptable2.AddCell(cellclassval);
                        PdfPCell cellcollegeval = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellcollegeval.HorizontalAlignment = 0;
                        cellcollegeval.Colspan = 2;
                        temptable2.AddCell(cellcollegeval);
                        PdfPCell cellyearval = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellyearval.HorizontalAlignment = 0;
                        cellyearval.Colspan = 2;
                        temptable2.AddCell(cellyearval);
                    }
                }

                #endregion

                document.Add(temptable2);
                document.NewPage();

                #endregion
                #region Form3
                PdfPTable temptable3 = new PdfPTable(6);
                temptable3.TotalWidth = 500f;
                temptable3.LockedWidth = true;
                float[] tempwidth3 = new float[] { 0.6f, 2.5f, 1.5f, 2f,1f,1f };
                temptable3.SetWidths(tempwidth3);
                iTextSharp.text.Image panorg = iTextSharp.text.Image.GetInstance(imagepathpf1 + "/black-check.png");
                PdfPCell tickorg = new PdfPCell(panorg);
                tickorg.HorizontalAlignment = 1;
                tickorg.Colspan = 1;
               
                PdfPCell cellsertificate = new PdfPCell(new Phrase("22.Documents Enclosed", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsertificate.HorizontalAlignment = 0;
                cellsertificate.Border = 0;
                cellsertificate.Colspan = 6;
                cellsertificate.PaddingTop = 15;
                cellsertificate.PaddingBottom = 20;
                temptable3.AddCell(cellsertificate);

                PdfPCell cellsno1 = new PdfPCell(new Phrase("S.No", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsno1.HorizontalAlignment = 0;
                cellsno1.Colspan = 1;
                temptable3.AddCell(cellsno1);
                PdfPCell celldescription177 = new PdfPCell(new Phrase("Description of Document", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                celldescription177.HorizontalAlignment = 0;
                celldescription177.Colspan = 1;
                temptable3.AddCell(celldescription177);
                PdfPCell celloriginal = new PdfPCell(new Phrase("Name", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                celloriginal.HorizontalAlignment = 1;
                celloriginal.Colspan = 1;
                temptable3.AddCell(celloriginal);
                PdfPCell cellxeroxcopy = new PdfPCell(new Phrase("Number", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellxeroxcopy.HorizontalAlignment = 1;
                cellxeroxcopy.Colspan = 1;
                temptable3.AddCell(cellxeroxcopy);

                PdfPCell cellname= new PdfPCell(new Phrase("Original", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellname.HorizontalAlignment = 1;
                cellname.Colspan = 1;
                temptable3.AddCell(cellname);

                PdfPCell cellnumber = new PdfPCell(new Phrase("Xerox", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellnumber.HorizontalAlignment = 1;
                cellnumber.Colspan = 1;
                temptable3.AddCell(cellnumber);


                PdfPCell cellsno2 = new PdfPCell(new Phrase("1", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsno2.HorizontalAlignment = 0;
                cellsno2.Colspan = 1;
                temptable3.AddCell(cellsno2);
                PdfPCell cellpan = new PdfPCell(new Phrase("PAN", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpan.HorizontalAlignment = 0;
                cellpan.Colspan = 1;
                temptable3.AddCell(cellpan);
                PdfPCell celloriginal2 = new PdfPCell(new Phrase(PanCardKYCName, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celloriginal2.HorizontalAlignment = 0;
                celloriginal2.Colspan = 1;
                temptable3.AddCell(celloriginal2);
                PdfPCell cellxeroxcopy2 = new PdfPCell(new Phrase(PanCardNo, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellxeroxcopy2.HorizontalAlignment = 0;
                cellxeroxcopy2.Colspan = 1;
                temptable3.AddCell(cellxeroxcopy2);
               
                // tickorg.PaddingTop = 15;               
                if (panoriginal == "Original")
                {
                    temptable3.AddCell(tickorg);
                }
                else
                {
                    cellxeroxcopy2 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellxeroxcopy2.HorizontalAlignment = 0;
                    cellxeroxcopy2.Colspan = 1;
                    temptable3.AddCell(cellxeroxcopy2);
                }
                if (panoriginal == "Xerox")
                {
                   
                    temptable3.AddCell(tickorg);
                }
                else
                {
                    cellxeroxcopy2 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellxeroxcopy2.HorizontalAlignment = 0;
                    cellxeroxcopy2.Colspan = 1;
                    temptable3.AddCell(cellxeroxcopy2);
                }

                PdfPCell cellsno13 = new PdfPCell(new Phrase("2", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsno13.HorizontalAlignment = 0;
                cellsno13.Colspan = 1;
                temptable3.AddCell(cellsno13);
                PdfPCell celldescription13 = new PdfPCell(new Phrase("Aadhaar", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldescription13.HorizontalAlignment = 0;
                celldescription13.Colspan = 1;
                temptable3.AddCell(celldescription13);
                PdfPCell celloriginal3 = new PdfPCell(new Phrase(AadharCardKYCName, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celloriginal3.HorizontalAlignment = 0;
                celloriginal3.Colspan = 1;
                temptable3.AddCell(celloriginal3);
                PdfPCell cellxeroxcopy3 = new PdfPCell(new Phrase(AadharCardNo, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellxeroxcopy3.HorizontalAlignment = 0;
                cellxeroxcopy3.Colspan = 1;
                temptable3.AddCell(cellxeroxcopy3);

                if (aadharoriginal == "Original")
                {
                   
                    temptable3.AddCell(tickorg);
                }
                else
                {
                    cellxeroxcopy3 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellxeroxcopy3.HorizontalAlignment = 0;
                    cellxeroxcopy3.Colspan = 1;
                    temptable3.AddCell(cellxeroxcopy3);
                }

                if (aadharoriginal == "Xerox")
                {
                    
                    temptable3.AddCell(tickorg);
                }
                else
                {

                    cellxeroxcopy3 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellxeroxcopy3.HorizontalAlignment = 0;
                    cellxeroxcopy3.Colspan = 1;
                    temptable3.AddCell(cellxeroxcopy3);
                }

                PdfPCell cellsno14 = new PdfPCell(new Phrase("3", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsno14.HorizontalAlignment = 0;
                cellsno14.Colspan = 1;
                temptable3.AddCell(cellsno14);
                PdfPCell celldescription14 = new PdfPCell(new Phrase("Ration Card", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldescription14.HorizontalAlignment = 0;
                celldescription14.Colspan = 1;
                temptable3.AddCell(celldescription14);
                PdfPCell celloriginal4 = new PdfPCell(new Phrase(RationCardKYCName, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celloriginal4.HorizontalAlignment = 0;
                celloriginal4.Colspan = 1;
                temptable3.AddCell(celloriginal4);
                PdfPCell cellxeroxcopy4 = new PdfPCell(new Phrase(RationCardNo, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellxeroxcopy4.HorizontalAlignment = 0;
                cellxeroxcopy4.Colspan = 1;
                temptable3.AddCell(cellxeroxcopy4);
                if (rationoriginal == "Original")
                {
                   
                    temptable3.AddCell(tickorg);
                }
                else
                {

                    cellxeroxcopy4 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellxeroxcopy4.HorizontalAlignment = 0;
                    cellxeroxcopy4.Colspan = 1;
                    temptable3.AddCell(cellxeroxcopy4);
                }
                if (rationoriginal == "Xerox")
                {
                   
                    temptable3.AddCell(tickorg);
                }
                else
                {

                    cellxeroxcopy4 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellxeroxcopy4.HorizontalAlignment = 0;
                    cellxeroxcopy4.Colspan = 1;
                    temptable3.AddCell(cellxeroxcopy4);
                }

                PdfPCell cellsno15 = new PdfPCell(new Phrase("4", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsno15.HorizontalAlignment = 0;
                cellsno15.Colspan = 1;
                temptable3.AddCell(cellsno15);
                PdfPCell celldescription15 = new PdfPCell(new Phrase("Driving Licence", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldescription15.HorizontalAlignment = 0;
                celldescription15.Colspan = 1;
                temptable3.AddCell(celldescription15);
                PdfPCell celloriginal5 = new PdfPCell(new Phrase(DrivingLicenseKYCName, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celloriginal5.HorizontalAlignment = 0;
                celloriginal5.Colspan = 1;
                temptable3.AddCell(celloriginal5);
                PdfPCell cellxeroxcopy5 = new PdfPCell(new Phrase(DrivingLicenseNo, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellxeroxcopy5.HorizontalAlignment = 0;
                cellxeroxcopy5.Colspan = 1;
                temptable3.AddCell(cellxeroxcopy5);
                if (drivinglicenceoriginal == "Original")
                {
                   
                    temptable3.AddCell(tickorg);
                }
                else
                {
                    cellxeroxcopy5 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellxeroxcopy5.HorizontalAlignment = 0;
                    cellxeroxcopy5.Colspan = 1;
                    temptable3.AddCell(cellxeroxcopy5);
                }
                if (drivinglicenceoriginal == "Xerox")
                {
                    temptable3.AddCell(tickorg);
                }
                else
                {
                    cellxeroxcopy5 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellxeroxcopy5.HorizontalAlignment = 0;
                    cellxeroxcopy5.Colspan = 1;
                    temptable3.AddCell(cellxeroxcopy5);
                }

                PdfPCell cellsno16 = new PdfPCell(new Phrase("5", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsno16.HorizontalAlignment = 0;
                cellsno16.Colspan = 1;
                temptable3.AddCell(cellsno16);
                PdfPCell celldescription16 = new PdfPCell(new Phrase("Voter I.D.", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldescription16.HorizontalAlignment = 0;
                celldescription16.Colspan = 1;
                temptable3.AddCell(celldescription16);
                PdfPCell celloriginal6 = new PdfPCell(new Phrase(VoterIDKYCName, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celloriginal6.HorizontalAlignment = 0;
                celloriginal6.Colspan = 1;
                temptable3.AddCell(celloriginal6);
                PdfPCell cellxeroxcopy6 = new PdfPCell(new Phrase(VoterIDNo, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellxeroxcopy6.HorizontalAlignment = 0;
                cellxeroxcopy6.Colspan = 1;
                temptable3.AddCell(cellxeroxcopy6);

                if (voteridoriginal == "Original")
                {
                    temptable3.AddCell(tickorg);
                }
                else
                {
                    cellxeroxcopy6 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellxeroxcopy6.HorizontalAlignment = 0;
                    cellxeroxcopy6.Colspan = 1;
                    temptable3.AddCell(cellxeroxcopy6);
                }
                if (voteridoriginal == "Xerox")
                {
                   
                    temptable3.AddCell(tickorg);
                }
                else
                {
                    cellxeroxcopy6 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellxeroxcopy6.HorizontalAlignment = 0;
                    cellxeroxcopy6.Colspan = 1;
                    temptable3.AddCell(cellxeroxcopy6);
                }

                PdfPCell cellsno17 = new PdfPCell(new Phrase("6", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsno17.HorizontalAlignment = 0;
                cellsno17.Colspan = 1;
                temptable3.AddCell(cellsno17);
                PdfPCell celldescription17 = new PdfPCell(new Phrase("Electricity Bill", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldescription17.HorizontalAlignment = 0;
                celldescription17.Colspan = 1;
                temptable3.AddCell(celldescription17);
                PdfPCell celloriginal7 = new PdfPCell(new Phrase(electricitybillKYCName, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celloriginal7.HorizontalAlignment = 0;
                celloriginal7.Colspan = 1;
                temptable3.AddCell(celloriginal7);
                PdfPCell cellxeroxcopy7 = new PdfPCell(new Phrase(electricitybillno, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellxeroxcopy7.HorizontalAlignment = 0;
                cellxeroxcopy7.Colspan = 1;
                temptable3.AddCell(cellxeroxcopy7);

                if (electricityoriginal == "Original")
                {
                   
                    temptable3.AddCell(tickorg);
                }
                else
                {
                    cellxeroxcopy7 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellxeroxcopy7.HorizontalAlignment = 0;
                    cellxeroxcopy7.Colspan = 1;
                    temptable3.AddCell(cellxeroxcopy7);
                }
                if (electricityoriginal == "Xerox")
                {
                    
                    temptable3.AddCell(tickorg);
                }
                else
                {

                    cellxeroxcopy7 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellxeroxcopy7.HorizontalAlignment = 0;
                    cellxeroxcopy7.Colspan = 1;
                    temptable3.AddCell(cellxeroxcopy7);
                }

                PdfPCell cellsno18 = new PdfPCell(new Phrase("7", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsno18.HorizontalAlignment = 0;
                cellsno18.Colspan = 1;
                temptable3.AddCell(cellsno18);
                PdfPCell celldescription18 = new PdfPCell(new Phrase("Bank Pass Book", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldescription18.HorizontalAlignment = 0;
                celldescription18.Colspan = 1;
                temptable3.AddCell(celldescription18);
                PdfPCell celloriginal8 = new PdfPCell(new Phrase(bankpassbookKYCName, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celloriginal8.HorizontalAlignment = 0;
                celloriginal8.Colspan = 1;
                temptable3.AddCell(celloriginal8);
                PdfPCell cellxeroxcopy8 = new PdfPCell(new Phrase(bankpassbookno, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellxeroxcopy8.HorizontalAlignment = 0;
                cellxeroxcopy8.Colspan = 1;
                temptable3.AddCell(cellxeroxcopy8);
                if (bankpassbookoriginal == "Original")
                {
                    
                    temptable3.AddCell(tickorg);
                }
                else
                {
                    cellxeroxcopy8 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellxeroxcopy8.HorizontalAlignment = 0;
                    cellxeroxcopy8.Colspan = 1;
                    temptable3.AddCell(cellxeroxcopy8);
                }
                if (bankpassbookoriginal == "Xerox")
                {
                   
                    temptable3.AddCell(tickorg);
                }
                else
                {
                    cellxeroxcopy8 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellxeroxcopy8.HorizontalAlignment = 0;
                    cellxeroxcopy8.Colspan = 1;
                    temptable3.AddCell(cellxeroxcopy8);
                }

                PdfPCell cellsno19 = new PdfPCell(new Phrase("8", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsno19.HorizontalAlignment = 0;
                cellsno19.Colspan = 1;
                temptable3.AddCell(cellsno19);
                PdfPCell celldescription19 = new PdfPCell(new Phrase("ESIC Card ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldescription19.HorizontalAlignment = 0;
                celldescription19.Colspan = 1;
                temptable3.AddCell(celldescription19);
                PdfPCell celloriginal9 = new PdfPCell(new Phrase(ESICCardKYCName, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celloriginal9.HorizontalAlignment = 0;
                celloriginal9.Colspan = 1;
                temptable3.AddCell(celloriginal9);
                PdfPCell cellxeroxcopy9 = new PdfPCell(new Phrase(ESICCardNo, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellxeroxcopy9.HorizontalAlignment = 0;
                cellxeroxcopy9.Colspan = 1;
                temptable3.AddCell(cellxeroxcopy9);
                if (ESICoriginal == "Original")
                {
                   
                    temptable3.AddCell(tickorg);
                }
                else
                {
                    cellxeroxcopy9 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellxeroxcopy9.HorizontalAlignment = 0;
                    cellxeroxcopy9.Colspan = 1;
                    temptable3.AddCell(cellxeroxcopy9);
                }
                if (ESICoriginal == "Xerox")
                {

                    temptable3.AddCell(tickorg);
                }
                else
                {
                    cellxeroxcopy9 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellxeroxcopy9.HorizontalAlignment = 0;
                    cellxeroxcopy9.Colspan = 1;
                    temptable3.AddCell(cellxeroxcopy9);
                }


                PdfPCell cellsno1201 = new PdfPCell(new Phrase("9", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsno1201.HorizontalAlignment = 0;
                cellsno1201.Colspan = 1;
                temptable3.AddCell(cellsno1201);
                PdfPCell celldescription2011 = new PdfPCell(new Phrase("SSC ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldescription2011.HorizontalAlignment = 0;
                celldescription2011.Colspan = 1;
                temptable3.AddCell(celldescription2011);
                PdfPCell celloriginal201 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celloriginal201.HorizontalAlignment = 0;
                celloriginal201.Colspan = 1;
                temptable3.AddCell(celloriginal201);
                PdfPCell cellxeroxcopy201 = new PdfPCell(new Phrase(SSCNo, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellxeroxcopy201.HorizontalAlignment = 0;
                cellxeroxcopy201.Colspan = 1;
                temptable3.AddCell(cellxeroxcopy201);

                if (SSCOriginal == "Original")
                {

                    temptable3.AddCell(tickorg);
                }
                else
                { 

                cellxeroxcopy201 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellxeroxcopy201.HorizontalAlignment = 0;
                cellxeroxcopy201.Colspan = 1;
                temptable3.AddCell(cellxeroxcopy201);
                }

                if (SSCOriginal == "Xerox")
                {

                    temptable3.AddCell(tickorg);
                }
                else
                { 
                cellxeroxcopy201 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellxeroxcopy201.HorizontalAlignment = 0;
                cellxeroxcopy201.Colspan = 1;
                temptable3.AddCell(cellxeroxcopy201);
                }

                PdfPCell cellsno120 = new PdfPCell(new Phrase("10", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsno120.HorizontalAlignment = 0;
                cellsno120.Colspan = 1;
                temptable3.AddCell(cellsno120);
                PdfPCell celldescription201 = new PdfPCell(new Phrase("Others ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldescription201.HorizontalAlignment = 0;
                celldescription201.Colspan = 1;
                temptable3.AddCell(celldescription201);
                PdfPCell celloriginal20 = new PdfPCell(new Phrase(othersname, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celloriginal20.HorizontalAlignment = 0;
                celloriginal20.Colspan = 1;
                temptable3.AddCell(celloriginal20);
                PdfPCell cellxeroxcopy20 = new PdfPCell(new Phrase(othersno, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellxeroxcopy20.HorizontalAlignment = 0;
                cellxeroxcopy20.Colspan = 1;
                temptable3.AddCell(cellxeroxcopy20);

                cellxeroxcopy20 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellxeroxcopy20.HorizontalAlignment = 0;
                cellxeroxcopy20.Colspan = 1;
                temptable3.AddCell(cellxeroxcopy20);

                cellxeroxcopy20 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellxeroxcopy20.HorizontalAlignment = 0;
                cellxeroxcopy20.Colspan = 1;
                temptable3.AddCell(cellxeroxcopy20);

               

                PdfPCell celldeclaratioemp = new PdfPCell(new Phrase("Declaration By The Employee:", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldeclaratioemp.HorizontalAlignment = 0;
                celldeclaratioemp.Colspan = 6;
                celldeclaratioemp.Border = 0;
                celldeclaratioemp.PaddingTop = 20;
                temptable3.AddCell(celldeclaratioemp);

                PdfPCell cellmater = new PdfPCell(new Phrase("The Above Information Furnished by me is true and correct with best of my knowledge", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellmater.HorizontalAlignment = 0;
                cellmater.Colspan = 6;
                cellmater.Border = 0;
                cellmater.PaddingTop = 20;
                temptable3.AddCell(cellmater);

                PdfPCell celldate = new PdfPCell(new Phrase("Date:" + date, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldate.HorizontalAlignment = 0;
                celldate.Colspan = 3;
                celldate.Border = 0;
                celldate.PaddingTop = 20;
                temptable3.AddCell(celldate);

                PdfPCell celldateval = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldateval.HorizontalAlignment = 0;
                celldateval.Colspan = 3;
                celldateval.Border = 0;
                celldateval.PaddingTop = 20;
                temptable3.AddCell(celldateval);

                PdfPCell cellsign = new PdfPCell(new Phrase("Signature of Attestating Officer", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsign.HorizontalAlignment = 0;
                cellsign.Colspan = 3;
                cellsign.Border = 0;
                cellsign.PaddingTop = 20;
                temptable3.AddCell(cellsign);

                PdfPCell celldsignemp = new PdfPCell(new Phrase("Signature of Employee", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldsignemp.HorizontalAlignment = 2;
                celldsignemp.Colspan = 3;
                celldsignemp.PaddingRight = 50f;
                celldsignemp.Border = 0;
                celldsignemp.PaddingTop = 20;
                temptable3.AddCell(celldsignemp);

                PdfPCell cellsignname = new PdfPCell(new Phrase("Name:", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsignname.HorizontalAlignment = 0;
                cellsignname.Colspan = 2;
                cellsignname.Border = 0;
                cellsignname.PaddingTop = 20;
                temptable3.AddCell(cellsignname);

                PdfPCell cellsignnamev = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsignnamev.HorizontalAlignment = 0;
                cellsignnamev.Colspan = 1;
                cellsignnamev.Border = 0;
                cellsignnamev.PaddingTop = 20;
               // temptable3.AddCell(cellsignnamev);

                PdfPCell cellsignnamee = new PdfPCell(new Phrase("Name:", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsignnamee.HorizontalAlignment = 2;
                cellsignnamee.Colspan = 3;
                cellsignnamee.Border = 0;
              cellsignnamee.PaddingRight =50;
                cellsignnamee.PaddingTop = 20;
                temptable3.AddCell(cellsignnamee);

       

                PdfPCell cellforoffice = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellforoffice.HorizontalAlignment = 0;
                cellforoffice.Border = 0;
                cellforoffice.Colspan = 6;
                cellforoffice.PaddingTop = 40;
                temptable3.AddCell(cellforoffice);

                PdfPCell cellforofficeempty = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellforofficeempty.HorizontalAlignment = 0;
                cellforofficeempty.Border = 0;
                cellforofficeempty.Colspan = 1;
               temptable3.AddCell(cellforofficeempty);

                PdfPCell cell4space = new PdfPCell(new Phrase("FOR OFFICE USE ONLY", FontFactory.GetFont(fontstyle, Fontsize + 2, Font.NORMAL, BaseColor.BLACK)));
                cell4space.HorizontalAlignment = 1;
                cell4space.Colspan =3;
                cell4space.PaddingLeft = 15f;
                temptable3.AddCell(cell4space);

                PdfPCell cellforoemptyffice = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellforoemptyffice.HorizontalAlignment = 0;
                cellforoemptyffice.Border = 0;
                cellforoemptyffice.Colspan = 2;
              temptable3.AddCell(cellforoemptyffice);

                PdfPCell celldone = new PdfPCell(new Phrase("A. Verification Done By ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldone.HorizontalAlignment = 0;
                celldone.Border = 0;
                celldone.Colspan = 2;
                celldone.PaddingTop = 20;
                temptable3.AddCell(celldone);
                PdfPCell celldoneval = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldoneval.HorizontalAlignment = 0;
                celldoneval.Border = 0;
                celldoneval.Colspan = 1;
                celldoneval.PaddingTop = 20;
                temptable3.AddCell(celldoneval);

                PdfPCell celldatetime = new PdfPCell(new Phrase("Date&Time:", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldatetime.HorizontalAlignment = 0;
                celldatetime.Border = 0;
                celldatetime.Colspan = 3;
                celldatetime.PaddingTop = 20;
                celldatetime.PaddingLeft = 20f;
                temptable3.AddCell(celldatetime);
                //PdfPCell celldatetimeval = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                //celldatetimeval.HorizontalAlignment = 0;
                //celldatetimeval.Border = 0;
                //celldatetimeval.Colspan = 0;
                //celldatetimeval.PaddingTop = 20;
                //// temptable3.AddCell(celldatetimeval);

                PdfPCell cellbdone = new PdfPCell(new Phrase("B. Training Commenced From: ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellbdone.HorizontalAlignment = 0;
                cellbdone.Border = 0;
                cellbdone.Colspan = 2;
                cellbdone.PaddingTop = 20;
                temptable3.AddCell(cellbdone);
                PdfPCell cellbdoneval = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellbdoneval.HorizontalAlignment = 0;
                cellbdoneval.Border = 0;
                cellbdoneval.Colspan =1 ;
                cellbdoneval.PaddingTop = 20;
                temptable3.AddCell(cellbdoneval);

                PdfPCell cellbdatetime = new PdfPCell(new Phrase("Salary Offered:", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellbdatetime.HorizontalAlignment = 0;
                cellbdatetime.Border = 0;
                cellbdatetime.Colspan = 3;
                cellbdatetime.PaddingTop = 20;
                cellbdatetime.PaddingLeft = 20f;
                temptable3.AddCell(cellbdatetime);
                //PdfPCell cellbdatetimeval = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                //cellbdatetimeval.HorizontalAlignment = 0;
                //cellbdatetimeval.Border = 0;
                //cellbdatetimeval.Colspan = 3;
                //cellbdatetimeval.PadingTop = 20;
                ////temptable3.AddCell(cellbdatetimeval);

                PdfPCell cellcdatetime = new PdfPCell(new Phrase("C. Result of Training:", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellcdatetime.HorizontalAlignment = 0;
                cellcdatetime.Border = 0;
                cellcdatetime.Colspan = 3;
                cellcdatetime.PaddingTop = 20;
                temptable3.AddCell(cellcdatetime);
                PdfPCell cellcdatetimeval = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellcdatetimeval.HorizontalAlignment = 0;
                cellcdatetimeval.Border = 0;
                cellcdatetimeval.Colspan = 3;
                cellcdatetimeval.PaddingTop = 20;
                temptable3.AddCell(cellcdatetimeval);

                PdfPCell cellcddatetime = new PdfPCell(new Phrase("D. Date of Commencement of Services :", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellcddatetime.HorizontalAlignment = 0;
                cellcddatetime.Border = 0;
                cellcddatetime.Colspan = 6;
                cellcddatetime.PaddingTop = 20;
                temptable3.AddCell(cellcddatetime);
                //PdfPCell cellcddatetimeval = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                //cellcddatetimeval.HorizontalAlignment = 0;
                //cellcddatetimeval.Border = 0;
                //cellcddatetimeval.Colspan = 2;
                //cellcddatetimeval.PaddingTop = 20;
                //temptable3.AddCell(cellcddatetimeval);

                PdfPCell celledatetime = new PdfPCell(new Phrase("E. Posted At :", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celledatetime.HorizontalAlignment = 0;
                celledatetime.Border = 0;
                celledatetime.Colspan = 3;
                celledatetime.PaddingTop = 20;
                temptable3.AddCell(celledatetime);
                PdfPCell celleddatetimeval = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celleddatetimeval.HorizontalAlignment = 0;
                celleddatetimeval.Border = 0;
                celleddatetimeval.Colspan = 3;
                celleddatetimeval.PaddingTop = 20;
                temptable3.AddCell(celleddatetimeval);

                PdfPCell cellcfddatetime = new PdfPCell(new Phrase("F.  ID.No:", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellcfddatetime.HorizontalAlignment = 0;
                cellcfddatetime.Border = 0;
                cellcfddatetime.Colspan = 3;
                cellcfddatetime.PaddingTop = 20;
                temptable3.AddCell(cellcfddatetime);
                PdfPCell cellcffddatetimeval = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellcffddatetimeval.HorizontalAlignment = 0;
                cellcffddatetimeval.Border = 0;
                cellcffddatetimeval.Colspan = 3;
                cellcffddatetimeval.PaddingTop = 20;
                temptable3.AddCell(cellcffddatetimeval);

                PdfPCell cellgcddatetime = new PdfPCell(new Phrase("G. Caution Deposit : Rs.", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellgcddatetime.HorizontalAlignment = 0;
                cellgcddatetime.Border = 0;
                cellgcddatetime.Colspan = 3;
                cellgcddatetime.PaddingTop = 20;
                temptable3.AddCell(cellgcddatetime);
                PdfPCell cellggcddatetimeval = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellggcddatetimeval.HorizontalAlignment = 0;
                cellggcddatetimeval.Border = 0;
                cellggcddatetimeval.Colspan = 3;
                cellggcddatetimeval.PaddingTop = 20;
                temptable3.AddCell(cellggcddatetimeval);

                PdfPCell cellchddatetime = new PdfPCell(new Phrase("H. Uniform Deposit : Rs. ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellchddatetime.HorizontalAlignment = 0;
                cellchddatetime.Border = 0;
                cellchddatetime.Colspan = 3;
                cellchddatetime.PaddingTop = 20;
                temptable3.AddCell(cellchddatetime);
                PdfPCell cellhhcddatetimeval = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellhhcddatetimeval.HorizontalAlignment = 0;
                cellhhcddatetimeval.Border = 0;
                cellhhcddatetimeval.Colspan = 3;
                cellhhcddatetimeval.PaddingTop = 20;
                temptable3.AddCell(cellhhcddatetimeval);


                PdfPCell cellRemarks = new PdfPCell(new Phrase("Remarks", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellRemarks.HorizontalAlignment = 0;
                cellRemarks.Border = 0;
                cellRemarks.Colspan = 6;
                cellRemarks.PaddingTop = 20;
                temptable3.AddCell(cellRemarks);

                document.Add(temptable3);

                PdfPTable temptable5 = new PdfPTable(4);
                temptable5.TotalWidth = 500f;
                temptable5.LockedWidth = true;
                float[] tempwidth5 = new float[] { 5f, 5f, 5f, 4f };
                temptable5.SetWidths(tempwidth5);


                PdfPCell celltraiming = new PdfPCell(new Phrase("Training Manager", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltraiming.HorizontalAlignment = 0;
                celltraiming.Border = 0;
                celltraiming.Colspan = 1;
                celltraiming.PaddingTop = 20;
                temptable5.AddCell(celltraiming);
                PdfPCell cellrecruitment = new PdfPCell(new Phrase("Recruitment", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellrecruitment.HorizontalAlignment = 0;
                cellrecruitment.Border = 0;
                cellrecruitment.Colspan = 1;
                cellrecruitment.PaddingTop = 20;
                temptable5.AddCell(cellrecruitment);
                PdfPCell cellmanager = new PdfPCell(new Phrase("Opetations Manager", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellmanager.HorizontalAlignment = 0;
                cellmanager.Border = 0;
                cellmanager.Colspan = 1;
                cellmanager.PaddingTop = 20;
                temptable5.AddCell(cellmanager);
                PdfPCell celladmin = new PdfPCell(new Phrase("BDM", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celladmin.HorizontalAlignment = 0;
                celladmin.Border = 0;
                celladmin.Colspan = 1;
                celladmin.PaddingTop = 20;
                temptable5.AddCell(celladmin);

                PdfPCell celltradt = new PdfPCell(new Phrase("Dt.", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltradt.HorizontalAlignment = 0;
                celltradt.Border = 0;
                celltradt.Colspan = 1;
                celltradt.PaddingTop = 20;
                temptable5.AddCell(celltradt);
                PdfPCell cellrecrudt = new PdfPCell(new Phrase("Dt.", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellrecrudt.HorizontalAlignment = 0;
                cellrecrudt.Border = 0;
                cellrecrudt.Colspan = 1;
                cellrecrudt.PaddingTop = 20;
                temptable5.AddCell(cellrecrudt);
                PdfPCell cellmadt = new PdfPCell(new Phrase("Dt.", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellmadt.HorizontalAlignment = 0;
                cellmadt.Border = 0;
                cellmadt.Colspan = 1;
                cellmadt.PaddingTop = 20;
                temptable5.AddCell(cellmadt);
                PdfPCell celladmindt = new PdfPCell(new Phrase("Dt.", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celladmindt.HorizontalAlignment = 0;
                celladmindt.Border = 0;
                celladmindt.Colspan = 1;
                celladmindt.PaddingTop = 20;
                temptable5.AddCell(celladmindt);

                PdfPCell cellunderline = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellunderline.HorizontalAlignment = 1;
                cellunderline.Colspan = 4;
                cellunderline.PaddingTop = 20;
                cellunderline.BorderWidthBottom = 0;//0.5
                cellunderline.BorderWidthTop = 0;
                cellunderline.BorderWidthRight = 0;
                cellunderline.BorderWidthLeft = 0;
                temptable5.AddCell(cellunderline);

                document.Add(temptable5);
                document.NewPage();
                #endregion
                #region Form4
                PdfPTable temptable4 = new PdfPTable(4);
                temptable4.TotalWidth = 500f;
                temptable4.LockedWidth = true;
                float[] tempwidth4 = new float[] { 5f, 5f, 5f, 5f };
                temptable4.SetWidths(tempwidth4);              

                PdfPCell cellterms = new PdfPCell(new Phrase("TERMS & CONDITIONS", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL | Font.UNDERLINE, BaseColor.BLACK)));
                cellterms.HorizontalAlignment = 1;
                cellterms.Border = 0;
                cellterms.Colspan = 4;
                cellterms.PaddingTop = 0;
                temptable4.AddCell(cellterms);


                PdfPCell celluniform = new PdfPCell(new Phrase("1.  Uniform Charges are applicable on the date of joining as per company policy.", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celluniform.HorizontalAlignment = 0;
                celluniform.Border = 0;
                celluniform.Colspan = 4;
                celluniform.PaddingTop = 20;
                temptable4.AddCell(celluniform);

                PdfPCell cellinform = new PdfPCell(new Phrase("2. I agreed to deposit my personal certificates or other documents in original, and may give back to me at your wish.", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellinform.HorizontalAlignment = 0;
                cellinform.Border = 0;
                cellinform.Colspan = 4;
                cellinform.PaddingTop = 20;
                temptable4.AddCell(cellinform);

                PdfPCell cellorga = new PdfPCell(new Phrase("3.  I have not joined and shall not join in any union or organisation in contraire of your company, and if it is proved I am liable for as company action.", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellorga.HorizontalAlignment = 0;
                cellorga.Border = 0;
                cellorga.Colspan = 4;
                cellorga.PaddingTop = 20;
                temptable4.AddCell(cellorga);


                PdfPCell cellshall = new PdfPCell(new Phrase("4.  I shall abide by your organisation transfer orders and other terms & conditions. ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellshall.HorizontalAlignment = 0;
                cellshall.Border = 0;
                cellshall.Colspan = 4;
                cellshall.PaddingTop = 20;
                temptable4.AddCell(cellshall);

                PdfPCell cellshallorgani = new PdfPCell(new Phrase("5.  Original certificates will be returned to me, on my resignation only Subject to your acceptance.", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellshallorgani.HorizontalAlignment = 0;
                cellshallorgani.Border = 0;
                cellshallorgani.Colspan = 4;
                cellshallorgani.PaddingTop = 20;
                temptable4.AddCell(cellshallorgani);

                PdfPCell cellshalluniform = new PdfPCell(new Phrase("6.  At the time of leaving your organisation I shall return my uniform, and other belongings if any.", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellshalluniform.HorizontalAlignment = 0;
                cellshalluniform.Border = 0;
                cellshalluniform.Colspan = 4;
                cellshalluniform.PaddingTop = 20;
                temptable4.AddCell(cellshalluniform);

                PdfPCell cellshallruk = new PdfPCell(new Phrase("7.  During the Period of my tenure, any loss caused to person, property, you may take legal action for which I am responsable. ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellshallruk.HorizontalAlignment = 0;
                cellshallruk.Border = 0;
                cellshallruk.Colspan = 4;
                cellshallruk.PaddingTop = 20;
                cellshallruk.SetLeading(0, 1.2f);
                temptable4.AddCell(cellshallruk);


                PdfPCell cellcompany = new PdfPCell(new Phrase("8. As per Company’s rules, probation period for six months or more if necessary, You may increase. ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellcompany.HorizontalAlignment = 0;
                cellcompany.Border = 0;
                cellcompany.Colspan = 4;
                cellcompany.PaddingTop = 20;
                cellcompany.SetLeading(0, 1.2f);
                temptable4.AddCell(cellcompany);

                PdfPCell cellPeriod = new PdfPCell(new Phrase("9. In the period of probation the company has a right to terminate me, without any prior notice if my services are not to satisfactory and If I want to Resign during probation period I must serve 15 days prior notice or i will leave 15 days salary to the company. ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellPeriod.HorizontalAlignment = 0;
                cellPeriod.Border = 0;
                cellPeriod.Colspan = 4;
                cellPeriod.PaddingTop = 20;
                cellPeriod.SetLeading(0, 1.2f);
                temptable4.AddCell(cellPeriod);

                PdfPCell celliwillnot = new PdfPCell(new Phrase("10.  I WILL NOT", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celliwillnot.HorizontalAlignment = 0;
                celliwillnot.Border = 0;
                celliwillnot.Colspan = 4;
                celliwillnot.PaddingTop = 20;
                temptable4.AddCell(celliwillnot);

                PdfPCell celliawillnot = new PdfPCell(new Phrase("     a)  Report for duty in Alcoholic condition.", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celliawillnot.HorizontalAlignment = 0;
                celliawillnot.Border = 0;
                celliawillnot.Colspan = 4;
                celliawillnot.PaddingTop = 20;
                temptable4.AddCell(celliawillnot);

                PdfPCell cellbiwillnot = new PdfPCell(new Phrase("     b)  Will not wear shabby uniform.", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellbiwillnot.HorizontalAlignment = 0;
                cellbiwillnot.Border = 0;
                cellbiwillnot.Colspan = 4;
                cellbiwillnot.PaddingTop = 20;
                temptable4.AddCell(cellbiwillnot);

                PdfPCell cellciwillnot = new PdfPCell(new Phrase("      c)  Will not argue with any employee (Sr./Jr.) & with client", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellciwillnot.HorizontalAlignment = 0;
                cellciwillnot.Border = 0;
                cellciwillnot.Colspan = 4;
                cellciwillnot.PaddingTop = 20;
                temptable4.AddCell(cellciwillnot);

                PdfPCell celliwdillnot = new PdfPCell(new Phrase("      d)  Will not sleep on duty", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celliwdillnot.HorizontalAlignment = 0;
                celliwdillnot.Border = 0;
                celliwdillnot.Colspan = 4;
                celliwdillnot.PaddingTop = 20;
                temptable4.AddCell(celliwdillnot);

                PdfPCell celliewillnot = new PdfPCell(new Phrase("      e)  Will not leave the duty post without any reliever", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celliewillnot.HorizontalAlignment = 0;
                celliewillnot.Border = 0;
                celliewillnot.Colspan = 4;
                celliewillnot.PaddingTop = 20;
                temptable4.AddCell(celliewillnot);

                PdfPCell celliwilflnot = new PdfPCell(new Phrase("       f)   Will not voilate any standard operation procedure", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celliwilflnot.HorizontalAlignment = 0;
                celliwilflnot.Border = 0;
                celliwilflnot.Colspan = 4;
                celliwilflnot.PaddingTop = 20;
                temptable4.AddCell(celliwilflnot);

                PdfPCell celliggwillnot = new PdfPCell(new Phrase("       g)  Will not involve directly or indirectly in any theft.", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celliggwillnot.HorizontalAlignment = 0;
                celliggwillnot.Border = 0;
                celliggwillnot.Colspan = 4;
                celliggwillnot.PaddingTop = 20;
                temptable4.AddCell(celliggwillnot);

                PdfPCell cellihhwillnot = new PdfPCell(new Phrase("       h)  Will not report late for duty.", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellihhwillnot.HorizontalAlignment = 0;
                cellihhwillnot.Border = 0;
                cellihhwillnot.Colspan = 4;
                cellihhwillnot.PaddingTop = 20;
                temptable4.AddCell(cellihhwillnot);

                PdfPCell celliiiwillnot = new PdfPCell(new Phrase("       i)If I found in duty with any lapses am ready to accept penalty as per Company Decision.", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celliiiwillnot.HorizontalAlignment = 0;
                celliiiwillnot.Border = 0;
                celliiiwillnot.Colspan = 4;
                celliiiwillnot.PaddingTop = 20;
                temptable4.AddCell(celliiiwillnot);

                PdfPCell celli11willnot = new PdfPCell(new Phrase("11.  I have read and understood the above Rules and Regulations and Explained in my local language by the management", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celli11willnot.HorizontalAlignment = 0;
                celli11willnot.Border = 0;
                celli11willnot.Colspan = 4;
                celli11willnot.PaddingTop = 20;
                temptable4.AddCell(celli11willnot);

                PdfPCell celli12willnot = new PdfPCell(new Phrase("12.  If i voilate any of the above eleven points, the company can proceed with legal action followed         by termination with any monitory benefits.", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celli12willnot.HorizontalAlignment = 0;
                celli12willnot.Border = 0;
                celli12willnot.Colspan = 4;
                celli12willnot.PaddingTop = 20;
                //celli12willnot.SetLeading(0, 1.2f);
                temptable4.AddCell(celli12willnot);

                PdfPCell cellsigiwillnot = new PdfPCell(new Phrase("     Signature of the Applicant in Acceptance", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsigiwillnot.HorizontalAlignment = 0;
                cellsigiwillnot.Border = 0;
                cellsigiwillnot.Colspan = 4;
                cellsigiwillnot.PaddingTop = 20;
                temptable4.AddCell(cellsigiwillnot);

                string imagepathsign = Server.MapPath("assets/Images/sign.jpg");

                if (File.Exists(imagepathsign))
                {
                    
                    iTextSharp.text.Image srflogo = iTextSharp.text.Image.GetInstance(imagepathsign);
                    srflogo.ScaleAbsolute(85f, 90f);
                    PdfPCell companylogo1 = new PdfPCell();
                    Paragraph cmplogo1 = new Paragraph();
                    cmplogo1.Add(new Chunk(srflogo, 50f, 0f));
                    companylogo1.AddElement(srflogo);
                    companylogo1.HorizontalAlignment = 2;
                    companylogo1.Colspan = 4;
                    companylogo1.PaddingLeft = 400;
                    companylogo1.Border = 0;
                    temptable4.AddCell(companylogo1);

                }
                PdfPCell cellcouiwillnot = new PdfPCell(new Phrase("MD Signature", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellcouiwillnot.HorizontalAlignment = 2;
                cellcouiwillnot.Border = 0;
                cellcouiwillnot.Colspan = 4;
                cellcouiwillnot.PaddingRight = 20f;
                //cellcouiwillnot.PaddingTop = -20;
                temptable4.AddCell(cellcouiwillnot);

                PdfPCell cellidatewillnot = new PdfPCell(new Phrase("    Date :", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellidatewillnot.HorizontalAlignment = 0;
                cellidatewillnot.Border = 0;
                cellidatewillnot.Colspan = 4;
                cellidatewillnot.PaddingTop = -15;
                temptable4.AddCell(cellidatewillnot);

                PdfPCell celliwillareanot = new PdfPCell(new Phrase("    Area Mgr. / Trg. Mgr. / Branch Mgr", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celliwillareanot.HorizontalAlignment = 2;
                celliwillareanot.Border = 0;
                celliwillareanot.Colspan = 4;
                //celliwillareanot.PaddingTop = -10;
               // temptable4.AddCell(celliwillareanot);

                document.Add(temptable4);
                document.NewPage();
                #endregion Form4
                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";
                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }


            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;
            }
        }


        protected void btnPFForm11_Click(object sender, EventArgs e)
        {

            int Fontsize = 9;
            string Fontstyle = "Tahoma";

            #region Variable Declaration

            string FatherName = "";
            string SpouseName = "";
            string FSpouseName = "";
            string EstablishmentID = "";
            string Qualification = "";
            string email = "";
            string UANNumber = "";
            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";
            string SpeciallyAbled = "";
            string Category = "";
            string prTown = "";
            string prPostOffice = "";
            string prTaluka = "";
            string prPoliceStation = "";
            string prcity = "";
            string prLmark = "";
            string prPincode = "";
            string prState = "";


            string peTown = "";
            string pePostOffice = "";
            string peTaluka = "";
            string pePoliceStation = "";
            string pecity = "";
            string pelmark = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";


            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";

            string Esino = "";
            string PFno = "";
            string prphone = "";
            string pephone = "";
            string Gender = "";
            string Title = "";
            string PrevRegionCode = "";
            string PrevEmployerCode = "";
            string PrevExtension = "";
            string PrevPFNo = "";
            string PrevDtofLeave = "";
            string PrevYrExp = "";
            string FatherSpouseName = "";


            string AadharCardNo = "";
            string AadharCardName = "";
            string drivingLicenseName = ""; string DrivingLicenseNo = "";
            string VoterIDNo = "";
            string VoterIDName = "";
            string RationCardNo = "";
            string RationCardName = "";
            string PanCardNo = "";
            string PanCardName = "";
            string PassBookNo = ""; string BankPassbookName = ""; string ElectricityBillNo = "";
            string ElectricityBillName = ""; string OtherType = "";
            string Othertextname = ""; string ESICCardNo = ""; string ESICName = "";


            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Father' ";
            DataTable dtfather = config.ExecuteAdaptorAsyncWithQueryParams(query).Result;

            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }

            string queryhu = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Husband' ";
            DataTable dthusband = config.ExecuteAdaptorAsyncWithQueryParams(queryhu).Result;
            string Hname = "";
            if (dthusband.Rows.Count > 0)
            {
                Hname = dthusband.Rows[0]["RName"].ToString();


            }



            #region for old code prevexp


            //string queryPrevempl = " select * from EmpPrevExperience where Empid='" + txtEmpid.Text + "'  ";
            //DataTable dtPrevempl = SqlHelper.Instance.GetTableByQuery(queryPrevempl);
            //string Regioncode = ""; String Officecode = ""; string EstablishmentID = ""; string Extension = ""; String AccNo = "";

            #endregion for old code prevexp



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration

            BaseColor color = new BaseColor(221, 226, 222);
            #region Begin Assign Values to The Variables
            SPName = "EmpBiodataPDF";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]




            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                Title = dtEmpdetails.Rows[0]["Title"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                FatherName = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                SpouseName = dtEmpdetails.Rows[0]["EmpSpouseName"].ToString();
                FSpouseName = dtEmpdetails.Rows[0]["SpouseName"].ToString();
                Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();



                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();

                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prTown = dtEmpdetails.Rows[0]["prTown"].ToString();
                prPostOffice = dtEmpdetails.Rows[0]["prPostOffice"].ToString();
                prTaluka = dtEmpdetails.Rows[0]["prTaluka"].ToString();
                prPoliceStation = dtEmpdetails.Rows[0]["prPoliceStation"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();

                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peTown = dtEmpdetails.Rows[0]["peTown"].ToString();
                pePostOffice = dtEmpdetails.Rows[0]["pePostOffice"].ToString();
                peTaluka = dtEmpdetails.Rows[0]["peTaluka"].ToString();
                pePoliceStation = dtEmpdetails.Rows[0]["pePoliceStation"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                // pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                email = dtEmpdetails.Rows[0]["email"].ToString();
                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();
                UANNumber = dtEmpdetails.Rows[0]["EmpUANNumber"].ToString();
                SpeciallyAbled = dtEmpdetails.Rows[0]["SpeciallyAbled"].ToString();
                Category = dtEmpdetails.Rows[0]["Category"].ToString();
                string Image1 = "";

                if (dtEmpdetails.Rows[0]["Image"].ToString() != "")
                {
                    Image1 = dtEmpdetails.Rows[0]["Image"].ToString();
                }
                else
                {

                }

                Qualification = dtEmpdetails.Rows[0]["Qualification"].ToString();
                PFno = dtEmpdetails.Rows[0]["PFNo"].ToString();
                PrevRegionCode = dtEmpdetails.Rows[0]["PrevRegionCode"].ToString();
                PrevEmployerCode = dtEmpdetails.Rows[0]["PrevEmployerCode"].ToString();
                PrevExtension = dtEmpdetails.Rows[0]["PrevExtension"].ToString();
                PrevPFNo = dtEmpdetails.Rows[0]["PrevPFNo"].ToString();
                PrevDtofLeave = dtEmpdetails.Rows[0]["PrevDateofLeave"].ToString();
                if (PrevDtofLeave == "01/01/1900")
                {
                    PrevDtofLeave = "";
                }
                else
                {
                    PrevDtofLeave = dtEmpdetails.Rows[0]["PrevDateofLeave"].ToString();

                }
                PrevYrExp = dtEmpdetails.Rows[0]["PrevYrExp"].ToString();
                AadharCardNo = dtEmpdetails.Rows[0]["AadharCardNo"].ToString();
                AadharCardName = dtEmpdetails.Rows[0]["AadharCardName"].ToString();
                drivingLicenseName = dtEmpdetails.Rows[0]["drivingLicenseName"].ToString();
                DrivingLicenseNo = dtEmpdetails.Rows[0]["DrivingLicenseNo"].ToString();
                VoterIDNo = dtEmpdetails.Rows[0]["VoterIDNo"].ToString();
                VoterIDName = dtEmpdetails.Rows[0]["VoterIDName"].ToString();
                RationCardNo = dtEmpdetails.Rows[0]["RationCardNo"].ToString();
                RationCardName = dtEmpdetails.Rows[0]["RationCardName"].ToString();
                PanCardNo = dtEmpdetails.Rows[0]["PanCardNo"].ToString();
                PanCardName = dtEmpdetails.Rows[0]["PanCardName"].ToString();
                PassBookNo = dtEmpdetails.Rows[0]["PassBookNo"].ToString();
                BankPassbookName = dtEmpdetails.Rows[0]["BankPassbookName"].ToString();
                ElectricityBillNo = dtEmpdetails.Rows[0]["ElectricityBillNo"].ToString();
                ElectricityBillName = dtEmpdetails.Rows[0]["ElectricityBillName"].ToString();
                OtherType = dtEmpdetails.Rows[0]["OtherType"].ToString();
                Othertextname = dtEmpdetails.Rows[0]["Othertextname"].ToString();
                ESICCardNo = dtEmpdetails.Rows[0]["ESICCardNo"].ToString();
                ESICName = dtEmpdetails.Rows[0]["ESICName"].ToString();


                #endregion


                MemoryStream ms = new MemoryStream();
                string fileheader2 = Idno + "" + name + "" + "Biodata" + " .Pdf";
                Document document = new Document(PageSize.LEGAL);
                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();


                string imagepath1 = Server.MapPath("images");
                string image = "";
                #region Headings of the Pdf

                PdfPTable tablespf = new PdfPTable(6);
                tablespf.TotalWidth = 550f;
                tablespf.LockedWidth = true;
                float[] width = new float[] { 2f, 5f, 2f, 2f, 2f, 2f };
                tablespf.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 6;
                cellspace.Border = 0;
                cellspace.PaddingTop = -5;



                PdfPCell cellpfform1 = new PdfPCell(new Phrase("Form No. 11 (New)", FontFactory.GetFont(Fontstyle, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                cellpfform1.HorizontalAlignment = 2;
                cellpfform1.Colspan = 6;
                cellpfform1.Border = 0;
                tablespf.AddCell(cellpfform1);




                PdfPCell cellpfdeclaration = new PdfPCell(new Phrase("Declaration Form", FontFactory.GetFont(Fontstyle, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                cellpfdeclaration.HorizontalAlignment = 2;
                cellpfdeclaration.Colspan = 6;
                cellpfdeclaration.Border = 0;
                tablespf.AddCell(cellpfdeclaration);

                string imagepathpf1 = Server.MapPath("assets/images");

                string imagepathpf = Server.MapPath("assets");
                iTextSharp.text.Image headtext = iTextSharp.text.Image.GetInstance(imagepathpf + "/EPFLogo.PNG");
                headtext.ScalePercent(80f);
                PdfPCell esiclogo = new PdfPCell();
                Paragraph p9 = new Paragraph();
                p9.Add(new Chunk(headtext, 0, 0));
                esiclogo.AddElement(p9);
                esiclogo.HorizontalAlignment = 0;
                esiclogo.Colspan = 1;
                esiclogo.Border = 0;

                esiclogo.PaddingBottom = -10;
                tablespf.AddCell(esiclogo);


                PdfPCell cellpfdeclaration1 = new PdfPCell(new Phrase("(To be retained by the Employer for future reference)", FontFactory.GetFont(Fontstyle, 11, Font.NORMAL, BaseColor.BLACK)));
                cellpfdeclaration1.HorizontalAlignment = 2;
                cellpfdeclaration1.Colspan = 6;
                cellpfdeclaration1.Border = 0;
                tablespf.AddCell(cellpfdeclaration1);

                tablespf.AddCell(cellspace);

                PdfPCell cellHead4 = new PdfPCell(new Phrase("Employees’ Provident Fund Organization", FontFactory.GetFont(Fontstyle, Fontsize + 11, Font.BOLD, BaseColor.BLACK)));
                cellHead4.HorizontalAlignment = 1;
                cellHead4.Colspan = 6;
                cellHead4.Border = 0;
                cellHead4.PaddingTop = -70;
                cellHead4.PaddingLeft = 40;
                tablespf.AddCell(cellHead4);

                tablespf.AddCell(cellspace);

                PdfPCell cellpfhead1 = new PdfPCell(new Phrase("THE EMPLOYEES’ PROVIDENT FUNDS SCHEME, 1952 (PARAGRAPH-34 & 57) ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                cellpfhead1.HorizontalAlignment = 1;
                cellpfhead1.Colspan = 6;
                cellpfhead1.Border = 0;
                cellpfhead1.PaddingRight = -30;
                cellpfhead1.PaddingTop = -50;
                tablespf.AddCell(cellpfhead1);

                PdfPCell cellpfhead2 = new PdfPCell(new Phrase("& ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                cellpfhead2.HorizontalAlignment = 1;
                cellpfhead2.Colspan = 6;
                cellpfhead2.Border = 0;
                cellpfhead2.PaddingTop = -35;
                tablespf.AddCell(cellpfhead2);

                PdfPCell cellpfhead3 = new PdfPCell(new Phrase("THE EMPLOYEES’ PENSION SCHEME, 1995 (PARAGRAPH-24) ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                cellpfhead3.HorizontalAlignment = 1;
                cellpfhead3.Colspan = 6;
                cellpfhead3.Border = 0;
                cellpfhead3.PaddingTop = -20;
                tablespf.AddCell(cellpfhead3);

                tablespf.AddCell(cellspace);

                document.Add(tablespf);

                PdfPTable tablepf = new PdfPTable(6);
                tablepf.TotalWidth = 550f;
                tablepf.LockedWidth = true;
                float[] widths = new float[] { 2f, 5f, 2f, 2f, 2f, 2f };
                tablespf.SetWidths(widths);

                PdfPCell cellspaces = new PdfPCell(new Phrase("  ", FontFactory.GetFont(Fontstyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspaces.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspaces.Colspan = 6;
                cellspaces.Border = 0;
                cellspaces.PaddingTop = -5;

                PdfPCell cellpfhead4 = new PdfPCell(new Phrase("DECLARATION BY A PERSON TAKING UP EMPLOYMENT IN AN ESTABLISHMENT ON WHICH EMPLOYEES’ PROVIDENT ", FontFactory.GetFont(Fontstyle, Fontsize, Font.UNDERLINE | Font.BOLD, BaseColor.BLACK)));
                cellpfhead4.HorizontalAlignment = 0;
                cellpfhead4.Colspan = 6;
                cellpfhead4.Border = 0;
                tablepf.AddCell(cellpfhead4);


                PdfPCell cellpfhead41 = new PdfPCell(new Phrase("FUND SCHEME,1952 AND/OR EMPLOYEES’ PENSION SCHEME, 1995 IS APPLICABLE,  ", FontFactory.GetFont(Fontstyle, Fontsize, Font.UNDERLINE | Font.BOLD, BaseColor.BLACK)));
                cellpfhead41.HorizontalAlignment = 1;
                cellpfhead41.Colspan = 6;
                cellpfhead41.Border = 0;
                tablepf.AddCell(cellpfhead41);

                PdfPCell cellpfhead6 = new PdfPCell(new Phrase("(PLEASE GO THROUGH THE INSTRUCTIONS) ", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellpfhead6.HorizontalAlignment = 1;
                cellpfhead6.Colspan = 6;
                cellpfhead6.Border = 0;
                cellpfhead6.PaddingBottom = -40;
                tablepf.AddCell(cellpfhead6);

                tablepf.AddCell(cellspace);
                tablepf.AddCell(cellspace);
                tablepf.AddCell(cellspace);
                tablepf.AddCell(cellspace);
                tablepf.AddCell(cellspace);
                tablepf.AddCell(cellspace);


                PdfPCell cellpfname = new PdfPCell(new Phrase("1) NAME ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                cellpfname.HorizontalAlignment = 0;
                cellpfname.Colspan = 3;
                cellpfname.Border = 0;
                tablepf.AddCell(cellpfname);


                PdfPCell cellpfname1 = new PdfPCell(new Phrase(Title + ". " + name, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                cellpfname1.HorizontalAlignment = 0;
                cellpfname1.Colspan = 3;
                cellpfname1.Border = 0;
                tablepf.AddCell(cellpfname1);


                tablepf.AddCell(cellspace);
                tablepf.AddCell(cellspace);

                PdfPCell cellpfdob = new PdfPCell(new Phrase("2) DATE OF BIRTH  ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                cellpfdob.HorizontalAlignment = 0;
                cellpfdob.Colspan = 3;
                cellpfdob.Border = 0;
                tablepf.AddCell(cellpfdob);

                PdfPCell cellpfdob1 = new PdfPCell(new Phrase(dateofbirth, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                cellpfdob1.HorizontalAlignment = 0;
                cellpfdob1.Colspan = 3;
                cellpfdob1.Border = 0;
                tablepf.AddCell(cellpfdob1);

                tablepf.AddCell(cellspace);
                tablepf.AddCell(cellspace);

                PdfPCell cellpffathername = new PdfPCell(new Phrase("3) FATHER’S/ HUSBAND’S  NAME  ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                cellpffathername.HorizontalAlignment = 0;
                cellpffathername.Colspan = 3;
                cellpffathername.Border = 0;
                tablepf.AddCell(cellpffathername);

                string Relationname = "";


                if (FatherName.Length > 0)
                {
                    FatherSpouseName = FatherName;
                }
                else if (SpouseName.Length > 0)
                {
                    FatherSpouseName = SpouseName;
                }
                else if (FSpouseName.Length > 0)
                {
                    FatherSpouseName = FSpouseName;
                }
                else
                {
                    FatherSpouseName = "";
                }


                PdfPCell cellpffathername1 = new PdfPCell(new Phrase("MR. " + FatherSpouseName, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                cellpffathername1.HorizontalAlignment = 0;
                cellpffathername1.Colspan = 3;
                cellpffathername1.Border = 0;
                cellpffathername1.PaddingTop = 5;
                cellpffathername1.PaddingBottom = 5;
                tablepf.AddCell(cellpffathername1);

                tablepf.AddCell(cellspace);
                tablepf.AddCell(cellspace);

                PdfPCell cellpfrelation = new PdfPCell(new Phrase("4) RELATIONSHIP IN RESPECT OF (7) ABOVE ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                cellpfrelation.HorizontalAlignment = 0;
                cellpfrelation.Colspan = 3;
                cellpfrelation.Border = 0;
                tablepf.AddCell(cellpfrelation);


                PdfPCell cellpfrelation1 = new PdfPCell(new Phrase("Father  ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                cellpfrelation1.HorizontalAlignment = 1;
                cellpfrelation1.Colspan = 1;
                tablepf.AddCell(cellpfrelation1);

                PdfPCell cellpfrelation12 = new PdfPCell(new Phrase("Husband ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                cellpfrelation12.HorizontalAlignment = 1;
                cellpfrelation12.Colspan = 1;
                tablepf.AddCell(cellpfrelation12);

                PdfPCell cellemp1 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                cellemp1.HorizontalAlignment = 1;
                cellemp1.Colspan = 1;
                cellemp1.Border = 0;
                tablepf.AddCell(cellemp1);

                PdfPCell cellemp = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                cellemp.HorizontalAlignment = 1;
                cellemp.Colspan = 3;
                cellemp.Border = 0;
                tablepf.AddCell(cellemp);


                if (FatherName.Length > 0)
                {



                    iTextSharp.text.Image headtext1 = iTextSharp.text.Image.GetInstance(imagepathpf1 + "/black-check.png");
                    PdfPCell chk1 = new PdfPCell();
                    Paragraph p99 = new Paragraph();
                    p99.Add(new Chunk(headtext1, 30f, 0));
                    chk1.AddElement(p99);
                    chk1.HorizontalAlignment = 1;
                    chk1.Colspan = 1;
                    tablepf.AddCell(chk1);


                }

                else
                {

                    PdfPCell chk1 = new PdfPCell();
                    chk1.HorizontalAlignment = 1;
                    chk1.Colspan = 1;
                    chk1.PaddingBottom = 8;
                    chk1.PaddingTop = 8;
                    tablepf.AddCell(chk1);

                }

                if (SpouseName.Length > 0 || FSpouseName.Length > 0 || Gender == "Female")
                {
                    iTextSharp.text.Image headtext2 = iTextSharp.text.Image.GetInstance(imagepathpf1 + "/black-check.png");
                    headtext2.SpacingBefore = 10;
                    PdfPCell chk2 = new PdfPCell();
                    Paragraph p98 = new Paragraph();
                    p98.Add(new Chunk(headtext2, 30f, 0));
                    chk2.AddElement(p98);
                    chk2.HorizontalAlignment = 1;
                    chk2.Colspan = 1;
                    tablepf.AddCell(chk2);
                }
                else
                {
                    PdfPCell chk2 = new PdfPCell();
                    chk2.HorizontalAlignment = 1;
                    chk2.Colspan = 1;
                    tablepf.AddCell(chk2);

                }

                tablepf.AddCell(cellemp1);

                tablepf.AddCell(cellspace);
                tablepf.AddCell(cellspace);
                tablepf.AddCell(cellspace);

                PdfPCell cellpfgender = new PdfPCell(new Phrase("5) GENDER  ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                cellpfgender.HorizontalAlignment = 0;
                cellpfgender.Colspan = 3;
                cellpfgender.Border = 0;
                tablepf.AddCell(cellpfgender);





                PdfPCell cellpfgender11 = new PdfPCell(new Phrase(Gender, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                cellpfgender11.HorizontalAlignment = 0;
                cellpfgender11.Colspan = 9;
                cellpfgender11.Border = 0;
                tablepf.AddCell(cellpfgender11);

                tablepf.AddCell(cellspace);
                tablepf.AddCell(cellspace);



                PdfPCell cellpfmobile = new PdfPCell(new Phrase("6) MOBILE NUMBER ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                cellpfmobile.HorizontalAlignment = 0;
                cellpfmobile.Colspan = 3;
                cellpfmobile.Border = 0;
                tablepf.AddCell(cellpfmobile);



                PdfPCell cellpfmobile1 = new PdfPCell(new Phrase(contactno, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                cellpfmobile1.HorizontalAlignment = 0;
                cellpfmobile1.Colspan = 3;
                cellpfmobile1.Border = 0;
                tablepf.AddCell(cellpfmobile1);

                tablepf.AddCell(cellspace);
                tablepf.AddCell(cellspace);

                PdfPCell cellpfemail = new PdfPCell(new Phrase("7) EMAIL ID (IF ANY)  ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                cellpfemail.HorizontalAlignment = 0;
                cellpfemail.Colspan = 3;
                cellpfemail.Border = 0;
                tablepf.AddCell(cellpfemail);



                PdfPCell cellpfemail1 = new PdfPCell(new Phrase(email, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                cellpfemail1.HorizontalAlignment = 0;
                cellpfemail1.Colspan = 3;
                cellpfemail1.Border = 0;
                tablepf.AddCell(cellpfemail1);


                tablepf.AddCell(cellspace);
                tablepf.AddCell(cellspace);

                PdfPCell cellpf1 = new PdfPCell(new Phrase("8)	WHETHER EARLIER A MEMBER OF THE EMPLOYEES’ PROVIDENT FUND SCHEME, 1952	? ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpf1.HorizontalAlignment = 0;
                cellpf1.Colspan = 6;
                cellpf1.Border = 0;
                tablepf.AddCell(cellpf1);

                tablepf.AddCell(cellspace);
                tablepf.AddCell(cellspace);

                PdfPCell cellPleaseTick = new PdfPCell(new Phrase("(PLEASE TICK)", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                cellPleaseTick.HorizontalAlignment = 1;
                cellPleaseTick.Colspan = 2;
                cellPleaseTick.Border = 0;
                cellPleaseTick.PaddingLeft = 50;
                tablepf.AddCell(cellPleaseTick);

                PdfPCell cellpfYES = new PdfPCell(new Phrase("YES", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                cellpfYES.HorizontalAlignment = 1;
                cellpfYES.Colspan = 1;
                tablepf.AddCell(cellpfYES);

                PdfPCell cellpfNO = new PdfPCell(new Phrase("NO", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                cellpfNO.HorizontalAlignment = 1;
                cellpfNO.Colspan = 1;
                tablepf.AddCell(cellpfNO);


                PdfPCell cellemp2 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                cellemp2.HorizontalAlignment = 1;
                cellemp2.Colspan = 2;
                cellemp2.Border = 0;
                tablepf.AddCell(cellemp2);



                tablepf.AddCell(cellspace);
                tablepf.AddCell(cellspace);


                PdfPCell cellpf2 = new PdfPCell(new Phrase("9)	WHETHER EARLIER  A MEMBER OF THE EMPLOYEES’ PENSION SCHEME, 1995 ? ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpf2.HorizontalAlignment = 0;
                cellpf2.Colspan = 6;
                cellpf2.Border = 0;
                tablepf.AddCell(cellpf2);

                tablepf.AddCell(cellspace);
                tablepf.AddCell(cellspace);

                PdfPCell cellPleaseTick1 = new PdfPCell(new Phrase("(PLEASE TICK)", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                cellPleaseTick1.HorizontalAlignment = 1;
                cellPleaseTick1.Colspan = 2;
                cellPleaseTick1.Border = 0;
                cellPleaseTick1.PaddingLeft = 50;
                tablepf.AddCell(cellPleaseTick1);

                PdfPCell cellpfYES1 = new PdfPCell(new Phrase("YES", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                cellpfYES1.HorizontalAlignment = 1;
                cellpfYES1.Colspan = 1;
                tablepf.AddCell(cellpfYES1);

                PdfPCell cellpfNO1 = new PdfPCell(new Phrase("NO", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                cellpfNO1.HorizontalAlignment = 1;
                cellpfNO1.Colspan = 1;
                tablepf.AddCell(cellpfNO1);

                tablepf.AddCell(cellemp2);

                tablepf.AddCell(cellspace);
                tablepf.AddCell(cellspace);
                tablepf.AddCell(cellspace);
                tablepf.AddCell(cellspace);

                PdfPCell cellpf3 = new PdfPCell(new Phrase("IF RESPONSE TO ANY OR BOTH OF (8) & (9) ABOVE IS YES, THEN MANDATORILY FILL UP THE PREVIOUS EMPLOYMENT DETAILS AT (10, 11 & 12): ", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellpf3.HorizontalAlignment = 1;
                cellpf3.Colspan = 6;
                cellpf3.Border = 0;
                cellpf3.SetLeading(0f, 1.3f);
                tablepf.AddCell(cellpf3);


                tablepf.AddCell(cellspace);
                tablepf.AddCell(cellspace);
                tablepf.AddCell(cellspace);

                document.Add(tablepf);



                PdfPTable tblepf = new PdfPTable(5);
                tblepf.TotalWidth = 550f;
                tblepf.LockedWidth = true;
                float[] width1s = new float[] { 2f, 2f, 3f, 2f, 2f, };
                tblepf.SetWidths(width1s);

                PdfPCell cellspaces1 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(Fontstyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspaces1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspaces1.Colspan = 6;
                cellspaces1.Border = 0;
                cellspaces1.PaddingTop = -5;

                PdfPCell cellpfdetails = new PdfPCell(new Phrase("A. PREVIOUS EMPLOYMENT DETAILS  ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                cellpfdetails.HorizontalAlignment = 0;
                cellpfdetails.Colspan = 5;
                cellpfdetails.Border = 0;
                cellpfdetails.BackgroundColor = color;
                cellpfdetails.PaddingTop = 5;
                cellpfdetails.PaddingBottom = 5;
                tblepf.AddCell(cellpfdetails);

                tblepf.AddCell(cellspace);
                tblepf.AddCell(cellspace);


                PdfPCell cellpfaccount = new PdfPCell(new Phrase("10)	THE DETAILS OF THE UNIVERSAL ACCOUNT NUMBER (UAN) OR PREVIOUS PF MEMBER ID: ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfaccount.HorizontalAlignment = 0;
                cellpfaccount.Colspan = 5;
                cellpfaccount.Border = 0;
                tblepf.AddCell(cellpfaccount);

                tblepf.AddCell(cellspace);
                tblepf.AddCell(cellspace);

                PdfPCell cellpfuae = new PdfPCell(new Phrase("UAN OR PREVIOUS PF MEMBER ID", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellpfuae.HorizontalAlignment = 0;
                cellpfuae.Colspan = 2;
                cellpfuae.Border = 0;
                tblepf.AddCell(cellpfuae);

                PdfPCell cellpfuaem = new PdfPCell(new Phrase(UANNumber, FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellpfuaem.HorizontalAlignment = 0;
                cellpfuaem.Colspan = 3;
                cellpfuaem.Border = 0;
                tblepf.AddCell(cellpfuaem);

                tblepf.AddCell(cellspace);
                tblepf.AddCell(cellspace);

                PdfPCell cellpfREGION = new PdfPCell(new Phrase("REGION CODE", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfREGION.HorizontalAlignment = 1;
                cellpfREGION.Colspan = 1;
                cellpfREGION.PaddingBottom = 5;
                cellpfREGION.PaddingTop = 5;
                tblepf.AddCell(cellpfREGION);

                PdfPCell cellpfOFFICE = new PdfPCell(new Phrase("OFFICE CODE", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfOFFICE.HorizontalAlignment = 1;
                cellpfOFFICE.Colspan = 1;
                cellpfOFFICE.PaddingBottom = 5;
                cellpfOFFICE.PaddingTop = 5;
                tblepf.AddCell(cellpfOFFICE);


                PdfPCell cellpfuESTABLISHMENT = new PdfPCell(new Phrase("ESTABLISHMENT ID", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfuESTABLISHMENT.HorizontalAlignment = 1;
                cellpfuESTABLISHMENT.Colspan = 1;
                cellpfuESTABLISHMENT.PaddingBottom = 5;
                cellpfuESTABLISHMENT.PaddingTop = 5;
                tblepf.AddCell(cellpfuESTABLISHMENT);

                PdfPCell cellpfEXTENSION = new PdfPCell(new Phrase("EXTENSION", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfEXTENSION.HorizontalAlignment = 1;
                cellpfEXTENSION.Colspan = 1;
                cellpfEXTENSION.PaddingBottom = 5;
                cellpfEXTENSION.PaddingTop = 5;
                tblepf.AddCell(cellpfEXTENSION);

                PdfPCell cellpfACCOUNT = new PdfPCell(new Phrase("ACCOUNT NUMBER", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfACCOUNT.HorizontalAlignment = 1;
                cellpfACCOUNT.Colspan = 1;
                cellpfACCOUNT.PaddingBottom = 5;
                cellpfACCOUNT.PaddingTop = 5;
                tblepf.AddCell(cellpfACCOUNT);

                PdfPCell cellpfREGION1 = new PdfPCell(new Phrase(PrevRegionCode + "\n", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellpfREGION1.HorizontalAlignment = 1;
                cellpfREGION1.Colspan = 1;
                cellpfREGION1.PaddingTop = 5;
                cellpfREGION1.PaddingBottom = 5;
                tblepf.AddCell(cellpfREGION1);

                PdfPCell cellpfOFFICE1 = new PdfPCell(new Phrase(PrevEmployerCode, FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellpfOFFICE1.HorizontalAlignment = 1;
                cellpfOFFICE1.Colspan = 1;
                cellpfOFFICE1.PaddingTop = 5;
                cellpfOFFICE1.PaddingBottom = 5;
                tblepf.AddCell(cellpfOFFICE1);

                PdfPCell cellpfuESTABLISHMENT1 = new PdfPCell(new Phrase(EstablishmentID, FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellpfuESTABLISHMENT1.HorizontalAlignment = 0;
                cellpfuESTABLISHMENT1.Colspan = 1;
                cellpfuESTABLISHMENT1.PaddingTop = 5;
                cellpfuESTABLISHMENT1.PaddingBottom = 5;
                tblepf.AddCell(cellpfuESTABLISHMENT1);

                PdfPCell cellpfEXTENSION1 = new PdfPCell(new Phrase(PrevExtension, FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellpfEXTENSION1.HorizontalAlignment = 1;
                cellpfEXTENSION1.Colspan = 1;
                cellpfEXTENSION1.PaddingTop = 5;
                cellpfEXTENSION1.PaddingBottom = 5;
                tblepf.AddCell(cellpfEXTENSION1);

                PdfPCell cellpfACCOUNT1 = new PdfPCell(new Phrase(PrevPFNo, FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellpfACCOUNT1.HorizontalAlignment = 0;
                cellpfACCOUNT1.Colspan = 1;
                cellpfACCOUNT1.PaddingTop = 5;
                cellpfACCOUNT1.PaddingBottom = 5;
                tblepf.AddCell(cellpfACCOUNT1);

                #region for old code prev employment

                //if (dtPrevempl.Rows.Count > 0)
                //{
                //    for (int i = 0; i < dtPrevempl.Rows.Count;i++ )
                //    {
                //        Regioncode = dtPrevempl.Rows[i]["RegionCode"].ToString();
                //        Officecode = dtPrevempl.Rows[i]["EmployerCode"].ToString();
                //        Extension = dtPrevempl.Rows[i]["Extension"].ToString();




                //        PdfPCell cellpfREGION1 = new PdfPCell(new Phrase(Regioncode + "\n", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                //        cellpfREGION1.HorizontalAlignment = 1;
                //        cellpfREGION1.Colspan = 1;
                //        cellpfREGION1.PaddingTop = 5;
                //        cellpfREGION1.PaddingBottom = 5;
                //        tblepf.AddCell(cellpfREGION1);

                //        PdfPCell cellpfOFFICE1 = new PdfPCell(new Phrase(Officecode, FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                //        cellpfOFFICE1.HorizontalAlignment = 1;
                //        cellpfOFFICE1.Colspan = 1;
                //        cellpfOFFICE1.PaddingTop = 5;
                //        cellpfOFFICE1.PaddingBottom = 5;
                //        tblepf.AddCell(cellpfOFFICE1);


                //        PdfPCell cellpfuESTABLISHMENT1 = new PdfPCell(new Phrase(EstablishmentID, FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                //        cellpfuESTABLISHMENT1.HorizontalAlignment = 0;
                //        cellpfuESTABLISHMENT1.Colspan = 1;
                //        cellpfuESTABLISHMENT1.PaddingTop = 5;
                //        cellpfuESTABLISHMENT1.PaddingBottom = 5;
                //        tblepf.AddCell(cellpfuESTABLISHMENT1);


                //        PdfPCell cellpfEXTENSION1 = new PdfPCell(new Phrase(Extension, FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                //        cellpfEXTENSION1.HorizontalAlignment = 1;
                //        cellpfEXTENSION1.Colspan = 1;
                //        cellpfEXTENSION1.PaddingTop = 5;
                //        cellpfEXTENSION1.PaddingBottom = 5;
                //        tblepf.AddCell(cellpfEXTENSION1);

                //        PdfPCell cellpfACCOUNT1 = new PdfPCell(new Phrase(AccNo, FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                //        cellpfACCOUNT1.HorizontalAlignment = 0;
                //        cellpfACCOUNT1.Colspan = 1;
                //        cellpfACCOUNT1.PaddingTop = 5;
                //        cellpfACCOUNT1.PaddingBottom = 5;
                //        tblepf.AddCell(cellpfACCOUNT1);
                //    }
                //}

                #endregion for old code prev employment

                tblepf.AddCell(cellspace);
                tblepf.AddCell(cellspace);

                PdfPCell cellpf1dateexit = new PdfPCell(new Phrase("11)	DATE OF EXIT FOR PREVIOUS MEMBER ID (DD/MM/YYYY)", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpf1dateexit.HorizontalAlignment = 0;
                cellpf1dateexit.Colspan = 3;
                cellpf1dateexit.Border = 0;
                tblepf.AddCell(cellpf1dateexit);

                PdfPCell cellpf1dateexitval = new PdfPCell(new Phrase(PrevDtofLeave, FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellpf1dateexitval.HorizontalAlignment = 0;
                cellpf1dateexitval.Colspan = 2;
                cellpf1dateexitval.Border = 0;
                cellpf1dateexitval.PaddingLeft = -20;
                tblepf.AddCell(cellpf1dateexitval);

                tblepf.AddCell(cellspace);

                PdfPCell cellpfSCHEME = new PdfPCell(new Phrase("12)	(A) IF SCHEME CERTIFICATE ISSUED FOR PREVIOUS EMPLOYMENT, THEN SCHEME CERTIFICATE NUMBER:___________", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfSCHEME.HorizontalAlignment = 0;
                cellpfSCHEME.Colspan = 5;
                cellpfSCHEME.Border = 0;
                tblepf.AddCell(cellpfSCHEME);

                tblepf.AddCell(cellspace);

                PdfPCell cellpfPENSION = new PdfPCell(new Phrase("      (B) IF PENSION PAYMENT ORDER (PPO) ISSUED FOR PREVIOUS EMPLOYMENT, THEN PPO NUMBER:______________", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfPENSION.HorizontalAlignment = 0;
                cellpfPENSION.Colspan = 5;
                cellpfPENSION.Border = 0;
                tblepf.AddCell(cellpfPENSION);

                tblepf.AddCell(cellspace);
                tblepf.AddCell(cellspace);
                tblepf.AddCell(cellspace);

                PdfPCell cellpfPENSION1 = new PdfPCell(new Phrase("B. OTHER DETAILS", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                cellpfPENSION1.HorizontalAlignment = 0;
                cellpfPENSION1.Colspan = 5;
                cellpfPENSION1.Border = 0;
                cellpfPENSION1.PaddingTop = 5;
                cellpfPENSION1.PaddingBottom = 5;
                cellpfPENSION1.BackgroundColor = color;
                tblepf.AddCell(cellpfPENSION1);

                tblepf.AddCell(cellspace);
                tblepf.AddCell(cellspace);
                tblepf.AddCell(cellspace);

                PdfPCell cellpfINTERNATIONAL = new PdfPCell(new Phrase("13) INTERNATIONAL WORKER ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfINTERNATIONAL.HorizontalAlignment = 0;
                cellpfINTERNATIONAL.Colspan = 2;
                cellpfINTERNATIONAL.Border = 0;
                tblepf.AddCell(cellpfINTERNATIONAL);

                PdfPCell cellpfYESL = new PdfPCell(new Phrase("YES", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfYESL.HorizontalAlignment = 1;
                cellpfYESL.Colspan = 1;
                tblepf.AddCell(cellpfYESL);

                PdfPCell cellpfNO3 = new PdfPCell(new Phrase("NO", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfNO3.HorizontalAlignment = 1;
                cellpfNO3.Colspan = 1;
                tblepf.AddCell(cellpfNO3);

                PdfPCell cellpfNOemp = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfNOemp.HorizontalAlignment = 0;
                cellpfNOemp.Colspan = 1;
                cellpfNOemp.Border = 0;
                tblepf.AddCell(cellpfNOemp);

                PdfPCell cellpfYES3 = new PdfPCell(new Phrase("      (PLEASE TICK)", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfYES3.HorizontalAlignment = 0;
                cellpfYES3.Colspan = 2;
                cellpfYES3.Border = 0;
                tblepf.AddCell(cellpfYES3);

                PdfPCell cellpfYESL11 = new PdfPCell(new Phrase("\n", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellpfYESL11.HorizontalAlignment = 1;
                cellpfYESL11.Colspan = 1;
                tblepf.AddCell(cellpfYESL11);

                PdfPCell cellpfNO4 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellpfNO4.HorizontalAlignment = 1;
                cellpfNO4.Colspan = 1;
                tblepf.AddCell(cellpfNO4);

                tblepf.AddCell(cellpfNOemp);

                tblepf.AddCell(cellspace);
                tblepf.AddCell(cellspace);

                PdfPCell cellpfREPLY = new PdfPCell(new Phrase("IF THE REPLY TO (13) ABOVE IS YES, THEN ENTER THE DETAILS IN 13(A), 13(B) & 13(C): ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                cellpfREPLY.HorizontalAlignment = 0;
                cellpfREPLY.Colspan = 5;
                cellpfREPLY.Border = 0;
                tblepf.AddCell(cellpfREPLY);

                tblepf.AddCell(cellspace);

                PdfPCell cellpfname1a = new PdfPCell(new Phrase("       13(A) COUNTRY OF ORIGIN  (Please Tick)", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfname1a.HorizontalAlignment = 0;
                cellpfname1a.Colspan = 5;
                cellpfname1a.Border = 0;
                tblepf.AddCell(cellpfname1a);

                tblepf.AddCell(cellspace);
                tblepf.AddCell(cellspace);

                PdfPCell cellpfINDIA = new PdfPCell(new Phrase("INDIA", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfINDIA.HorizontalAlignment = 1;
                cellpfINDIA.Colspan = 1;
                tblepf.AddCell(cellpfINDIA);

                PdfPCell cellpfOTHER = new PdfPCell(new Phrase("OTHER THAN INDIA (IF YES, PLEASE MENTION NAME OF THE COUNTRY)", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfOTHER.HorizontalAlignment = 1;
                cellpfOTHER.Colspan = 4;
                tblepf.AddCell(cellpfOTHER);

                PdfPCell cellpfINDIAe = new PdfPCell(new Phrase("\n\n", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellpfINDIAe.HorizontalAlignment = 1;
                cellpfINDIAe.Colspan = 1;
                tblepf.AddCell(cellpfINDIAe);

                PdfPCell cellpfOTHERe = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellpfOTHERe.HorizontalAlignment = 1;
                cellpfOTHERe.Colspan = 4;
                tblepf.AddCell(cellpfOTHERe);

                tblepf.AddCell(cellspace);
                tblepf.AddCell(cellspace);

                PdfPCell cellpfnameB = new PdfPCell(new Phrase("       13(B) PASSPORT NUMBER         ______________________________", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfnameB.HorizontalAlignment = 0;
                cellpfnameB.Colspan = 5;
                cellpfnameB.Border = 0;
                tblepf.AddCell(cellpfnameB);

                tblepf.AddCell(cellspace);

                PdfPCell cellpfnameB1 = new PdfPCell(new Phrase("       13(C) PASSPORT VALID FROM  ........................... TO ..............................", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfnameB1.HorizontalAlignment = 0;
                cellpfnameB1.Colspan = 5;
                cellpfnameB1.Border = 0;
                tblepf.AddCell(cellpfnameB1);

                tblepf.AddCell(cellspace);

                PdfPCell cellpfnamec = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                cellpfnamec.HorizontalAlignment = 1;
                cellpfnamec.Colspan = 5;
                cellpfnamec.Border = 0;
                tblepf.AddCell(cellpfnamec);

                document.Add(tblepf);

                PdfPTable tblepf1 = new PdfPTable(8);
                tblepf1.TotalWidth = 550f;
                tblepf1.LockedWidth = true;
                float[] width1s1 = new float[] { 2.2f, 1.5f, 1.5f, 2.3f, 2f, 2.3f, 1.7f, 2.8f };
                tblepf1.SetWidths(width1s1);

                PdfPCell cellpfEDUCATIONAL = new PdfPCell(new Phrase("14)	EDUCATIONAL QUALIFICATION (PLEASE TICK)", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfEDUCATIONAL.HorizontalAlignment = 0;
                cellpfEDUCATIONAL.Colspan = 8;
                cellpfEDUCATIONAL.Border = 0;
                tblepf1.AddCell(cellpfEDUCATIONAL);

                PdfPCell cellspaces2 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(Fontstyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspaces2.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspaces2.Colspan = 6;
                cellspaces2.Border = 0;
                cellspaces2.PaddingTop = -5;

                tblepf1.AddCell(cellspace);
                tblepf1.AddCell(cellspace);
                tblepf1.AddCell(cellspace);
                tblepf1.AddCell(cellspace);

                PdfPCell cellpfemptyd = new PdfPCell(new Phrase("ILLITERATE", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfemptyd.HorizontalAlignment = 1;
                cellpfemptyd.Colspan = 1;
                tblepf1.AddCell(cellpfemptyd);

                PdfPCell cellpfemptyc = new PdfPCell(new Phrase("NON-MATRIC", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfemptyc.HorizontalAlignment = 1;
                cellpfemptyc.Colspan = 1;
                tblepf1.AddCell(cellpfemptyc);

                PdfPCell cellpfemptyb = new PdfPCell(new Phrase("MATRIC", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfemptyb.HorizontalAlignment = 1;
                cellpfemptyb.Colspan = 1;
                tblepf1.AddCell(cellpfemptyb);

                PdfPCell cellpfemptya = new PdfPCell(new Phrase("SENIOR SECONDARY", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfemptya.HorizontalAlignment = 1;
                cellpfemptya.Colspan = 1;
                tblepf1.AddCell(cellpfemptya);

                PdfPCell cellpfempty9 = new PdfPCell(new Phrase("GRADUATE", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfempty9.HorizontalAlignment = 1;
                cellpfempty9.Colspan = 1;
                tblepf1.AddCell(cellpfempty9);

                PdfPCell cellpfempty8 = new PdfPCell(new Phrase("POST GRADUATE", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfempty8.HorizontalAlignment = 1;
                cellpfempty8.Colspan = 1;
                tblepf1.AddCell(cellpfempty8);

                PdfPCell cellpfempty7 = new PdfPCell(new Phrase("DOCTOR", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfempty7.HorizontalAlignment = 1;
                cellpfempty7.Colspan = 1;
                tblepf1.AddCell(cellpfempty7);

                PdfPCell cellpfempty61 = new PdfPCell(new Phrase("TECHNICAL/ PROFESSIONAL", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfempty61.HorizontalAlignment = 1;
                cellpfempty61.Colspan = 1;
                tblepf1.AddCell(cellpfempty61);

                iTextSharp.text.Image headtext3 = iTextSharp.text.Image.GetInstance(imagepathpf1 + "/black-check.png");
                headtext3.ScaleAbsolute(10f, 0);


                if (Qualification == "ILLITERATE")
                {

                    PdfPCell cellpfempty51 = new PdfPCell();
                    cellpfempty51.AddElement(headtext3);
                    cellpfempty51.HorizontalAlignment = 0;
                    cellpfempty51.Colspan = 1;
                    cellpfempty51.PaddingTop = 5;
                    cellpfempty51.PaddingBottom = 5;
                    tblepf1.AddCell(cellpfempty51);
                }
                else
                {

                    PdfPCell cellpfempty51 = new PdfPCell();
                    cellpfempty51.HorizontalAlignment = 0;
                    cellpfempty51.Colspan = 1;
                    cellpfempty51.PaddingTop = 5;
                    cellpfempty51.PaddingBottom = 5;
                    tblepf1.AddCell(cellpfempty51);

                }


                if (Qualification == "NON-MATRIC")
                {

                    PdfPCell cellpfempty6 = new PdfPCell();
                    cellpfempty6.AddElement(headtext3);
                    cellpfempty6.HorizontalAlignment = 0;
                    cellpfempty6.Colspan = 1;
                    cellpfempty6.PaddingTop = 5;
                    cellpfempty6.PaddingBottom = 5;
                    tblepf1.AddCell(cellpfempty6);
                }
                else
                {

                    PdfPCell cellpfempty6 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfempty6.HorizontalAlignment = 0;
                    cellpfempty6.Colspan = 1;
                    cellpfempty6.PaddingTop = 5;
                    cellpfempty6.PaddingBottom = 5;
                    tblepf1.AddCell(cellpfempty6);

                }


                if (Qualification == "MATRIC")
                {


                    PdfPCell cellpfempty5 = new PdfPCell();
                    cellpfempty5.AddElement(headtext3);
                    cellpfempty5.HorizontalAlignment = 0;
                    cellpfempty5.Colspan = 1;
                    cellpfempty5.PaddingLeft = 20;
                    cellpfempty5.PaddingTop = 5;
                    cellpfempty5.PaddingBottom = 5;
                    tblepf1.AddCell(cellpfempty5);
                }
                else
                {

                    PdfPCell cellpfempty5 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfempty5.HorizontalAlignment = 0;
                    cellpfempty5.Colspan = 1;
                    cellpfempty5.PaddingTop = 5;
                    cellpfempty5.PaddingBottom = 5;
                    tblepf1.AddCell(cellpfempty5);


                }


                if (Qualification == "SENIOR SECONDARY")
                {


                    PdfPCell cellpfempty4 = new PdfPCell();
                    cellpfempty4.AddElement(headtext3);
                    cellpfempty4.HorizontalAlignment = 0;
                    cellpfempty4.Colspan = 1;
                    cellpfempty4.PaddingLeft = 30;
                    cellpfempty4.PaddingTop = 5;
                    cellpfempty4.PaddingBottom = 5;
                    tblepf1.AddCell(cellpfempty4);
                }
                else
                {

                    PdfPCell cellpfempty4 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfempty4.HorizontalAlignment = 0;
                    cellpfempty4.Colspan = 1;
                    cellpfempty4.PaddingTop = 5;
                    cellpfempty4.PaddingBottom = 5;
                    tblepf1.AddCell(cellpfempty4);

                }


                if (Qualification == "GRADUATE")
                {

                    PdfPCell cellpfempty2 = new PdfPCell();
                    cellpfempty2.AddElement(headtext3);
                    cellpfempty2.HorizontalAlignment = 0;
                    cellpfempty2.Colspan = 1;
                    cellpfempty2.PaddingTop = 5;
                    cellpfempty2.PaddingBottom = 5;
                    cellpfempty2.PaddingLeft = 20;
                    tblepf1.AddCell(cellpfempty2);


                }
                else
                {

                    PdfPCell cellpfempty2 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfempty2.HorizontalAlignment = 0;
                    cellpfempty2.Colspan = 1;
                    cellpfempty2.PaddingTop = 5;
                    cellpfempty2.PaddingBottom = 5;
                    tblepf1.AddCell(cellpfempty2);



                }


                if (Qualification == "POST GRADUATE")
                {


                    PdfPCell cellpfempty3 = new PdfPCell();
                    cellpfempty3.AddElement(headtext3);
                    cellpfempty3.HorizontalAlignment = 0;
                    cellpfempty3.Colspan = 1;
                    cellpfempty3.PaddingLeft = 20;
                    cellpfempty3.PaddingTop = 5;
                    cellpfempty3.PaddingBottom = 5;
                    tblepf1.AddCell(cellpfempty3);
                }
                else
                {

                    PdfPCell cellpfempty3 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfempty3.HorizontalAlignment = 0;
                    cellpfempty3.Colspan = 1;
                    cellpfempty3.PaddingTop = 5;
                    cellpfempty3.PaddingBottom = 5;
                    tblepf1.AddCell(cellpfempty3);

                }

                if (Qualification == "DOCTOR")
                {


                    PdfPCell cellpfempty21 = new PdfPCell();
                    cellpfempty21.AddElement(headtext3);
                    cellpfempty21.HorizontalAlignment = 0;
                    cellpfempty21.Colspan = 1;
                    cellpfempty21.PaddingLeft = 20;
                    cellpfempty21.PaddingTop = 5;
                    cellpfempty21.PaddingBottom = 5;
                    tblepf1.AddCell(cellpfempty21);

                }
                else
                {

                    PdfPCell cellpfempty21 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfempty21.HorizontalAlignment = 0;
                    cellpfempty21.Colspan = 1;
                    cellpfempty21.PaddingTop = 5;
                    cellpfempty21.PaddingBottom = 5;
                    tblepf1.AddCell(cellpfempty21);

                }


                if (Qualification == "TECHNICAL/PROFESSIONAL")
                {


                    PdfPCell cellpfempty0 = new PdfPCell();
                    cellpfempty0.AddElement(headtext3);
                    cellpfempty0.HorizontalAlignment = 0;
                    cellpfempty0.Colspan = 1;
                    cellpfempty0.PaddingLeft = 40;
                    cellpfempty0.PaddingTop = 5;
                    cellpfempty0.PaddingBottom = 5;
                    tblepf1.AddCell(cellpfempty0);
                }
                else
                {

                    PdfPCell cellpfempty0 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfempty0.HorizontalAlignment = 0;
                    cellpfempty0.Colspan = 1;
                    cellpfempty0.PaddingTop = 5;
                    cellpfempty0.PaddingBottom = 5;
                    tblepf1.AddCell(cellpfempty0);

                }


                document.Add(tblepf1);


                document.NewPage();

                PdfPTable tblepf2 = new PdfPTable(8);
                tblepf2.TotalWidth = 550f;
                tblepf2.LockedWidth = true;
                float[] width1s2 = new float[] { 2.2f, 1.5f, 1.5f, 2.3f, 2f, 2.3f, 1.7f, 2.8f };
                tblepf2.SetWidths(width1s2);


                PdfPCell cellpfmarital = new PdfPCell(new Phrase("15)	MARITAL STATUS \n       (PLEASE TICK) ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfmarital.HorizontalAlignment = 0;
                cellpfmarital.Colspan = 2;
                cellpfmarital.Border = 0;
                cellpfmarital.SetLeading(0f, 1.2f);
                tblepf2.AddCell(cellpfmarital);

                PdfPCell cellMarried = new PdfPCell(new Phrase("MARRIED ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellMarried.HorizontalAlignment = 1;
                cellMarried.Colspan = 1;
                tblepf2.AddCell(cellMarried);

                PdfPCell cellUnMarried = new PdfPCell(new Phrase("UNMARRIED ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellUnMarried.HorizontalAlignment = 1;
                cellUnMarried.Colspan = 2;
                tblepf2.AddCell(cellUnMarried);

                PdfPCell cellWidower = new PdfPCell(new Phrase("WIDOW / WIDOWER ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellWidower.HorizontalAlignment = 1;
                cellWidower.Colspan = 2;
                tblepf2.AddCell(cellWidower);

                PdfPCell cellDivorcee = new PdfPCell(new Phrase("DIVORCEE ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellDivorcee.HorizontalAlignment = 1;
                cellDivorcee.Colspan = 1;
                tblepf2.AddCell(cellDivorcee);

                PdfPCell cellpfmaritalempty = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfmaritalempty.HorizontalAlignment = 0;
                cellpfmaritalempty.Colspan = 2;
                cellpfmaritalempty.Border = 0;
                tblepf2.AddCell(cellpfmaritalempty);

                if (maritalstatus == "Married")
                {

                    PdfPCell cellpfempty51 = new PdfPCell();
                    cellpfempty51.AddElement(headtext3);
                    cellpfempty51.HorizontalAlignment = 0;
                    cellpfempty51.Colspan = 1;
                    cellpfempty51.PaddingLeft = 25;
                    tblepf2.AddCell(cellpfempty51);
                }
                else
                {

                    PdfPCell cellpfempty51 = new PdfPCell();
                    cellpfempty51.HorizontalAlignment = 0;
                    cellpfempty51.Colspan = 1;
                    tblepf2.AddCell(cellpfempty51);

                }


                if (maritalstatus == "Single")
                {

                    PdfPCell cellpfempty6 = new PdfPCell();
                    cellpfempty6.AddElement(headtext3);
                    cellpfempty6.HorizontalAlignment = 0;
                    cellpfempty6.Colspan = 2;
                    cellpfempty6.PaddingLeft = 40;
                    tblepf2.AddCell(cellpfempty6);
                }
                else
                {

                    PdfPCell cellpfempty6 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfempty6.HorizontalAlignment = 0;
                    cellpfempty6.Colspan = 2;
                    tblepf2.AddCell(cellpfempty6);

                }


                if (maritalstatus == "Widower")
                {


                    PdfPCell cellpfempty5 = new PdfPCell();
                    cellpfempty5.AddElement(headtext3);
                    cellpfempty5.HorizontalAlignment = 0;
                    cellpfempty5.Colspan = 2;
                    cellpfempty5.PaddingLeft = 40;
                    tblepf2.AddCell(cellpfempty5);
                }
                else
                {

                    PdfPCell cellpfempty5 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfempty5.HorizontalAlignment = 0;
                    cellpfempty5.Colspan = 2;
                    tblepf2.AddCell(cellpfempty5);

                }


                if (maritalstatus == "Divorcee")
                {


                    PdfPCell cellpfempty4 = new PdfPCell();
                    cellpfempty4.AddElement(headtext3);
                    cellpfempty4.HorizontalAlignment = 0;
                    cellpfempty4.Colspan = 1;
                    cellpfempty4.PaddingLeft = 30;
                    tblepf2.AddCell(cellpfempty4);
                }
                else
                {

                    PdfPCell cellpfempty4 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfempty4.HorizontalAlignment = 0;
                    cellpfempty4.Colspan = 1;
                    tblepf2.AddCell(cellpfempty4);
                }


                tblepf2.AddCell(cellspace);
                tblepf2.AddCell(cellspace);

                PdfPCell cellpfabled = new PdfPCell(new Phrase("16)	SPECIALLY ABLED  ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfabled.HorizontalAlignment = 0;
                cellpfabled.Colspan = 2;
                cellpfabled.Border = 0;
                tblepf2.AddCell(cellpfabled);

                PdfPCell cellpfabled1 = new PdfPCell(new Phrase(SpeciallyAbled, FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellpfabled1.HorizontalAlignment = 0;
                cellpfabled1.Colspan = 2;
                cellpfabled1.Border = 0;
                tblepf2.AddCell(cellpfabled1);

                //PdfPCell cellpfCATEGORY1 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                //cellpfCATEGORY1.HorizontalAlignment = 0;
                //cellpfCATEGORY1.Colspan = 1;
                //cellpfCATEGORY1.Border = 0;
                //tblepf2.AddCell(cellpfCATEGORY1);

                PdfPCell cellpfCATEGORY = new PdfPCell(new Phrase("CATEGORY", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfCATEGORY.HorizontalAlignment = 1;
                cellpfCATEGORY.Colspan = 2;
                cellpfCATEGORY.Border = 0;
                tblepf2.AddCell(cellpfCATEGORY);


                PdfPCell cellpfCATEGORY1o = new PdfPCell(new Phrase(Category, FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellpfCATEGORY1o.HorizontalAlignment = 0;
                cellpfCATEGORY1o.Colspan = 2;
                cellpfCATEGORY1o.Border = 0;
                tblepf2.AddCell(cellpfCATEGORY1o);

                tblepf2.AddCell(cellspace);
                tblepf2.AddCell(cellspace);

                //PdfPCell cellpfCATEGORY1q = new PdfPCell(new Phrase("LOCOMOTIVE", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                //cellpfCATEGORY1q.HorizontalAlignment = 1;
                //cellpfCATEGORY1q.Colspan = 2;
                //tblepf1.AddCell(cellpfCATEGORY1q);

                //PdfPCell cellpfCATEGORY1r = new PdfPCell(new Phrase("VISUAL", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                //cellpfCATEGORY1r.HorizontalAlignment = 1;
                //cellpfCATEGORY1r.Colspan = 2;
                //tblepf1.AddCell(cellpfCATEGORY1r);

                //PdfPCell cellpfCATEGORY1u = new PdfPCell(new Phrase("HEARING", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                //cellpfCATEGORY1u.HorizontalAlignment = 1;
                //cellpfCATEGORY1u.Colspan = 2;
                //tblepf1.AddCell(cellpfCATEGORY1u);

                //PdfPCell cellpfCATEGORY1o1 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                //cellpfCATEGORY1o1.HorizontalAlignment = 0;
                //cellpfCATEGORY1o1.Colspan = 2;
                //cellpfCATEGORY1o1.Border = 0;
                //tblepf1.AddCell(cellpfCATEGORY1o1);

                //PdfPCell cellpfCATEGORY1q1 = new PdfPCell(new Phrase("\n\n\n\n", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                //cellpfCATEGORY1q1.HorizontalAlignment = 1;
                //cellpfCATEGORY1q1.Colspan = 2;
                //tblepf1.AddCell(cellpfCATEGORY1q1);

                //PdfPCell cellpfCATEGORY1r1 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                //cellpfCATEGORY1r1.HorizontalAlignment = 1;
                //cellpfCATEGORY1r1.Colspan = 2;
                //tblepf1.AddCell(cellpfCATEGORY1r1);

                //PdfPCell cellpfCATEGORY1u1 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                //cellpfCATEGORY1u1.HorizontalAlignment = 1;
                //cellpfCATEGORY1u1.Colspan = 2;
                //tblepf1.AddCell(cellpfCATEGORY1u1);

                document.Add(tblepf2);

                PdfPTable tbliepf = new PdfPTable(5);
                tbliepf.TotalWidth = 550f;
                tbliepf.LockedWidth = true;
                float[] width21 = new float[] { 2f, 2f, 2f, 2f, 2f };
                tbliepf.SetWidths(width21);

                tbliepf.AddCell(cellspace);

                PdfPCell cellspaces21 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(Fontstyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspaces21.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspaces21.Colspan = 6;
                cellspaces21.PaddingTop = -5;

                PdfPCell cellpfKYC1 = new PdfPCell(new Phrase("17) KYC DETAILS   ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfKYC1.HorizontalAlignment = 0;
                cellpfKYC1.Colspan = 1;
                cellpfKYC1.Border = 0;
                tbliepf.AddCell(cellpfKYC1);

                PdfPCell cellpfKYC2 = new PdfPCell(new Phrase("KYC DOCUMENT TYPE", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfKYC2.HorizontalAlignment = 1;
                cellpfKYC2.Colspan = 1;
                cellpfKYC2.PaddingTop = 7;
                cellpfKYC2.PaddingBottom = 7;
                tbliepf.AddCell(cellpfKYC2);

                PdfPCell cellpfKYC3 = new PdfPCell(new Phrase("NAME AS ON KYC DOCUMENT", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfKYC3.HorizontalAlignment = 1;
                cellpfKYC3.Colspan = 1;
                cellpfKYC3.PaddingTop = 7;
                cellpfKYC3.PaddingBottom = 7;
                tbliepf.AddCell(cellpfKYC3);

                PdfPCell cellpfKYC4 = new PdfPCell(new Phrase("NUMBER", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfKYC4.HorizontalAlignment = 1;
                cellpfKYC4.Colspan = 1;
                cellpfKYC4.PaddingTop = 7;
                cellpfKYC4.PaddingBottom = 7;
                tbliepf.AddCell(cellpfKYC4);

                PdfPCell cellpfKYC = new PdfPCell(new Phrase("REMARKS, IF ANY", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfKYC.HorizontalAlignment = 1;
                cellpfKYC.Colspan = 1;
                cellpfKYC.PaddingTop = 7;
                cellpfKYC.PaddingBottom = 7;
                tbliepf.AddCell(cellpfKYC);

                PdfPCell cellpfBANK = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 2, Font.NORMAL, BaseColor.BLACK)));
                cellpfBANK.HorizontalAlignment = 1;
                cellpfBANK.Colspan = 1;
                cellpfBANK.Border = 0;
                tbliepf.AddCell(cellpfBANK);

                PdfPCell cellpfBANK4 = new PdfPCell(new Phrase("BANK ACCOUNT-1*", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfBANK4.HorizontalAlignment = 1;
                cellpfBANK4.Colspan = 1;
                cellpfBANK4.PaddingTop = 5;
                cellpfBANK4.PaddingBottom = 5;
                tbliepf.AddCell(cellpfBANK4);

                PdfPCell cellpfBANK3 = new PdfPCell(new Phrase(BankPassbookName, FontFactory.GetFont(Fontstyle, Fontsize - 1, Font.NORMAL, BaseColor.BLACK)));
                cellpfBANK3.HorizontalAlignment = 0;
                cellpfBANK3.Colspan = 1;
                cellpfBANK3.PaddingTop = 5;
                cellpfBANK3.PaddingBottom = 5;
                tbliepf.AddCell(cellpfBANK3);

                PdfPCell cellpfBANK2 = new PdfPCell(new Phrase(PassBookNo, FontFactory.GetFont(Fontstyle, Fontsize - 1, Font.NORMAL, BaseColor.BLACK)));
                cellpfBANK2.HorizontalAlignment = 0;
                cellpfBANK2.Colspan = 1;
                cellpfBANK2.PaddingTop = 5;
                cellpfBANK2.PaddingBottom = 5;
                tbliepf.AddCell(cellpfBANK2);

                PdfPCell cellpfBANK1 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize - 1, Font.NORMAL, BaseColor.BLACK)));
                cellpfBANK1.HorizontalAlignment = 0;
                cellpfBANK1.Colspan = 1;
                cellpfBANK1.PaddingTop = 5;
                cellpfBANK1.PaddingBottom = 5;
                tbliepf.AddCell(cellpfBANK1);

                PdfPCell cellpfAADHAAR = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 2, Font.NORMAL, BaseColor.BLACK)));
                cellpfAADHAAR.HorizontalAlignment = 0;
                cellpfAADHAAR.Colspan = 1;
                cellpfAADHAAR.Border = 0;
                cellpfAADHAAR.PaddingTop = 5;
                cellpfAADHAAR.PaddingBottom = 5;
                tbliepf.AddCell(cellpfAADHAAR);

                PdfPCell cellpfAADHAAR4 = new PdfPCell(new Phrase("NPR/AADHAAR", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfAADHAAR4.HorizontalAlignment = 1;
                cellpfAADHAAR4.Colspan = 1;
                cellpfAADHAAR4.PaddingTop = 5;
                cellpfAADHAAR4.PaddingBottom = 5;
                tbliepf.AddCell(cellpfAADHAAR4);

                PdfPCell cellpfAADHAAR3 = new PdfPCell(new Phrase(AadharCardName, FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfAADHAAR3.HorizontalAlignment = 0;
                cellpfAADHAAR3.Colspan = 1;
                cellpfAADHAAR3.PaddingTop = 5;
                cellpfAADHAAR3.PaddingBottom = 5;
                tbliepf.AddCell(cellpfAADHAAR3);

                PdfPCell cellpfAADHAAR2 = new PdfPCell(new Phrase(AadharCardNo, FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfAADHAAR2.HorizontalAlignment = 0;
                cellpfAADHAAR2.Colspan = 1;
                cellpfAADHAAR2.PaddingTop = 5;
                cellpfAADHAAR2.PaddingBottom = 5;
                tbliepf.AddCell(cellpfAADHAAR2);

                PdfPCell cellpfAADHAAR1 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfAADHAAR1.HorizontalAlignment = 0;
                cellpfAADHAAR1.Colspan = 1;
                cellpfAADHAAR1.PaddingTop = 5;
                cellpfAADHAAR1.PaddingBottom = 5;
                tbliepf.AddCell(cellpfAADHAAR1);

                PdfPCell cellpfPERMANENT5 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(Fontstyle, Fontsize + 2, Font.NORMAL, BaseColor.BLACK)));
                cellpfPERMANENT5.HorizontalAlignment = 0;
                cellpfPERMANENT5.Colspan = 1;
                cellpfPERMANENT5.Border = 0;
                cellpfPERMANENT5.PaddingTop = 5;
                cellpfPERMANENT5.PaddingBottom = 5;
                tbliepf.AddCell(cellpfPERMANENT5);

                PdfPCell cellpfPERMANENT4 = new PdfPCell(new Phrase("PERMANENT ACCOUNT NUMBER (PAN) ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfPERMANENT4.HorizontalAlignment = 1;
                cellpfPERMANENT4.Colspan = 1;
                cellpfPERMANENT4.PaddingTop = 5;
                cellpfPERMANENT4.PaddingBottom = 5;
                tbliepf.AddCell(cellpfPERMANENT4);

                PdfPCell cellpfPERMANENT3 = new PdfPCell(new Phrase(PanCardName, FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfPERMANENT3.HorizontalAlignment = 0;
                cellpfPERMANENT3.Colspan = 1;
                cellpfPERMANENT3.PaddingTop = 5;
                cellpfPERMANENT3.PaddingBottom = 5;
                tbliepf.AddCell(cellpfPERMANENT3);

                PdfPCell cellpfPERMANENT2 = new PdfPCell(new Phrase(PanCardNo, FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfPERMANENT2.HorizontalAlignment = 0;
                cellpfPERMANENT2.Colspan = 1;
                cellpfPERMANENT2.PaddingTop = 5;
                cellpfPERMANENT2.PaddingBottom = 5;
                tbliepf.AddCell(cellpfPERMANENT2);

                PdfPCell cellpfPERMANENT1 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfPERMANENT1.HorizontalAlignment = 0;
                cellpfPERMANENT1.Colspan = 1;
                cellpfPERMANENT1.PaddingTop = 5;
                cellpfPERMANENT1.PaddingBottom = 5;
                tbliepf.AddCell(cellpfPERMANENT1);

                PdfPCell cellpfKPASSPORT = new PdfPCell(new Phrase(" ", FontFactory.GetFont(Fontstyle, Fontsize + 2, Font.NORMAL, BaseColor.BLACK)));
                cellpfKPASSPORT.HorizontalAlignment = 0;
                cellpfKPASSPORT.Colspan = 1;
                cellpfKPASSPORT.Border = 0;
                cellpfKPASSPORT.PaddingTop = 5;
                cellpfKPASSPORT.PaddingBottom = 5;
                tbliepf.AddCell(cellpfKPASSPORT);

                PdfPCell cellpfKPASSPORT4 = new PdfPCell(new Phrase("PASSPORT", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfKPASSPORT4.HorizontalAlignment = 1;
                cellpfKPASSPORT4.Colspan = 1;
                cellpfKPASSPORT4.PaddingTop = 5;
                cellpfKPASSPORT4.PaddingBottom = 5;
                tbliepf.AddCell(cellpfKPASSPORT4);

                PdfPCell cellpfKPASSPORT3 = new PdfPCell(new Phrase(Othertextname, FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfKPASSPORT3.HorizontalAlignment = 0;
                cellpfKPASSPORT3.Colspan = 1;
                cellpfKPASSPORT3.PaddingTop = 5;
                cellpfKPASSPORT3.PaddingBottom = 5;
                tbliepf.AddCell(cellpfKPASSPORT3);

                PdfPCell cellpfKPASSPORT2 = new PdfPCell(new Phrase(OtherType, FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfKPASSPORT2.HorizontalAlignment = 0;
                cellpfKPASSPORT2.Colspan = 1;
                cellpfKPASSPORT2.PaddingTop = 5;
                cellpfKPASSPORT2.PaddingBottom = 5;
                tbliepf.AddCell(cellpfKPASSPORT2);

                PdfPCell cellpfKPASSPORT1 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfKPASSPORT1.HorizontalAlignment = 1;
                cellpfKPASSPORT1.Colspan = 1;
                cellpfKPASSPORT1.PaddingTop = 5;
                cellpfKPASSPORT1.PaddingBottom = 5;
                tbliepf.AddCell(cellpfKPASSPORT1);

                PdfPCell cellpfDRIVING = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 2, Font.NORMAL, BaseColor.BLACK)));
                cellpfDRIVING.HorizontalAlignment = 1;
                cellpfDRIVING.Colspan = 1;
                cellpfDRIVING.Border = 0;
                cellpfDRIVING.PaddingTop = 5;
                cellpfDRIVING.PaddingBottom = 5;
                tbliepf.AddCell(cellpfDRIVING);

                PdfPCell cellpfDRIVING4 = new PdfPCell(new Phrase("DRIVING LICENCE", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfDRIVING4.HorizontalAlignment = 1;
                cellpfDRIVING4.Colspan = 1;
                cellpfDRIVING4.PaddingTop = 5;
                cellpfDRIVING4.PaddingBottom = 5;
                tbliepf.AddCell(cellpfDRIVING4);

                PdfPCell cellpfDRIVING3 = new PdfPCell(new Phrase(drivingLicenseName, FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfDRIVING3.HorizontalAlignment = 0;
                cellpfDRIVING3.Colspan = 1;
                cellpfDRIVING3.PaddingTop = 5;
                cellpfDRIVING3.PaddingBottom = 5;
                tbliepf.AddCell(cellpfDRIVING3);

                PdfPCell cellpfDRIVING2 = new PdfPCell(new Phrase(DrivingLicenseNo, FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfDRIVING2.HorizontalAlignment = 0;
                cellpfDRIVING2.Colspan = 1;
                cellpfDRIVING2.PaddingTop = 5;
                cellpfDRIVING2.PaddingBottom = 5;
                tbliepf.AddCell(cellpfDRIVING2);

                PdfPCell cellpfDRIVING1 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfDRIVING1.HorizontalAlignment = 0;
                cellpfDRIVING1.Colspan = 1;
                cellpfDRIVING1.PaddingTop = 5;
                cellpfDRIVING1.PaddingBottom = 5;
                tbliepf.AddCell(cellpfDRIVING1);

                PdfPCell cellpfELECTION1 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 2, Font.NORMAL, BaseColor.BLACK)));
                cellpfELECTION1.HorizontalAlignment = 0;
                cellpfELECTION1.Colspan = 1;
                cellpfELECTION1.Border = 0;
                cellpfELECTION1.PaddingTop = 5;
                cellpfELECTION1.PaddingBottom = 5;
                tbliepf.AddCell(cellpfELECTION1);

                PdfPCell cellpfELECTION2 = new PdfPCell(new Phrase("ELECTION CARD", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfELECTION2.HorizontalAlignment = 1;
                cellpfELECTION2.Colspan = 1;
                cellpfELECTION2.PaddingTop = 5;
                cellpfELECTION2.PaddingBottom = 5;
                tbliepf.AddCell(cellpfELECTION2);

                PdfPCell cellpfELECTION = new PdfPCell(new Phrase(VoterIDName, FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfELECTION.HorizontalAlignment = 0;
                cellpfELECTION.Colspan = 1;
                cellpfELECTION.PaddingTop = 5;
                cellpfELECTION.PaddingBottom = 5;
                tbliepf.AddCell(cellpfELECTION);

                PdfPCell cellpfELECTION3 = new PdfPCell(new Phrase(VoterIDNo, FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfELECTION3.HorizontalAlignment = 0;
                cellpfELECTION3.Colspan = 1;
                cellpfELECTION3.PaddingTop = 5;
                cellpfELECTION3.PaddingBottom = 5;
                tbliepf.AddCell(cellpfELECTION3);

                PdfPCell cellpfELECTION4 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfELECTION4.HorizontalAlignment = 1;
                cellpfELECTION4.Colspan = 1;
                cellpfELECTION4.PaddingTop = 5;
                cellpfELECTION4.PaddingBottom = 5;
                tbliepf.AddCell(cellpfELECTION4);

                PdfPCell cellpfRATION = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 2, Font.NORMAL, BaseColor.BLACK)));
                cellpfRATION.HorizontalAlignment = 1;
                cellpfRATION.Colspan = 1;
                cellpfRATION.Border = 0;
                cellpfRATION.PaddingTop = 5;
                cellpfRATION.PaddingBottom = 5;
                tbliepf.AddCell(cellpfRATION);

                PdfPCell cellpfRATION4 = new PdfPCell(new Phrase("RATION CARD", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfRATION4.HorizontalAlignment = 1;
                cellpfRATION4.Colspan = 1;
                cellpfRATION4.PaddingTop = 5;
                cellpfRATION4.PaddingBottom = 5;
                tbliepf.AddCell(cellpfRATION4);

                PdfPCell cellpfRATION3 = new PdfPCell(new Phrase(RationCardName, FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfRATION3.HorizontalAlignment = 0;
                cellpfRATION3.Colspan = 1;
                cellpfRATION3.PaddingTop = 5;
                cellpfRATION3.PaddingBottom = 5;
                tbliepf.AddCell(cellpfRATION3);

                PdfPCell cellpfRATION2 = new PdfPCell(new Phrase(RationCardNo, FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfRATION2.HorizontalAlignment = 0;
                cellpfRATION2.Colspan = 1;
                cellpfRATION2.PaddingTop = 5;
                cellpfRATION2.PaddingBottom = 5;
                tbliepf.AddCell(cellpfRATION2);

                PdfPCell cellpfRATION1 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfRATION1.HorizontalAlignment = 0;
                cellpfRATION1.Colspan = 1;
                cellpfRATION1.PaddingTop = 5;
                cellpfRATION1.PaddingBottom = 5;
                tbliepf.AddCell(cellpfRATION1);

                PdfPCell cellpfESIC1 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 2, Font.NORMAL, BaseColor.BLACK)));
                cellpfESIC1.HorizontalAlignment = 0;
                cellpfESIC1.Colspan = 1;
                cellpfESIC1.Border = 0;
                cellpfESIC1.PaddingTop = 5;
                cellpfESIC1.PaddingBottom = 5;
                tbliepf.AddCell(cellpfESIC1);

                PdfPCell cellpfESIC2 = new PdfPCell(new Phrase("ESIC CARD", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfESIC2.HorizontalAlignment = 1;
                cellpfESIC2.Colspan = 1;
                cellpfESIC2.PaddingTop = 5;
                cellpfESIC2.PaddingBottom = 5;
                tbliepf.AddCell(cellpfESIC2);

                PdfPCell cellpfESIC3 = new PdfPCell(new Phrase(ESICName, FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfESIC3.HorizontalAlignment = 0;
                cellpfESIC3.Colspan = 1;
                cellpfESIC3.PaddingTop = 5;
                cellpfESIC3.PaddingBottom = 5;
                tbliepf.AddCell(cellpfESIC3);

                PdfPCell cellpfESIC4 = new PdfPCell(new Phrase(ESICCardNo, FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfESIC4.HorizontalAlignment = 0;
                cellpfESIC4.Colspan = 1;
                cellpfESIC4.PaddingTop = 5;
                cellpfESIC4.PaddingBottom = 5;
                tbliepf.AddCell(cellpfESIC4);

                PdfPCell cellpfESIC = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfESIC.HorizontalAlignment = 0;
                cellpfESIC.Colspan = 1;
                cellpfESIC.PaddingTop = 5;
                cellpfESIC.PaddingBottom = 5;
                tbliepf.AddCell(cellpfESIC);

                PdfPCell cellpfMandatory = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 2, Font.NORMAL, BaseColor.BLACK)));
                cellpfMandatory.HorizontalAlignment = 0;
                cellpfMandatory.Colspan = 1;
                cellpfMandatory.Border = 0;
                cellpfMandatory.PaddingTop = 5;
                cellpfMandatory.PaddingBottom = 5;
                tbliepf.AddCell(cellpfMandatory);

                var celldescription = new Phrase();
                celldescription.Add(new Chunk("* Mandatory Field (NOTE: BANK ACCOUNT NUMBER (ALONG WITH IFSC CODE) IS MANDATORY.", FontFactory.GetFont(Fontstyle, Fontsize - 1, Font.BOLD, BaseColor.BLACK)));
                celldescription.Add(new Chunk("YOU ARE HOWEVER ADVISED TO PROVIDE ALL KYC DOCUMENTS AVAILABLE WITH YOU IN ADDITION TO MANDATORY KYCS TO AVAIL BETTER SERVICES.", FontFactory.GetFont(Fontstyle, Fontsize - 1, Font.NORMAL, BaseColor.BLACK)));
                celldescription.Add(new Chunk(" SELF-ATTESTED PHOTOCOPIES OF THE DOCUMENTS ", FontFactory.GetFont(Fontstyle, Fontsize - 1, Font.BOLD, BaseColor.BLACK)));
                celldescription.Add(new Chunk(" MUST BE ATTACHED WITH THIS FORM.", FontFactory.GetFont(Fontstyle, Fontsize - 1, Font.NORMAL, BaseColor.BLACK)));
                PdfPCell cellpfMandatory1 = new PdfPCell();
                cellpfMandatory1.AddElement(celldescription);
                cellpfMandatory1.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                cellpfMandatory1.Colspan = 4;
                cellpfMandatory1.SetLeading(0f, -1.2f);
                tbliepf.AddCell(cellpfMandatory1);

                tbliepf.AddCell(cellspace);
                tbliepf.AddCell(cellspace);
                tbliepf.AddCell(cellspace);

                PdfPCell cellpfUNDERTAKING = new PdfPCell(new Phrase("C. UNDERTAKING:", FontFactory.GetFont(Fontstyle, Fontsize + 2, Font.BOLD, BaseColor.BLACK)));
                cellpfUNDERTAKING.HorizontalAlignment = 0;
                cellpfUNDERTAKING.Colspan = 5;
                cellpfUNDERTAKING.Border = 0;
                cellpfUNDERTAKING.PaddingBottom = 5;
                cellpfUNDERTAKING.PaddingTop = 5;
                cellpfUNDERTAKING.BackgroundColor = color;
                tbliepf.AddCell(cellpfUNDERTAKING);

                tbliepf.AddCell(cellspace);
                tbliepf.AddCell(cellspace);
                tbliepf.AddCell(cellspace);

                PdfPCell cellpfaa = new PdfPCell(new Phrase("A.	I CERTIFY THAT ALL THE INFORMATION GIVEN ABOVE IS TRUE TO THE BEST OF MY KNOWLEDGE AND BELIEF.", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellpfaa.HorizontalAlignment = 0;
                cellpfaa.Colspan = 5;
                cellpfaa.Border = 0;
                tbliepf.AddCell(cellpfaa);

                tbliepf.AddCell(cellspace);

                PdfPCell cellpfbb = new PdfPCell(new Phrase("B.	IN CASE, EARLIER A MEMBER OF EPF SCHEME, 1952 AND/OR EPS, 1995, ", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellpfbb.HorizontalAlignment = 0;
                cellpfbb.Colspan = 5;
                cellpfbb.Border = 0;
                tbliepf.AddCell(cellpfbb);

                tbliepf.AddCell(cellspace);

                PdfPCell cellpfI = new PdfPCell(new Phrase("(I)", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellpfI.HorizontalAlignment = 0;
                cellpfI.Colspan = 1;
                cellpfI.Border = 0;
                tbliepf.AddCell(cellpfI);

                PdfPCell cellpfIa = new PdfPCell(new Phrase("I HAVE ENSURED THE CORRECTNESS OF MY UAN/ PREVIOUS PF MEMBER ID.", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellpfIa.HorizontalAlignment = 0;
                cellpfIa.Colspan = 4;
                cellpfIa.Border = 0;
                cellpfIa.PaddingLeft = -90;
                tbliepf.AddCell(cellpfIa);

                tbliepf.AddCell(cellspace);

                PdfPCell cellpfIb = new PdfPCell(new Phrase("(II)", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellpfIb.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                cellpfIb.Colspan = 1;
                cellpfIb.Border = 0;
                tbliepf.AddCell(cellpfIb);


                PdfPCell cellpfII = new PdfPCell(new Phrase("THIS MAY ALSO BE TREATED AS MY REQUEST FOR TRANSFER OF FUNDS AND SERVICE DETAILS IF APPLICABLE FROM THE PREVIOUS ACCOUNT AS DECLARED ABOVE TO THE PRESENT P.F. ACCOUNT. (THE TRANSFER WOULD BE POSSIBLE ONLY IF THE IDENTIFIED KYC DETAILS APPROVED BY PREVIOUS EMPLOYER HAS BEEN VERIFIED BY PRESENT EMPLOYER USING HIS DIGITAL SIGNATURE CERTIFICATE).", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellpfII.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                cellpfII.Colspan = 4;
                cellpfII.Border = 0;
                cellpfII.PaddingLeft = -90;
                cellpfII.SetLeading(0f, 1.2f);
                tbliepf.AddCell(cellpfII);

                tbliepf.AddCell(cellspace);

                PdfPCell cellpfIc = new PdfPCell(new Phrase("(III)", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellpfIc.HorizontalAlignment = 0;
                cellpfIc.Colspan = 1;
                cellpfIc.Border = 0;
                tbliepf.AddCell(cellpfIc);

                PdfPCell cellpfIII = new PdfPCell(new Phrase("I AM AWARE THAT I CAN SUBMIT MY NOMINATION FORM THROUGH UAN BASED MEMBER PORTAL.", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellpfIII.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                cellpfIII.Colspan = 4;
                cellpfIII.Border = 0;
                cellpfIII.PaddingLeft = -90;
                tbliepf.AddCell(cellpfIII);

                tbliepf.AddCell(cellspace);
                tbliepf.AddCell(cellspace);
                tbliepf.AddCell(cellspace);
                tbliepf.AddCell(cellspace);


                PdfPCell cellpfDATE1 = new PdfPCell(new Phrase("DATE: ", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellpfDATE1.HorizontalAlignment = 0;
                cellpfDATE1.Colspan = 5;
                cellpfDATE1.Border = 0;
                tbliepf.AddCell(cellpfDATE1);


                PdfPCell cellpfPLACE = new PdfPCell(new Phrase("PLACE: ", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellpfPLACE.HorizontalAlignment = 0;
                cellpfPLACE.Colspan = 2;
                cellpfPLACE.Border = 0;
                tbliepf.AddCell(cellpfPLACE);


                PdfPCell cellpfSIGNATURE1 = new PdfPCell(new Phrase("SIGNATURE OF MEMBER", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellpfSIGNATURE1.HorizontalAlignment = 2;
                cellpfSIGNATURE1.Colspan = 3;
                cellpfSIGNATURE1.Border = 0;
                tbliepf.AddCell(cellpfSIGNATURE1);

                tbliepf.AddCell(cellspace);
                tbliepf.AddCell(cellspace);
                tbliepf.AddCell(cellspace);
                tbliepf.AddCell(cellspace);

                PdfPCell cellpfDECLARATION = new PdfPCell(new Phrase("DECLARATION BY PRESENT EMPLOYER ", FontFactory.GetFont(Fontstyle, Fontsize + 2, Font.BOLD, BaseColor.BLACK)));
                cellpfDECLARATION.HorizontalAlignment = 1;
                cellpfDECLARATION.Colspan = 5;
                cellpfDECLARATION.Border = 0;
                cellpfDECLARATION.BackgroundColor = color;
                tbliepf.AddCell(cellpfDECLARATION);

                tbliepf.AddCell(cellspace);
                tbliepf.AddCell(cellspace);

                PdfPCell cellpfCERTIFY = new PdfPCell(new Phrase("A.", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellpfCERTIFY.HorizontalAlignment = 0;
                cellpfCERTIFY.Colspan = 1;
                cellpfCERTIFY.Border = 0;
                tbliepf.AddCell(cellpfCERTIFY);

                var celldescription1 = new Phrase();
                celldescription1.Add(new Chunk("THE MEMBER Mr./ Ms./ Mrs. ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldescription1.Add(new Chunk(name, FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                celldescription1.Add(new Chunk(" HAS JOINED ON ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldescription1.Add(new Chunk(date, FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                celldescription1.Add(new Chunk(" AND HAS BEEN ALLOTTED PF MEMBER ID ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldescription1.Add(new Chunk(PFno, FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));

                PdfPCell cellpfCERTIFY11a = new PdfPCell();
                cellpfCERTIFY11a.HorizontalAlignment = 0;
                cellpfCERTIFY11a.AddElement(celldescription1);
                cellpfCERTIFY11a.Colspan = 4;
                cellpfCERTIFY11a.Border = 0;
                cellpfCERTIFY11a.PaddingLeft = -90;
                cellpfCERTIFY11a.PaddingTop = -5;
                tbliepf.AddCell(cellpfCERTIFY11a);

                tbliepf.AddCell(cellspace);

                PdfPCell cellpfCERTIFYa = new PdfPCell(new Phrase("B.", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellpfCERTIFYa.HorizontalAlignment = 0;
                cellpfCERTIFYa.Colspan = 1;
                cellpfCERTIFYa.Border = 0;
                tbliepf.AddCell(cellpfCERTIFYa);

                PdfPCell cellpfCERTIFY11 = new PdfPCell(new Phrase("IN CASE THE PERSON WAS EARLIER NOT A MEMBER OF EPF SCHEME, 1952 AND EPS, 1995:", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfCERTIFY11.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                cellpfCERTIFY11.Colspan = 4;
                cellpfCERTIFY11.Border = 0;
                cellpfCERTIFY11.PaddingLeft = -90;
                tbliepf.AddCell(cellpfCERTIFY11);

                tbliepf.AddCell(cellspace);

                PdfPCell cellpfEARLIER = new PdfPCell(new Phrase("•  (POST ALLOTMENT OF UAN) THE UAN ALLOTTED FOR THE MEMBER IS", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellpfEARLIER.HorizontalAlignment = 0;
                cellpfEARLIER.Colspan = 5;
                cellpfEARLIER.Border = 0;
                cellpfEARLIER.PaddingLeft = 30;
                tbliepf.AddCell(cellpfEARLIER);

                PdfPCell cellpfENSURED = new PdfPCell(new Phrase("•  PLEASE TICK THE APPROPRIATE OPTION:.", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellpfENSURED.HorizontalAlignment = 0;
                cellpfENSURED.Colspan = 5;
                cellpfENSURED.Border = 0;
                cellpfENSURED.PaddingLeft = 30;
                tbliepf.AddCell(cellpfENSURED);

                tbliepf.AddCell(cellspace);

                PdfPCell cellpfIIDETAILS = new PdfPCell(new Phrase("THE KYC DETAILS OF THE ABOVE MEMBER IN THE UAN DATABASE  ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfIIDETAILS.HorizontalAlignment = 0;
                cellpfIIDETAILS.Colspan = 5;
                cellpfIIDETAILS.Border = 0;
                cellpfIIDETAILS.PaddingLeft = 60;
                tbliepf.AddCell(cellpfIIDETAILS);

                tbliepf.AddCell(cellspace);

                iTextSharp.text.Image sqpng = iTextSharp.text.Image.GetInstance(imagepathpf1 + "/checkbox1.png");
                PdfPCell tickop11 = new PdfPCell(sqpng);
                tickop11.HorizontalAlignment = 2;
                tickop11.Colspan = 1;
                tickop11.Border = 0;
                tbliepf.AddCell(tickop11);

                PdfPCell cellpfHAVE = new PdfPCell(new Phrase("HAVE NOT BEEN UPLOADED", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfHAVE.HorizontalAlignment = 0;
                cellpfHAVE.Colspan = 4;
                cellpfHAVE.Border = 0;
                tbliepf.AddCell(cellpfHAVE);

                tbliepf.AddCell(cellspace);

                iTextSharp.text.Image sqpng4 = iTextSharp.text.Image.GetInstance(imagepathpf1 + "/checkbox1.png");
                PdfPCell tickop12 = new PdfPCell(sqpng4);
                tickop12.HorizontalAlignment = 2;
                tickop12.Colspan = 1;
                tickop12.Border = 0;
                tbliepf.AddCell(tickop12);

                PdfPCell cellpfIII1 = new PdfPCell(new Phrase("HAVE BEEN UPLOADED BUT NOT APPROVED.", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfIII1.HorizontalAlignment = 0;
                cellpfIII1.Colspan = 4;
                cellpfIII1.Border = 0;
                tbliepf.AddCell(cellpfIII1);

                tbliepf.AddCell(cellspace);

                iTextSharp.text.Image sqpng1 = iTextSharp.text.Image.GetInstance(imagepathpf1 + "/checkbox1.png");
                PdfPCell tickop13 = new PdfPCell(sqpng1);
                tickop13.HorizontalAlignment = 2;
                tickop13.Colspan = 1;
                tickop13.Border = 0;
                tbliepf.AddCell(tickop13);

                PdfPCell cellpfDECLARATION1 = new PdfPCell(new Phrase("HAVE BEEN UPLOADED AND APPROVED WITH DSC", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfDECLARATION1.HorizontalAlignment = 0;
                cellpfDECLARATION1.Colspan = 4;
                cellpfDECLARATION1.Border = 0;
                tbliepf.AddCell(cellpfDECLARATION1);

                tbliepf.AddCell(cellspace);

                PdfPCell cellpfCERTIFY1w = new PdfPCell(new Phrase("C.", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellpfCERTIFY1w.HorizontalAlignment = 0;
                cellpfCERTIFY1w.Colspan = 1;
                cellpfCERTIFY1w.Border = 0;
                tbliepf.AddCell(cellpfCERTIFY1w);

                PdfPCell cellpfCERTIFY1 = new PdfPCell(new Phrase("IN CASE THE PERSON WAS EARLIER A MEMBER OF EPF SCHEME, 1952 AND EPS, 1995: ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfCERTIFY1.HorizontalAlignment = 0;
                cellpfCERTIFY1.Colspan = 4;
                cellpfCERTIFY1.Border = 0;
                cellpfCERTIFY1.PaddingLeft = -90;
                tbliepf.AddCell(cellpfCERTIFY1);

                tbliepf.AddCell(cellspace);

                PdfPCell cellpfEARLIER1 = new PdfPCell(new Phrase("•  THE ABOVE MEMBER ID OF THE MEMBER AS MENTIONED IN (A) ABOVE HAS BEEN TAGGED WITH HIS/HER UAN/PREVIOUS MEMBER ID AS DECLARED BY MEMBER.", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfEARLIER1.HorizontalAlignment = 0;
                cellpfEARLIER1.Colspan = 5;
                cellpfEARLIER1.Border = 0;
                cellpfEARLIER1.PaddingLeft = 30;
                cellpfEARLIER1.SetLeading(0f, 1.2f);
                tbliepf.AddCell(cellpfEARLIER1);

                tbliepf.AddCell(cellspace);


                PdfPCell cellpfENSURED1 = new PdfPCell(new Phrase("•  PLEASE TICK THE APPROPRIATE OPTION:-", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellpfENSURED1.HorizontalAlignment = 0;
                cellpfENSURED1.Colspan = 4;
                cellpfENSURED1.Border = 0;
                cellpfENSURED1.PaddingLeft = 30;
                tbliepf.AddCell(cellpfENSURED1);

                tbliepf.AddCell(cellspace);


                iTextSharp.text.Image sqpng2 = iTextSharp.text.Image.GetInstance(imagepathpf1 + "/checkbox1.png");
                PdfPCell tickop14 = new PdfPCell(sqpng2);
                tickop14.HorizontalAlignment = 2;
                tickop14.Colspan = 1;
                tickop14.Border = 0;
                tickop14.PaddingTop = 5;
                tbliepf.AddCell(tickop14);

                PdfPCell cellpfIIDETAILS1 = new PdfPCell(new Phrase("THE KYC DETAILS OF THE ABOVE MEMBER IN THE UAN DATABASE HAVE BEEN APPROVED WITH DIGITAL SIGNATURE CERTIFICATE AND TRANSFER REQUEST HAS BEEN GENERATED ON PORTAL. ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfIIDETAILS1.HorizontalAlignment = 0;
                cellpfIIDETAILS1.Colspan = 4;
                cellpfIIDETAILS1.Border = 0;
                cellpfIIDETAILS1.SetLeading(0f, 1.2f);
                tbliepf.AddCell(cellpfIIDETAILS1);

                tbliepf.AddCell(cellspace);

                iTextSharp.text.Image sqpng3 = iTextSharp.text.Image.GetInstance(imagepathpf1 + "/checkbox1.png");
                PdfPCell tickop15 = new PdfPCell(sqpng3);
                tickop15.HorizontalAlignment = 2;
                tickop15.Colspan = 1;
                tickop15.Border = 0;
                tickop15.PaddingTop = 5;
                tbliepf.AddCell(tickop15);

                PdfPCell cellpfHAVE1 = new PdfPCell(new Phrase("AS THE DSC OF ESTABLISHMENT ARE NOT REGISTERED WITH EPFO, THE MEMBER HAS BEEN INFORMED TO FILE PHYSICAL CLAIM (FORM-13) FOR TRANSFER OF FUNDS FROM HIS PREVIOUS ESTABLISHMENT.", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpfHAVE1.HorizontalAlignment = 0;
                cellpfHAVE1.Colspan = 4;
                cellpfHAVE1.Border = 0;
                cellpfHAVE1.SetLeading(0f, 1.2f);
                tbliepf.AddCell(cellpfHAVE1);

                tbliepf.AddCell(cellspace);
                tbliepf.AddCell(cellspace);
                tbliepf.AddCell(cellspace);
                tbliepf.AddCell(cellspace);
                tbliepf.AddCell(cellspace);
                tbliepf.AddCell(cellspace);

                PdfPCell cellpfDATE = new PdfPCell(new Phrase("DATE: ", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellpfDATE.HorizontalAlignment = 0;
                cellpfDATE.Colspan = 2;
                cellpfDATE.Border = 0;
                tbliepf.AddCell(cellpfDATE);

                PdfPCell cellpfSIGNATURE = new PdfPCell(new Phrase("SIGNATURE OF EMPLOYER WITH SEAL OF ESTABLISHMENT", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellpfSIGNATURE.HorizontalAlignment = 2;
                cellpfSIGNATURE.Colspan = 3;
                cellpfSIGNATURE.Border = 0;
                tbliepf.AddCell(cellpfSIGNATURE);

                document.Add(tbliepf);

                #endregion

                #region Employee Finger Prints


                document.NewPage();

                PdfPTable tblFingerprints = new PdfPTable(6);
                tblFingerprints.TotalWidth = 500f;
                tblFingerprints.LockedWidth = true;
                float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                tblFingerprints.SetWidths(widthfinger);

                #endregion Employee Finger Prints

                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";
                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }



            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;


            }
        }

        protected void Buttonform_Click(object sender, EventArgs e)
        {

            int Fontsize = 13;
            string fontsyle = "verdana";

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";

            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string relationoccupation = "";
            string relationresidence = "";
            string relationplace = "";
            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Father' ";
            DataTable dtfather = config.ExecuteAdaptorAsyncWithQueryParams(query).Result;

            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }
            string query1 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Mother' ";
            DataTable dtmother = config.ExecuteAdaptorAsyncWithQueryParams(query1).Result;

            if (dtmother.Rows.Count > 0)
            {
                Mname = dtmother.Rows[0]["RName"].ToString();
                Mage = dtmother.Rows[0]["age"].ToString();
                if (Mage == "0")
                {
                    Mage = "";
                }
                else
                {
                    Mage = dtfather.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select EmpESINo from EmpESICodes where Empid='" + txtEmpid.Text + "'  ";
            DataTable dtesi = config.ExecuteAdaptorAsyncWithQueryParams(query2).Result;
            if (dtesi.Rows.Count > 0)
            {
                Esino = dtesi.Rows[0]["EmpESINo"].ToString();

            }



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            string Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
            string EmpGender = "";

            if (Gender == "True")
            {
                EmpGender = "Male";
            }
            if (Gender == "False")
            {
                EmpGender = "Female";
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prphone = dtEmpdetails.Rows[0]["prphone"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                string fileheader2 = Idno + "" + name + "" + "BIO DATA" + " .Pdf";
                Document document = new Document(PageSize.LEGAL);
                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");

                PdfPTable table = new PdfPTable(6);
                table.TotalWidth = 500f;
                table.LockedWidth = true;
                float[] width = new float[] { 1.5f, 2f, 2f, 2f, 1.5f, 2f };
                table.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 6;
                cellspace.Border = 0;
                cellspace.PaddingTop = -5;

                PdfPCell celllogoHead = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                celllogoHead.HorizontalAlignment = 2;
                celllogoHead.Colspan = 3;
                celllogoHead.Border = 0;
                table.AddCell(celllogoHead);

                PdfPCell cellHead = new PdfPCell(new Phrase("Form-XIV ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 0;
                cellHead.Colspan = 3;
                cellHead.Border = 0;
                cellHead.PaddingLeft = -50;
                table.AddCell(cellHead);

                PdfPCell cellrule = new PdfPCell(new Phrase("(see rule 76) ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 12, Font.NORMAL, BaseColor.BLACK)));
                cellrule.HorizontalAlignment = 0;
                cellrule.Colspan = 6;
                cellrule.Border = 0;
                cellrule.PaddingLeft = 210;
                table.AddCell(cellrule);

                PdfPCell cellHead4 = new PdfPCell(new Phrase("EMPLOYMENT CARD", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 3, Font.BOLD, BaseColor.BLACK)));
                cellHead4.HorizontalAlignment = 1;
                cellHead4.Colspan = 6;
                cellHead4.Border = 0;
                table.AddCell(cellHead4);


                document.Add(table);




                PdfPTable table2 = new PdfPTable(2);
                table2.TotalWidth = 500f;
                table2.LockedWidth = true;
                float[] width1 = new float[] { 2f, 2f };
                table2.SetWidths(width1);

                PdfPCell cellspace3 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellspace3.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace3.Colspan = 2;
                cellspace3.Border = 0;
                table2.AddCell(cellspace3);
                //table2.AddCell(cellspace3);


                PdfPCell cellName2 = new PdfPCell(new Phrase("Name and address of constractor", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellName2.HorizontalAlignment = 0;
                cellName2.Colspan = 0;
                cellName2.Border = 0;
                cellName2.PaddingTop = 40;
                cellName2.PaddingBottom = 40;
                cellName2.BorderWidthLeft = 0.5f;
                cellName2.BorderWidthRight = 0.2f;
                cellName2.BorderWidthTop = 0.5f;
                cellName2.BorderWidthBottom = 0.5f;
                cellName2.PaddingLeft = 10;
                table2.AddCell(cellName2);


                PdfPCell cellName3 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName3.HorizontalAlignment = 0;
                cellName3.Colspan = 0;
                cellName3.Border = 0;
                cellName3.PaddingTop = 40;
                cellName3.PaddingBottom = 40;
                cellName3.BorderWidthLeft = 0;
                cellName3.BorderWidthRight = 0.9f;
                cellName3.BorderWidthTop = 0.5f;
                cellName3.BorderWidthBottom = 0.5f;
                table2.AddCell(cellName3);

                PdfPCell cellName11 = new PdfPCell(new Phrase("Name and address of principal Employer", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellName11.HorizontalAlignment = 0;
                cellName11.Colspan = 0;
                cellName11.Border = 0;
                cellName11.PaddingTop = 30;
                cellName11.PaddingBottom = 30;
                cellName11.BorderWidthLeft = 0.5f;
                cellName11.BorderWidthRight = 0.2f;
                cellName11.BorderWidthTop = 0;
                cellName11.BorderWidthBottom = 0.5f;
                cellName11.PaddingLeft = 10;
                table2.AddCell(cellName11);


                PdfPCell cellName10 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName10.HorizontalAlignment = 0;
                cellName10.Colspan = 0;
                cellName10.Border = 0;
                cellName10.PaddingTop = 30;
                cellName10.PaddingBottom = 30;
                cellName10.BorderWidthLeft = 0;
                cellName10.BorderWidthRight = 0.9f;
                cellName10.BorderWidthTop = 0;
                cellName10.BorderWidthBottom = 0.5f;
                table2.AddCell(cellName10);


                PdfPCell cellName13 = new PdfPCell(new Phrase("Name and address of Establishment    where work carried on", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellName13.HorizontalAlignment = 0;
                cellName13.Colspan = 0;
                cellName13.Border = 0;
                cellName13.PaddingTop = 30;
                cellName13.PaddingBottom = 30;
                cellName13.BorderWidthLeft = 0.5f;
                cellName13.BorderWidthRight = 0.2f;
                cellName13.BorderWidthTop = 0;
                cellName13.BorderWidthBottom = 0.5f;
                cellName13.PaddingLeft = 10;
                table2.AddCell(cellName13);


                PdfPCell cellName12 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName12.HorizontalAlignment = 0;
                cellName12.Colspan = 0;
                cellName12.Border = 0;
                cellName12.PaddingTop = 30;
                cellName12.PaddingBottom = 30;
                cellName12.BorderWidthLeft = 0;
                cellName12.BorderWidthRight = 0.9f;
                cellName12.BorderWidthTop = 0;
                cellName12.BorderWidthBottom = 0.5f;
                table2.AddCell(cellName12);


                PdfPCell cellName14 = new PdfPCell(new Phrase("Nature of work and location of work/Address", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellName14.HorizontalAlignment = 0;
                cellName14.Colspan = 0;
                cellName14.Border = 0;
                cellName14.PaddingTop = 30;
                cellName14.PaddingBottom = 30;
                cellName14.BorderWidthLeft = 0.5f;
                cellName14.BorderWidthRight = 0.2f;
                cellName14.BorderWidthTop = 0;
                cellName14.BorderWidthBottom = 0.5f;
                cellName14.PaddingLeft = 10;
                table2.AddCell(cellName14);


                PdfPCell cellName15 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName15.HorizontalAlignment = 0;
                cellName15.Colspan = 0;
                cellName15.Border = 0;
                cellName15.PaddingTop = 30;
                cellName15.PaddingBottom = 30;
                cellName15.BorderWidthLeft = 0;
                cellName15.BorderWidthRight = 0.9f;
                cellName15.BorderWidthTop = 0;
                cellName15.BorderWidthBottom = 0.5f;
                table2.AddCell(cellName15);


                PdfPCell cellName16 = new PdfPCell(new Phrase("1.   Name of the Workman", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellName16.HorizontalAlignment = 0;
                cellName16.Colspan = 0;
                cellName16.Border = 0;
                cellName16.PaddingTop = 20;
                cellName16.PaddingBottom = 20;
                cellName16.BorderWidthLeft = 0.5f;
                cellName16.BorderWidthRight = 0.2f;
                cellName16.BorderWidthTop = 0;
                cellName16.BorderWidthBottom = 0.5f;
                cellName16.PaddingLeft = 10;
                table2.AddCell(cellName16);

                PdfPCell cellName17 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName17.HorizontalAlignment = 0;
                cellName17.Colspan = 0;
                cellName17.Border = 0;
                cellName17.PaddingTop = 20;
                cellName17.PaddingBottom = 20;
                cellName17.BorderWidthLeft = 0;
                cellName17.BorderWidthRight = 0.9f;
                cellName17.BorderWidthTop = 0;
                cellName17.BorderWidthBottom = 0.5f;
                table2.AddCell(cellName17);


                PdfPCell cellName19 = new PdfPCell(new Phrase("2.   SL.No in the register of Workmen employed", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellName19.HorizontalAlignment = 0;
                cellName19.Colspan = 0;
                cellName19.Border = 0;
                cellName19.PaddingTop = 20;
                cellName19.PaddingBottom = 20;
                cellName19.BorderWidthLeft = 0.5f;
                cellName19.BorderWidthRight = 0.2f;
                cellName19.BorderWidthTop = 0;
                cellName19.BorderWidthBottom = 0.5f;
                cellName19.PaddingLeft = 10;
                table2.AddCell(cellName19);


                PdfPCell cellName18 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName18.HorizontalAlignment = 0;
                cellName18.Colspan = 0;
                cellName18.Border = 0;
                cellName18.PaddingTop = 20;
                cellName18.PaddingBottom = 20;
                cellName18.BorderWidthLeft = 0;
                cellName18.BorderWidthRight = 0.9f;
                cellName18.BorderWidthTop = 0;
                cellName18.BorderWidthBottom = 0.5f;
                table2.AddCell(cellName18);


                PdfPCell cellName21 = new PdfPCell(new Phrase("3.   Nature of Employment/Designation", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellName21.HorizontalAlignment = 0;
                cellName21.Colspan = 0;
                cellName21.Border = 0;
                cellName21.PaddingTop = 20;
                cellName21.PaddingBottom = 20;
                cellName21.BorderWidthLeft = 0.5f;
                cellName21.BorderWidthRight = 0.2f;
                cellName21.BorderWidthTop = 0;
                cellName21.BorderWidthBottom = 0.5f;
                cellName21.PaddingLeft = 10;
                table2.AddCell(cellName21);


                PdfPCell cellName20 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName20.HorizontalAlignment = 0;
                cellName20.Colspan = 0;
                cellName20.Border = 0;
                cellName20.PaddingTop = 20;
                cellName20.PaddingBottom = 20;
                cellName20.BorderWidthLeft = 0;
                cellName20.BorderWidthRight = 0.9f;
                cellName20.BorderWidthTop = 0;
                cellName20.BorderWidthBottom = 0.5f;
                table2.AddCell(cellName20);


                PdfPCell cellName22 = new PdfPCell(new Phrase("4.  Wage Rate (With Particulars of unit in case of piece work)   ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellName22.HorizontalAlignment = 0;
                cellName22.Colspan = 0;
                cellName22.Border = 0;
                cellName22.PaddingTop = 20;
                cellName22.PaddingBottom = 20;
                cellName22.BorderWidthLeft = 0.5f;
                cellName22.BorderWidthRight = 0.2f;
                cellName22.BorderWidthTop = 0;
                cellName22.BorderWidthBottom = 0.5f;
                cellName22.PaddingLeft = 10;
                table2.AddCell(cellName22);


                PdfPCell cellName29 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName29.HorizontalAlignment = 0;
                cellName29.Colspan = 0;
                cellName29.Border = 0;
                cellName29.PaddingTop = 20;
                cellName29.PaddingBottom = 20;
                cellName29.BorderWidthLeft = 0;
                cellName29.BorderWidthRight = 0.9f;
                cellName29.BorderWidthTop = 0;
                cellName29.BorderWidthBottom = 0.5f;
                table2.AddCell(cellName29);


                PdfPCell cellName24 = new PdfPCell(new Phrase("5.  Wage period   ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellName24.HorizontalAlignment = 0;
                cellName24.Colspan = 0;
                cellName24.Border = 0;
                cellName24.PaddingTop = 20;
                cellName24.PaddingBottom = 20;
                cellName24.BorderWidthLeft = 0.5f;
                cellName24.BorderWidthRight = 0.2f;
                cellName24.BorderWidthTop = 0;
                cellName24.BorderWidthBottom = 0.5f;
                cellName24.PaddingLeft = 10;
                table2.AddCell(cellName24);


                PdfPCell cellName25 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName25.HorizontalAlignment = 0;
                cellName25.Colspan = 0;
                cellName25.Border = 0;
                cellName25.PaddingTop = 20;
                cellName25.PaddingBottom = 20;
                cellName25.BorderWidthLeft = 0;
                cellName25.BorderWidthRight = 0.9f;
                cellName25.BorderWidthTop = 0f;
                cellName25.BorderWidthBottom = 0.5f;
                table2.AddCell(cellName25);


                PdfPCell cellName26 = new PdfPCell(new Phrase("6.  Tenure of Employment (DOJ)   ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellName26.HorizontalAlignment = 0;
                cellName26.Colspan = 0;
                cellName26.Border = 0;
                cellName26.PaddingTop = 20;
                cellName26.PaddingBottom = 20;
                cellName26.BorderWidthLeft = 0.5f;
                cellName26.BorderWidthRight = 0.2f;
                cellName26.BorderWidthTop = 0;
                cellName26.BorderWidthBottom = 0.5f;
                cellName26.PaddingLeft = 10;
                table2.AddCell(cellName26);


                PdfPCell cellName27 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName27.HorizontalAlignment = 0;
                cellName27.Colspan = 0;
                cellName27.Border = 0;
                cellName27.PaddingTop = 20;
                cellName27.PaddingBottom = 20;
                cellName27.BorderWidthLeft = 0;
                cellName27.BorderWidthRight = 0.9f;
                cellName27.BorderWidthTop = 0;
                cellName27.BorderWidthBottom = 0.5f;
                table2.AddCell(cellName27);


                PdfPCell cellName28 = new PdfPCell(new Phrase("7.  Remarks   ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellName28.HorizontalAlignment = 0;
                cellName28.Colspan = 0;
                cellName28.Border = 0;
                cellName28.PaddingTop = 20;
                cellName28.PaddingBottom = 20;
                cellName28.BorderWidthRight = 0.2f;
                cellName28.BorderWidthLeft = 0.5f;
                cellName28.BorderWidthTop = 0;
                cellName28.BorderWidthBottom = 0.5f;
                cellName28.PaddingLeft = 10;
                table2.AddCell(cellName28);


                PdfPCell cellName291 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName291.HorizontalAlignment = 0;
                cellName291.Colspan = 0;
                cellName291.Border = 0;
                cellName291.PaddingTop = 20;
                cellName291.PaddingBottom = 20;
                cellName291.BorderWidthRight = 0.9f;
                cellName291.BorderWidthTop = 0;
                cellName291.BorderWidthBottom = 0.5f;
                table2.AddCell(cellName291);


                PdfPCell cellNames28 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames28.HorizontalAlignment = 0;
                cellNames28.Colspan = 0;
                cellNames28.Border = 0;
                cellNames28.PaddingTop = 40;
                cellNames28.PaddingBottom = 40;
                cellNames28.BorderWidthRight = 0.2f;
                cellNames28.BorderWidthLeft = 0.5f;
                cellNames28.BorderWidthTop = 0;
                cellNames28.BorderWidthBottom = 0.5f;
                cellNames28.PaddingLeft = 10;
                table2.AddCell(cellNames28);


                PdfPCell cellNames291 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNames291.HorizontalAlignment = 0;
                cellNames291.Colspan = 0;
                cellNames291.Border = 0;
                cellNames291.PaddingTop = 40;
                cellNames291.PaddingBottom = 40;
                cellNames291.BorderWidthRight = 0.9f;
                cellNames291.BorderWidthTop = 0;
                cellNames291.BorderWidthBottom = 0.5f;
                table2.AddCell(cellNames291);


                document.Add(table2);


                #endregion Basic Information of the Employee





                document.NewPage();

                PdfPTable tblFingerprints = new PdfPTable(6);
                tblFingerprints.TotalWidth = 500f;
                tblFingerprints.LockedWidth = true;
                float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                tblFingerprints.SetWidths(widthfinger);





                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";


                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }



            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;
            }
        }

        protected void Btnform14_Click(object sender, EventArgs e)
        {


            int Fontsize = 13;
            string fontsyle = "verdana";

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";

            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string relationoccupation = "";
            string relationresidence = "";
            string relationplace = "";
            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Father' ";
            DataTable dtfather = config.ExecuteAdaptorAsyncWithQueryParams(query).Result;

            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }
            string query1 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Mother' ";
            DataTable dtmother = config.ExecuteAdaptorAsyncWithQueryParams(query1).Result;

            if (dtmother.Rows.Count > 0)
            {
                Mname = dtmother.Rows[0]["RName"].ToString();
                Mage = dtmother.Rows[0]["age"].ToString();
                if (Mage == "0")
                {
                    Mage = "";
                }
                else
                {
                    Mage = dtfather.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select EmpESINo from EmpESICodes where Empid='" + txtEmpid.Text + "'  ";
            DataTable dtesi = config.ExecuteAdaptorAsyncWithQueryParams(query2).Result;
            if (dtesi.Rows.Count > 0)
            {
                Esino = dtesi.Rows[0]["EmpESINo"].ToString();

            }



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            string Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
            string EmpGender = "";

            if (Gender == "True")
            {
                EmpGender = "Male";
            }
            if (Gender == "False")
            {
                EmpGender = "Female";
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prphone = dtEmpdetails.Rows[0]["prphone"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                string fileheader2 = Idno + "" + name + "" + "BIO DATA" + " .Pdf";
                Document document = new Document(PageSize.LEGAL);
                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");
                #region

                PdfPTable tblnew = new PdfPTable(6);
                tblnew.TotalWidth = 500f;
                tblnew.LockedWidth = true;
                float[] width = new float[] { 1.5f, 2f, 2f, 2f, 1.5f, 2f };
                tblnew.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 6;
                cellspace.Border = 0;
                cellspace.PaddingTop = -5;


                PdfPCell celllogoHead = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                celllogoHead.HorizontalAlignment = 2;
                celllogoHead.Colspan = 3;
                celllogoHead.Border = 0;
                tblnew.AddCell(celllogoHead);



                PdfPCell cellHead = new PdfPCell(new Phrase("Form-XXIV ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 0;
                cellHead.Colspan = 3;
                cellHead.Border = 0;
                cellHead.PaddingLeft = -50;
                tblnew.AddCell(cellHead);

                PdfPCell cellreturn12 = new PdfPCell(new Phrase("RETURN TO BE SENT BY THE CONTRACTOR TO THE LICENSING OFFICER", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 12, Font.BOLD, BaseColor.BLACK)));
                cellreturn12.HorizontalAlignment = 0;
                cellreturn12.Colspan = 6;
                cellreturn12.Border = 0;
                cellreturn12.PaddingLeft = 30;
                tblnew.AddCell(cellreturn12);

                PdfPCell cellreturn123 = new PdfPCell(new Phrase(" Rule 82(1)", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 3, Font.BOLD, BaseColor.BLACK)));
                cellreturn123.HorizontalAlignment = 1;
                cellreturn123.Colspan = 6;
                cellreturn123.Border = 0;
                tblnew.AddCell(cellreturn123);
                cellreturn12.PaddingLeft = -10;
                tblnew.AddCell(cellspace);

                document.Add(tblnew);

                #endregion

                #region Basic Information of the Employee

                PdfPTable tblform12 = new PdfPTable(2);
                tblform12.TotalWidth = 500f;
                tblform12.LockedWidth = true;
                float[] width1 = new float[] { 2f, 2f };
                tblform12.SetWidths(width1);

                PdfPCell cellspace3 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellspace3.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace3.Colspan = 2;
                cellspace3.Border = 0;


                PdfPCell cellName40 = new PdfPCell(new Phrase("1.   Name and address of constractor", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName40.HorizontalAlignment = 0;
                cellName40.Colspan = 0;
                cellName40.Border = 0;
                cellName40.PaddingTop = 20;
                cellName40.PaddingBottom = 20;
                cellName40.BorderWidthLeft = 0.5f;
                cellName40.BorderWidthRight = 0.2f;
                cellName40.BorderWidthTop = 0.5f;
                cellName40.BorderWidthBottom = 0.5f;
                cellName40.PaddingLeft = 10;
                tblform12.AddCell(cellName40);





                PdfPCell cellName41 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName41.HorizontalAlignment = 0;
                cellName41.Colspan = 0;
                cellName41.Border = 0;
                cellName41.PaddingTop = 20;
                cellName41.PaddingBottom = 20;
                cellName41.BorderWidthLeft = 0;
                cellName41.BorderWidthRight = 0.9f;
                cellName41.BorderWidthTop = 0.5f;
                cellName41.BorderWidthBottom = 0.5f;

                tblform12.AddCell(cellName41);







                PdfPCell cellName42 = new PdfPCell(new Phrase("2.   Name and address of Establishment", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName42.HorizontalAlignment = 0;
                cellName42.Colspan = 0;
                cellName42.Border = 0;
                cellName42.PaddingTop = 20;
                cellName42.PaddingBottom = 20;
                cellName42.BorderWidthLeft = 0.5f;
                cellName42.BorderWidthRight = 0.2f;
                cellName42.BorderWidthTop = 0;
                cellName42.BorderWidthBottom = 0.5f;
                cellName42.PaddingLeft = 10;
                tblform12.AddCell(cellName42);




                PdfPCell cellName43 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName43.HorizontalAlignment = 0;
                cellName43.Colspan = 0;
                cellName43.Border = 0;
                cellName43.PaddingTop = 20;
                cellName43.PaddingBottom = 20;
                cellName43.BorderWidthLeft = 0;
                cellName43.BorderWidthRight = 0.9f;
                cellName43.BorderWidthTop = 0;
                cellName43.BorderWidthBottom = 0.5f;
                tblform12.AddCell(cellName43);








                PdfPCell cellName44 = new PdfPCell(new Phrase("3.   Name and address of the principal Employer", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName44.HorizontalAlignment = 0;
                cellName44.Colspan = 0;
                cellName44.Border = 0;
                cellName44.PaddingTop = 20;
                cellName44.PaddingBottom = 20;
                cellName44.BorderWidthLeft = 0.5f;
                cellName44.BorderWidthRight = 0.2f;
                cellName44.BorderWidthTop = 0;
                cellName44.BorderWidthBottom = 0.5f;
                cellName44.PaddingLeft = 10;
                tblform12.AddCell(cellName44);




                PdfPCell cellName45 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName45.HorizontalAlignment = 0;
                cellName45.Colspan = 0;
                cellName45.Border = 0;
                cellName45.PaddingTop = 20;
                cellName45.PaddingBottom = 20;
                cellName45.BorderWidthLeft = 0;
                cellName45.BorderWidthRight = 0.9f;
                cellName45.BorderWidthTop = 0;
                cellName45.BorderWidthBottom = 0.5f;
                tblform12.AddCell(cellName45);








                PdfPCell cellName46 = new PdfPCell(new Phrase("4.   Duration of contract: From ………… to", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName46.HorizontalAlignment = 0;
                cellName46.Colspan = 0;
                cellName46.Border = 0;
                cellName46.PaddingTop = 20;
                cellName46.PaddingBottom = 20;
                cellName46.BorderWidthLeft = 0.5f;
                cellName46.BorderWidthRight = 0.2f;
                cellName46.BorderWidthTop = 0;
                cellName46.BorderWidthBottom = 0.5f;
                cellName46.PaddingLeft = 10;
                tblform12.AddCell(cellName46);




                PdfPCell cellName47 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName47.HorizontalAlignment = 0;
                cellName47.Colspan = 0;
                cellName47.Border = 0;
                cellName47.PaddingTop = 20;
                cellName47.PaddingBottom = 20;
                cellName47.BorderWidthLeft = 0;
                cellName47.BorderWidthRight = 0.9f;
                cellName47.BorderWidthTop = 0;
                cellName47.BorderWidthBottom = 0.5f;
                tblform12.AddCell(cellName47);








                PdfPCell cellName48 = new PdfPCell(new Phrase("5.   No. of days during the half-year on	which-(a) the establishment of the principal employer  had worked;(b) the contractors establishment had worked;", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName48.HorizontalAlignment = 0;
                cellName48.Colspan = 0;
                cellName48.Border = 0;
                cellName48.PaddingTop = 25;
                cellName48.PaddingBottom = 25;
                cellName48.BorderWidthLeft = 0.5f;
                cellName48.BorderWidthRight = 0.2f;
                cellName48.BorderWidthTop = 0;
                cellName48.BorderWidthBottom = 0.5f;
                cellName48.PaddingLeft = 10;
                tblform12.AddCell(cellName48);




                PdfPCell cellName49 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName49.HorizontalAlignment = 0;
                cellName49.Colspan = 0;
                cellName49.Border = 0;
                cellName49.PaddingTop = 25;
                cellName49.PaddingBottom = 25;
                cellName49.BorderWidthLeft = 0;
                cellName49.BorderWidthRight = 0.9f;
                cellName49.BorderWidthTop = 0;
                cellName49.BorderWidthBottom = 0.5f;
                tblform12.AddCell(cellName49);






                PdfPCell cellName50 = new PdfPCell(new Phrase("6.   Maximum  number  of  contract  labour employed on any day during the half year:	Men	Women Children Total", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName50.HorizontalAlignment = 0;
                cellName50.Colspan = 0;
                cellName50.Border = 0;
                cellName50.PaddingTop = 20;
                cellName50.PaddingBottom = 20;
                cellName50.BorderWidthLeft = 0.5f;
                cellName50.BorderWidthRight = 0.2f;
                cellName50.BorderWidthTop = 0;
                cellName50.BorderWidthBottom = 0.5f;
                cellName50.PaddingLeft = 10;
                tblform12.AddCell(cellName50);




                PdfPCell cellName51 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName51.HorizontalAlignment = 0;
                cellName51.Colspan = 0;
                cellName51.Border = 0;
                cellName51.PaddingTop = 20;
                cellName51.PaddingBottom = 20;
                cellName51.BorderWidthLeft = 0;
                cellName51.BorderWidthRight = 0.9f;
                cellName51.BorderWidthTop = 0;
                cellName51.BorderWidthBottom = 0.5f;
                tblform12.AddCell(cellName51);




                PdfPCell cellName52 = new PdfPCell(new Phrase("7.  (i) Daily hours of work and spreadover-(ii) (a) Whether weekly holiday observed and on what day-(b) if so, whether it was paid for-(iii) No. of man-hours of overtime worked-", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName52.HorizontalAlignment = 0;
                cellName52.Colspan = 0;
                cellName52.Border = 0;
                cellName52.PaddingTop = 20;
                cellName52.PaddingBottom = 20;
                cellName52.BorderWidthLeft = 0.5f;
                cellName52.BorderWidthRight = 0.2f;
                cellName52.BorderWidthTop = 0;
                cellName52.BorderWidthBottom = 0.5f;
                cellName52.PaddingLeft = 10;
                tblform12.AddCell(cellName52);




                PdfPCell cellName53 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName53.HorizontalAlignment = 0;
                cellName53.Colspan = 0;
                cellName53.Border = 0;
                cellName53.PaddingTop = 20;
                cellName53.PaddingBottom = 20;
                cellName53.BorderWidthLeft = 0;
                cellName53.BorderWidthRight = 0.9f;
                cellName53.BorderWidthTop = 0;
                cellName53.BorderWidthBottom = 0.5f;
                tblform12.AddCell(cellName53);





                PdfPCell cellName54 = new PdfPCell(new Phrase("8.  Number of man-days worked by-Men	Women Children Total", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName54.HorizontalAlignment = 0;
                cellName54.Colspan = 0;
                cellName54.Border = 0;
                cellName54.PaddingTop = 15;
                cellName54.PaddingBottom = 15;
                cellName54.BorderWidthLeft = 0.5f;
                cellName54.BorderWidthRight = 0.2f;
                cellName54.BorderWidthTop = 0;
                cellName54.BorderWidthBottom = 0.5f;
                cellName54.PaddingLeft = 10;
                tblform12.AddCell(cellName54);




                PdfPCell cellName55 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName55.HorizontalAlignment = 0;
                cellName55.Colspan = 0;
                cellName55.Border = 0;
                cellName55.PaddingTop = 15;
                cellName55.PaddingBottom = 15;
                cellName55.BorderWidthLeft = 0;
                cellName55.BorderWidthRight = 0.9f;
                cellName55.BorderWidthTop = 0;
                cellName55.BorderWidthBottom = 0.5f;
                tblform12.AddCell(cellName55);



                PdfPCell cellName56 = new PdfPCell(new Phrase("9.  Amount of  wages paid Men Women Children	Total", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName56.HorizontalAlignment = 0;
                cellName56.Colspan = 0;
                cellName56.Border = 0;
                cellName56.PaddingTop = 15;
                cellName56.PaddingBottom = 15;
                cellName56.BorderWidthLeft = 0.5f;
                cellName56.BorderWidthRight = 0.2f;
                cellName56.BorderWidthTop = 0;
                cellName56.BorderWidthBottom = 0.5f;
                cellName56.PaddingLeft = 10;
                tblform12.AddCell(cellName56);




                PdfPCell cellName57 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName57.HorizontalAlignment = 0;
                cellName57.Colspan = 0;
                cellName57.Border = 0;
                cellName57.PaddingTop = 15;
                cellName57.PaddingBottom = 15;
                cellName57.BorderWidthLeft = 0;
                cellName57.BorderWidthRight = 0.9f;
                cellName57.BorderWidthTop = 0f;
                cellName57.BorderWidthBottom = 0.5f;
                tblform12.AddCell(cellName57);



                PdfPCell cellName58 = new PdfPCell(new Phrase("10. Amount of deductions from wages Men Women Children Total", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName58.HorizontalAlignment = 0;
                cellName58.Colspan = 0;
                cellName58.Border = 0;
                cellName58.PaddingTop = 15;
                cellName58.PaddingBottom = 15;
                cellName58.BorderWidthLeft = 0.5f;
                cellName58.BorderWidthRight = 0.2f;
                cellName58.BorderWidthTop = 0;
                cellName58.BorderWidthBottom = 0.5f;
                cellName58.PaddingLeft = 10;
                tblform12.AddCell(cellName58);




                PdfPCell cellName59 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName59.HorizontalAlignment = 0;
                cellName59.Colspan = 0;
                cellName59.Border = 0;
                cellName59.PaddingTop = 15;
                cellName59.PaddingBottom = 15;
                cellName59.BorderWidthLeft = 0;
                cellName59.BorderWidthRight = 0.9f;
                cellName59.BorderWidthTop = 0;
                cellName59.BorderWidthBottom = 0.5f;
                tblform12.AddCell(cellName59);



                PdfPCell cellName60 = new PdfPCell(new Phrase("11. whether the following have been provided-(i) Canteen	(ii) Rest-rooms	(iii) Drinking -water(iv) Creches(v) First-aid", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName60.HorizontalAlignment = 0;
                cellName60.Colspan = 0;
                cellName60.Border = 0;
                cellName60.PaddingTop = 20;
                cellName60.PaddingBottom = 20;
                cellName60.BorderWidthRight = 0.2f;
                cellName60.BorderWidthLeft = 0.5f;
                cellName60.BorderWidthTop = 0;
                cellName60.BorderWidthBottom = 0.5f;
                cellName60.PaddingLeft = 10;
                tblform12.AddCell(cellName60);




                PdfPCell cellName61 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName61.HorizontalAlignment = 0;
                cellName61.Colspan = 0;
                cellName61.Border = 0;
                cellName61.PaddingTop = 20;
                cellName61.PaddingBottom = 20;
                cellName61.BorderWidthRight = 0.9f;
                cellName61.BorderWidthTop = 0;
                cellName61.BorderWidthBottom = 0.5f;
                tblform12.AddCell(cellName61);




                PdfPCell cellNames62 = new PdfPCell(new Phrase(" (if the Answer 'yes state briefly standards provided) ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNames62.HorizontalAlignment = 0;
                cellNames62.Colspan = 2;
                cellNames62.Border = 0;

                tblform12.AddCell(cellNames62);

                tblform12.AddCell(cellspace3);

                PdfPCell cellNames63 = new PdfPCell(new Phrase(" place................... ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNames63.HorizontalAlignment = 0;
                cellNames63.Colspan = 1;
                cellNames63.Border = 0;

                tblform12.AddCell(cellNames63);




                PdfPCell cellNames64 = new PdfPCell(new Phrase("signature of constactor.................  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNames64.HorizontalAlignment = 0;
                cellNames64.Colspan = 1;
                cellNames64.Border = 0;

                tblform12.AddCell(cellNames64);




                PdfPCell cellNames65 = new PdfPCell(new Phrase(" date.................. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNames65.HorizontalAlignment = 0;
                cellNames65.Colspan = 0;
                cellNames65.Border = 0;

                tblform12.AddCell(cellNames65);







                document.Add(tblform12);




                #endregion Basic Information of the Employee


                document.NewPage();

                PdfPTable tblFingerprints = new PdfPTable(6);
                tblFingerprints.TotalWidth = 500f;
                tblFingerprints.LockedWidth = true;
                float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                tblFingerprints.SetWidths(widthfinger);

                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }



            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;
            }
        }

        protected void Btnform014_Click(object sender, EventArgs e)
        {




            int Fontsize = 13;
            string fontsyle = "verdana";

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";

            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string relationoccupation = "";
            string relationresidence = "";
            string relationplace = "";
            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Father' ";
            DataTable dtfather = config.ExecuteAdaptorAsyncWithQueryParams(query).Result;

            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }
            string query1 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Mother' ";
            DataTable dtmother = config.ExecuteAdaptorAsyncWithQueryParams(query1).Result;

            if (dtmother.Rows.Count > 0)
            {
                Mname = dtmother.Rows[0]["RName"].ToString();
                Mage = dtmother.Rows[0]["age"].ToString();
                if (Mage == "0")
                {
                    Mage = "";
                }
                else
                {
                    Mage = dtfather.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select EmpESINo from EmpESICodes where Empid='" + txtEmpid.Text + "'  ";
            DataTable dtesi = config.ExecuteAdaptorAsyncWithQueryParams(query2).Result;
            if (dtesi.Rows.Count > 0)
            {
                Esino = dtesi.Rows[0]["EmpESINo"].ToString();

            }



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            string Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
            string EmpGender = "";

            if (Gender == "True")
            {
                EmpGender = "Male";
            }
            if (Gender == "False")
            {
                EmpGender = "Female";
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prphone = dtEmpdetails.Rows[0]["prphone"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                string fileheader2 = Idno + "" + name + "" + "BIO DATA" + " .Pdf";
                Document document = new Document(PageSize.LEGAL.Rotate());

                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");
                #region

                PdfPTable tablenew = new PdfPTable(12);
                tablenew.TotalWidth = 900f;
                tablenew.LockedWidth = true;
                float[] width = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f };
                tablenew.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 12;
                cellspace.Border = 0;
                cellspace.PaddingTop = -5;




                PdfPCell cellHead = new PdfPCell(new Phrase("Form-XXIII ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 1;
                cellHead.Colspan = 12;
                cellHead.Border = 0;

                tablenew.AddCell(cellHead);






                PdfPCell cellreturn12 = new PdfPCell(new Phrase("REGISTER OF OVERTIME", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 12, Font.NORMAL, BaseColor.BLACK)));
                cellreturn12.HorizontalAlignment = 1;
                cellreturn12.Colspan = 12;
                cellreturn12.Border = 0;

                tablenew.AddCell(cellreturn12);



                PdfPCell cellreturns123 = new PdfPCell(new Phrase("[Rule 78(1)(a)(iii)]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 3, Font.BOLD, BaseColor.BLACK)));
                cellreturns123.HorizontalAlignment = 1;
                cellreturns123.Colspan = 12;
                cellreturns123.Border = 0;
                tablenew.AddCell(cellreturns123);

                tablenew.AddCell(cellspace);
                tablenew.AddCell(cellspace);


                PdfPCell cellNames40 = new PdfPCell(new Phrase("1.Name and address of contractor...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames40.HorizontalAlignment = 0;
                cellNames40.Colspan = 5;
                cellNames40.Border = 0;
                cellNames40.PaddingLeft = 0;
                tablenew.AddCell(cellNames40);



                PdfPCell cellNames43 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames43.HorizontalAlignment = 0;
                cellNames43.Colspan = 2;
                cellNames43.Border = 0;
                cellNames43.PaddingLeft = 0;
                tablenew.AddCell(cellNames43);




                PdfPCell cellNames41 = new PdfPCell(new Phrase("2.Name and address of establishment in/under	which contract is carried on...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames41.HorizontalAlignment = 0;
                cellNames41.Colspan = 5;
                cellNames41.Border = 0;
                cellNames41.PaddingLeft = 0;
                tablenew.AddCell(cellNames41);

                tablenew.AddCell(cellspace);



                PdfPCell cellNames42 = new PdfPCell(new Phrase("3.   Nature and location of work...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames42.HorizontalAlignment = 0;
                cellNames42.Colspan = 5;
                cellNames42.Border = 0;
                cellNames42.PaddingLeft = 0;
                tablenew.AddCell(cellNames42);



                PdfPCell cellNames44 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames44.HorizontalAlignment = 0;
                cellNames44.Colspan = 2;
                cellNames44.Border = 0;
                cellNames44.PaddingLeft = 0;
                tablenew.AddCell(cellNames44);

                PdfPCell cellNames45 = new PdfPCell(new Phrase("4.   Name and address of principal employer...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames45.HorizontalAlignment = 0;
                cellNames45.Colspan = 5;
                cellNames45.Border = 0;
                cellNames45.PaddingLeft = 0;
                tablenew.AddCell(cellNames45);

                tablenew.AddCell(cellspace);
                tablenew.AddCell(cellspace);
                tablenew.AddCell(cellspace);

                PdfPCell cellNames46 = new PdfPCell(new Phrase("Sl.No. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames46.HorizontalAlignment = 1;
                cellNames46.Colspan = 0;
                cellNames46.Border = 0;
                cellNames46.PaddingLeft = 0;
                cellNames46.PaddingTop = 20;
                cellNames46.PaddingBottom = 20;
                cellNames46.BorderWidthLeft = 0.5f;
                cellNames46.BorderWidthRight = 0.9f;
                cellNames46.BorderWidthTop = 0.5f;
                cellNames46.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNames46);

                PdfPCell cellNames47 = new PdfPCell(new Phrase("Name of work man", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames47.HorizontalAlignment = 1;
                cellNames47.Colspan = 0;
                cellNames47.Border = 0;
                cellNames47.PaddingLeft = 0;
                cellNames47.PaddingLeft = 0;
                cellNames47.PaddingTop = 20;
                cellNames47.PaddingBottom = 20;
                cellNames47.BorderWidthLeft = 0;
                cellNames47.BorderWidthRight = 0.9f;
                cellNames47.BorderWidthTop = 0.5f;

                cellNames47.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNames47);


                PdfPCell cellNames48 = new PdfPCell(new Phrase("Father/husband name ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames48.HorizontalAlignment = 1;
                cellNames48.Colspan = 0;
                cellNames48.Border = 0;
                cellNames48.PaddingLeft = 0;
                cellNames48.PaddingLeft = 0;
                cellNames48.PaddingLeft = 0;
                cellNames48.PaddingTop = 20;
                cellNames48.PaddingBottom = 20;
                cellNames48.BorderWidthLeft = 0;
                cellNames48.BorderWidthRight = 0.9f;
                cellNames48.BorderWidthTop = 0.5f;
                cellNames48.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNames48);

                PdfPCell cellNames49 = new PdfPCell(new Phrase("Sex", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames49.HorizontalAlignment = 1;
                cellNames49.Colspan = 0;
                cellNames49.Border = 0;
                cellNames49.PaddingLeft = 0;
                cellNames49.PaddingLeft = 0;
                cellNames49.PaddingLeft = 0;
                cellNames49.PaddingTop = 20;
                cellNames49.PaddingBottom = 20;
                cellNames49.BorderWidthLeft = 0;
                cellNames49.BorderWidthRight = 0.9f;
                cellNames49.BorderWidthTop = 0.5f;
                cellNames49.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNames49);

                PdfPCell cellNames50 = new PdfPCell(new Phrase("Designation of nature of employment ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames50.HorizontalAlignment = 1;
                cellNames50.Colspan = 0;
                cellNames50.Border = 0;
                cellNames50.PaddingLeft = 0;
                cellNames50.PaddingLeft = 0;
                cellNames50.PaddingLeft = 0;
                cellNames50.PaddingTop = 20;
                cellNames50.PaddingBottom = 20;
                cellNames50.BorderWidthLeft = 0;
                cellNames50.BorderWidthRight = 0.9f;
                cellNames50.BorderWidthTop = 0.5f;
                cellNames50.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNames50);

                PdfPCell cellNames51 = new PdfPCell(new Phrase("Date on which overtime worked", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames51.HorizontalAlignment = 1;
                cellNames51.Colspan = 0;
                cellNames51.Border = 0;
                cellNames51.PaddingLeft = 0;
                cellNames51.PaddingLeft = 0;
                cellNames51.PaddingLeft = 0;
                cellNames51.PaddingTop = 20;
                cellNames51.PaddingBottom = 20;
                cellNames51.BorderWidthLeft = 0;
                cellNames51.BorderWidthRight = 0.9f;
                cellNames51.BorderWidthTop = 0.5f;
                cellNames51.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNames51);

                PdfPCell cellNames52 = new PdfPCell(new Phrase("Total over time worked or production in case of piece of rated ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames52.HorizontalAlignment = 1;
                cellNames52.Colspan = 0;
                cellNames52.Border = 0;
                cellNames52.PaddingLeft = 0;
                cellNames52.PaddingLeft = 0;
                cellNames52.PaddingLeft = 0;
                cellNames52.PaddingTop = 20;
                cellNames52.PaddingBottom = 20;
                cellNames52.BorderWidthLeft = 0;
                cellNames52.BorderWidthRight = 0.9f;
                cellNames52.BorderWidthTop = 0.5f;
                cellNames52.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNames52);

                PdfPCell cellNames53 = new PdfPCell(new Phrase("Normal rate of wages", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames53.HorizontalAlignment = 1;
                cellNames53.Colspan = 0;
                cellNames53.Border = 0;
                cellNames53.PaddingLeft = 0;
                cellNames53.PaddingLeft = 0;
                cellNames53.PaddingLeft = 0;
                cellNames53.PaddingTop = 20;
                cellNames53.PaddingBottom = 20;
                cellNames53.BorderWidthLeft = 0;
                cellNames53.BorderWidthRight = 0.9f;
                cellNames53.BorderWidthTop = 0.5f;
                cellNames53.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNames53);

                PdfPCell cellNames54 = new PdfPCell(new Phrase("Over time rate of wages", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames54.HorizontalAlignment = 1;
                cellNames54.Colspan = 0;
                cellNames54.Border = 0;
                cellNames54.PaddingLeft = 0;
                cellNames54.PaddingLeft = 0;
                cellNames54.PaddingLeft = 0;
                cellNames54.PaddingTop = 20;
                cellNames54.PaddingBottom = 20;
                cellNames54.BorderWidthLeft = 0;
                cellNames54.BorderWidthRight = 0.9f;
                cellNames54.BorderWidthTop = 0.5f;
                cellNames54.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNames54);

                PdfPCell cellNames55 = new PdfPCell(new Phrase("Over time earnings ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames55.HorizontalAlignment = 1;
                cellNames55.Colspan = 0;
                cellNames55.Border = 0;
                cellNames55.PaddingLeft = 0;
                cellNames55.PaddingTop = 20;
                cellNames55.PaddingBottom = 20;
                cellNames55.BorderWidthLeft = 0;
                cellNames55.BorderWidthRight = 0.9f;
                cellNames55.BorderWidthTop = 0.5f;
                cellNames55.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNames55);

                PdfPCell cellNames56 = new PdfPCell(new Phrase("Date on which overtime wagespaid", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames56.HorizontalAlignment = 1;
                cellNames56.Colspan = 0;
                cellNames56.Border = 0;
                cellNames56.PaddingLeft = 0;
                cellNames56.PaddingTop = 20;
                cellNames56.PaddingBottom = 20;
                cellNames56.BorderWidthLeft = 0;
                cellNames56.BorderWidthRight = 0.9f;
                cellNames56.BorderWidthTop = 0.5f;
                cellNames56.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNames56);


                PdfPCell cellNames57 = new PdfPCell(new Phrase("Remarks", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames57.HorizontalAlignment = 1;
                cellNames57.Colspan = 0;
                cellNames57.Border = 0;
                cellNames57.PaddingLeft = 0;
                cellNames57.PaddingLeft = 0;
                cellNames57.PaddingLeft = 0;
                cellNames57.PaddingTop = 20;
                cellNames57.PaddingBottom = 20;
                cellNames57.BorderWidthLeft = 0;
                cellNames57.BorderWidthRight = 0.9f;
                cellNames57.BorderWidthTop = 0.5f;
                cellNames57.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNames57);

                PdfPCell cellsNames47 = new PdfPCell(new Phrase("  1 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames47.HorizontalAlignment = 1;
                cellsNames47.Colspan = 0;
                cellsNames47.Border = 0;
                cellsNames47.PaddingLeft = 0;
                cellsNames47.PaddingLeft = 0;
                cellsNames47.PaddingLeft = 0;
                cellsNames47.PaddingTop = 10;
                cellsNames47.PaddingBottom = 10;
                cellsNames47.BorderWidthLeft = 0.9f;
                cellsNames47.BorderWidthRight = 0.9f;
                cellsNames47.BorderWidthTop = 0;
                cellsNames47.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNames47);

                PdfPCell cellsNamess47 = new PdfPCell(new Phrase("  2", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNamess47.HorizontalAlignment = 1;
                cellsNamess47.Colspan = 0;
                cellsNamess47.Border = 0;
                cellsNamess47.PaddingLeft = 0;
                cellsNamess47.PaddingTop = 10;
                cellsNamess47.PaddingBottom = 10;
                cellsNamess47.BorderWidthLeft = 0;
                cellsNamess47.BorderWidthRight = 0.9f;
                cellsNamess47.BorderWidthTop = 0;
                cellsNamess47.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNamess47);

                PdfPCell cellsNames48 = new PdfPCell(new Phrase("  3 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames48.HorizontalAlignment = 1;
                cellsNames48.Colspan = 0;
                cellsNames48.Border = 0;
                cellsNames48.PaddingLeft = 0;
                cellsNames48.PaddingTop = 10;
                cellsNames48.PaddingBottom = 10;
                cellsNames48.BorderWidthLeft = 0;
                cellsNames48.BorderWidthRight = 0.9f;
                cellsNames48.BorderWidthTop = 0;
                cellsNames48.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNames48);

                PdfPCell cellsNames49 = new PdfPCell(new Phrase("  4", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames49.HorizontalAlignment = 1;
                cellsNames49.Colspan = 0;
                cellsNames49.Border = 0;
                cellsNames49.PaddingLeft = 0;
                cellsNames49.PaddingTop = 10;
                cellsNames49.PaddingBottom = 10;
                cellsNames49.BorderWidthLeft = 0;
                cellsNames49.BorderWidthRight = 0.9f;
                cellsNames49.BorderWidthTop = 0;
                cellsNames49.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNames49);


                PdfPCell cellsNames50 = new PdfPCell(new Phrase("  5 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames50.HorizontalAlignment = 1;
                cellsNames50.Colspan = 0;
                cellsNames50.Border = 0;
                cellsNames50.PaddingLeft = 0;
                cellsNames50.PaddingTop = 10;
                cellsNames50.PaddingBottom = 10;
                cellsNames50.BorderWidthLeft = 0;
                cellsNames50.BorderWidthRight = 0.9f;
                cellsNames50.BorderWidthTop = 0;
                cellsNames50.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNames50);

                PdfPCell cellsNames51 = new PdfPCell(new Phrase("  6", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames51.HorizontalAlignment = 1;
                cellsNames51.Colspan = 0;
                cellsNames51.Border = 0;
                cellsNames51.PaddingLeft = 0;
                cellsNames51.PaddingTop = 10;
                cellsNames51.PaddingBottom = 10;
                cellsNames51.BorderWidthLeft = 0;
                cellsNames51.BorderWidthRight = 0.9f;
                cellsNames51.BorderWidthTop = 0;
                cellsNames51.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNames51);



                PdfPCell cellsNames52 = new PdfPCell(new Phrase("  7 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames52.HorizontalAlignment = 1;
                cellsNames52.Colspan = 0;
                cellsNames52.Border = 0;
                cellsNames52.PaddingLeft = 0;
                cellsNames52.PaddingTop = 10;
                cellsNames52.PaddingBottom = 10;
                cellsNames52.BorderWidthLeft = 0;
                cellsNames52.BorderWidthRight = 0.9f;
                cellsNames52.BorderWidthTop = 0;
                cellsNames52.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNames52);

                PdfPCell cellsNames53 = new PdfPCell(new Phrase("  8", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames53.HorizontalAlignment = 1;
                cellsNames53.Colspan = 0;
                cellsNames53.Border = 0;
                cellsNames53.PaddingLeft = 0;
                cellsNames53.PaddingTop = 10;
                cellsNames53.PaddingBottom = 10;
                cellsNames53.BorderWidthLeft = 0;
                cellsNames53.BorderWidthRight = 0.9f;
                cellsNames53.BorderWidthTop = 0;
                cellsNames53.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNames53);



                PdfPCell cellsNames54 = new PdfPCell(new Phrase("  9", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames54.HorizontalAlignment = 1;
                cellsNames54.Colspan = 0;
                cellsNames54.Border = 0;
                cellsNames54.PaddingLeft = 0;
                cellsNames54.PaddingTop = 10;
                cellsNames54.PaddingBottom = 10;
                cellsNames54.BorderWidthLeft = 0;
                cellsNames54.BorderWidthRight = 0.9f;
                cellsNames54.BorderWidthTop = 0;
                cellsNames54.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNames54);



                PdfPCell cellsNames55 = new PdfPCell(new Phrase("  10", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames55.HorizontalAlignment = 1;
                cellsNames55.Colspan = 0;
                cellsNames55.Border = 0;
                cellsNames55.PaddingLeft = 0;
                cellsNames55.PaddingTop = 10;
                cellsNames55.PaddingBottom = 10;
                cellsNames55.BorderWidthLeft = 0;
                cellsNames55.BorderWidthRight = 0.9f;
                cellsNames55.BorderWidthTop = 0;
                cellsNames55.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNames55);

                PdfPCell cellsNames56 = new PdfPCell(new Phrase("  11", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames56.HorizontalAlignment = 1;
                cellsNames56.Colspan = 0;
                cellsNames56.Border = 0;
                cellsNames56.PaddingLeft = 0;
                cellsNames56.PaddingTop = 10;
                cellsNames56.PaddingBottom = 10;
                cellsNames56.BorderWidthLeft = 0;
                cellsNames56.BorderWidthRight = 0.9f;
                cellsNames56.BorderWidthTop = 0;
                cellsNames56.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNames56);



                PdfPCell cellsNames57 = new PdfPCell(new Phrase("  12", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames57.HorizontalAlignment = 1;
                cellsNames57.Colspan = 0;
                cellsNames57.Border = 0;
                cellsNames57.PaddingLeft = 0;
                cellsNames57.PaddingTop = 10;
                cellsNames57.PaddingBottom = 10;
                cellsNames57.BorderWidthLeft = 0;
                cellsNames57.BorderWidthRight = 0.9f;
                cellsNames57.BorderWidthTop = 0;
                cellsNames57.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNames57);


                document.Add(tablenew);



                #endregion Basic Information of the Employee


                document.NewPage();

                PdfPTable tblFingerprints = new PdfPTable(6);
                tblFingerprints.TotalWidth = 500f;
                tblFingerprints.LockedWidth = true;
                float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                tblFingerprints.SetWidths(widthfinger);

                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";


                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }



            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;

            }
        }
        //
        protected void BtnformVI_Click(object sender, EventArgs e)
        {



            int Fontsize = 13;
            string fontsyle = "verdana";

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";

            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string relationoccupation = "";
            string relationresidence = "";
            string relationplace = "";
            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Father' ";
            DataTable dtfather = config.ExecuteAdaptorAsyncWithQueryParams(query).Result;

            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }
            string query1 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Mother' ";
            DataTable dtmother = config.ExecuteAdaptorAsyncWithQueryParams(query1).Result;

            if (dtmother.Rows.Count > 0)
            {
                Mname = dtmother.Rows[0]["RName"].ToString();
                Mage = dtmother.Rows[0]["age"].ToString();
                if (Mage == "0")
                {
                    Mage = "";
                }
                else
                {
                    Mage = dtfather.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select EmpESINo from EmpESICodes where Empid='" + txtEmpid.Text + "'  ";
            DataTable dtesi = config.ExecuteAdaptorAsyncWithQueryParams(query2).Result;
            if (dtesi.Rows.Count > 0)
            {
                Esino = dtesi.Rows[0]["EmpESINo"].ToString();

            }



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            string Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
            string EmpGender = "";

            if (Gender == "True")
            {
                EmpGender = "Male";
            }
            if (Gender == "False")
            {
                EmpGender = "Female";
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prphone = dtEmpdetails.Rows[0]["prphone"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                string fileheader2 = Idno + "" + name + "" + "BIO DATA" + " .Pdf";

                Document document = new Document(PageSize.LEGAL);
                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");
                #region

                PdfPTable tablenewa = new PdfPTable(12);
                tablenewa.TotalWidth = 500f;
                tablenewa.LockedWidth = true;
                float[] width = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f };
                tablenewa.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 12;
                cellspace.Border = 0;
                cellspace.PaddingTop = -5;

                PdfPCell cellHead = new PdfPCell(new Phrase(" [FORM VI-A] ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 1;
                cellHead.Colspan = 12;
                cellHead.Border = 0;

                tablenewa.AddCell(cellHead);

                PdfPCell cellNOTICE = new PdfPCell(new Phrase(" NOTICE OF COMMENCEMENT/COMPLETION OF CONTRACT WORK", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 13, Font.BOLD, BaseColor.BLACK)));
                cellNOTICE.HorizontalAlignment = 1;
                cellNOTICE.Colspan = 12;
                cellNOTICE.Border = 0;

                tablenewa.AddCell(cellNOTICE);

                PdfPCell cellRule = new PdfPCell(new Phrase(" [Rule 25(2)(viii)]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellRule.HorizontalAlignment = 1;
                cellRule.Colspan = 12;
                cellRule.Border = 0;
                tablenewa.AddCell(cellRule);

                tablenewa.AddCell(cellspace);
                tablenewa.AddCell(cellspace);

                PdfPCell cellShri = new PdfPCell(new Phrase("	I/We, Shri/M/s. (Name and address of contractor) hereby intimate that the contract work (Name of work)........................in estblishment of the........................(Name and address of principal employer)...........for which license No. ..................dated..................has been issued to me/us by the Licen-sing Officer (name of the headquarters), has been commenced/completed with effect from (date) on (date).", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellShri.HorizontalAlignment = 0;
                cellShri.Colspan = 12;
                cellShri.Border = 0;
                cellShri.PaddingLeft = 0;
                tablenewa.AddCell(cellShri);

                tablenewa.AddCell(cellspace);
                tablenewa.AddCell(cellspace);

                PdfPCell cellTO = new PdfPCell(new Phrase(" TO ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellTO.HorizontalAlignment = 0;
                cellTO.Colspan = 6;
                cellTO.Border = 0;
                cellTO.PaddingLeft = 0;
                tablenewa.AddCell(cellTO);

                PdfPCell cellSignatur = new PdfPCell(new Phrase("Signature of Contractor (s)", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellSignatur.HorizontalAlignment = 0;
                cellSignatur.Colspan = 6;
                cellSignatur.Border = 0;
                cellSignatur.PaddingLeft = 0;
                tablenewa.AddCell(cellSignatur);

                PdfPCell cellTHEINSPECTOR = new PdfPCell(new Phrase("  THE INSPECTOR", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellTHEINSPECTOR.HorizontalAlignment = 0;
                cellTHEINSPECTOR.Colspan = 12;
                cellTHEINSPECTOR.Border = 0;
                cellTHEINSPECTOR.PaddingLeft = 0;
                tablenewa.AddCell(cellTHEINSPECTOR);

                PdfPCell cellINSPECTOR = new PdfPCell(new Phrase("   .......................... ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellINSPECTOR.HorizontalAlignment = 0;
                cellINSPECTOR.Colspan = 12;
                cellINSPECTOR.Border = 0;
                cellINSPECTOR.PaddingLeft = 0;
                tablenewa.AddCell(cellINSPECTOR);

                PdfPCell cellNamesINSPECTOR = new PdfPCell(new Phrase("   .......................... ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamesINSPECTOR.HorizontalAlignment = 0;
                cellNamesINSPECTOR.Colspan = 5;
                cellNamesINSPECTOR.Border = 0;
                cellNamesINSPECTOR.PaddingLeft = 0;
                tablenewa.AddCell(cellNamesINSPECTOR);

                tablenewa.AddCell(cellspace);
                tablenewa.AddCell(cellspace);
                tablenewa.AddCell(cellspace);

                document.Add(tablenewa);

                #endregion Basic Information of the Employee

                document.NewPage();

                PdfPTable tblFingerprints = new PdfPTable(6);
                tblFingerprints.TotalWidth = 500f;
                tblFingerprints.LockedWidth = true;
                float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                tblFingerprints.SetWidths(widthfinger);

                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }



            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;
            }
        }

        protected void BtnformXVII1_Click(object sender, EventArgs e)
        {





            int Fontsize = 13;
            string fontsyle = "verdana";

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";

            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string relationoccupation = "";
            string relationresidence = "";
            string relationplace = "";
            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Father' ";
            DataTable dtfather = config.ExecuteAdaptorAsyncWithQueryParams(query).Result;

            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }
            string query1 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Mother' ";
            DataTable dtmother = config.ExecuteAdaptorAsyncWithQueryParams(query1).Result;

            if (dtmother.Rows.Count > 0)
            {
                Mname = dtmother.Rows[0]["RName"].ToString();
                Mage = dtmother.Rows[0]["age"].ToString();
                if (Mage == "0")
                {
                    Mage = "";
                }
                else
                {
                    Mage = dtfather.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select EmpESINo from EmpESICodes where Empid='" + txtEmpid.Text + "'  ";
            DataTable dtesi = config.ExecuteAdaptorAsyncWithQueryParams(query2).Result;
            if (dtesi.Rows.Count > 0)
            {
                Esino = dtesi.Rows[0]["EmpESINo"].ToString();

            }



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            string Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
            string EmpGender = "";

            if (Gender == "True")
            {
                EmpGender = "Male";
            }
            if (Gender == "False")
            {
                EmpGender = "Female";
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prphone = dtEmpdetails.Rows[0]["prphone"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                string fileheader2 = Idno + "" + name + "" + "BIO DATA" + " .Pdf";
                Document document = new Document(PageSize.LEGAL.Rotate());

                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");
                #region

                PdfPTable tablecoloum = new PdfPTable(16);
                tablecoloum.TotalWidth = 950f;
                tablecoloum.LockedWidth = true;
                float[] width = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f };
                tablecoloum.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 16;
                cellspace.Border = 0;
                cellspace.PaddingTop = -5;

                PdfPCell cellHead = new PdfPCell(new Phrase("Form-XVII ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 1;
                cellHead.Colspan = 16;
                cellHead.Border = 0;

                tablecoloum.AddCell(cellHead);

                PdfPCell cellreturn12 = new PdfPCell(new Phrase("REGISTER OF WAGES", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 12, Font.BOLD, BaseColor.BLACK)));
                cellreturn12.HorizontalAlignment = 1;
                cellreturn12.Colspan = 16;
                cellreturn12.Border = 0;

                tablecoloum.AddCell(cellreturn12);

                PdfPCell cellreturns123 = new PdfPCell(new Phrase("[Rule 78(1)(a)(i)]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 3, Font.BOLD, BaseColor.BLACK)));
                cellreturns123.HorizontalAlignment = 1;
                cellreturns123.Colspan = 16;
                cellreturns123.Border = 0;
                tablecoloum.AddCell(cellreturns123);

                tablecoloum.AddCell(cellspace);
                tablecoloum.AddCell(cellspace);
                tablecoloum.AddCell(cellspace);






                PdfPCell celladdressof = new PdfPCell(new Phrase("Name and address of contractor..................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celladdressof.HorizontalAlignment = 0;
                celladdressof.Colspan = 7;
                celladdressof.Border = 0;
                celladdressof.PaddingLeft = 0;
                tablecoloum.AddCell(celladdressof);

                PdfPCell cellNames43 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNames43.HorizontalAlignment = 0;
                cellNames43.Colspan = 2;
                cellNames43.Border = 0;
                cellNames43.PaddingLeft = 0;
                tablecoloum.AddCell(cellNames43);

                PdfPCell celladdresso = new PdfPCell(new Phrase("Name and address of establishment in/under	which contract is carried on...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celladdresso.HorizontalAlignment = 0;
                celladdresso.Colspan = 7;
                celladdresso.Border = 0;
                celladdresso.PaddingLeft = 0;
                tablecoloum.AddCell(celladdresso);

                tablecoloum.AddCell(cellspace);

                PdfPCell cellNatureand = new PdfPCell(new Phrase("Nature and location of work...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNatureand.HorizontalAlignment = 0;
                cellNatureand.Colspan = 7;
                cellNatureand.Border = 0;
                cellNatureand.PaddingLeft = 0;
                tablecoloum.AddCell(cellNatureand);

                PdfPCell cellNaturean = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNaturean.HorizontalAlignment = 0;
                cellNaturean.Colspan = 2;
                cellNaturean.Border = 0;
                cellNaturean.PaddingLeft = 0;
                tablecoloum.AddCell(cellNaturean);

                PdfPCell cellprincipalem = new PdfPCell(new Phrase("Name and address of principal employer...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellprincipalem.HorizontalAlignment = 0;
                cellprincipalem.Colspan = 7;
                cellprincipalem.Border = 0;
                cellprincipalem.PaddingLeft = 0;
                tablecoloum.AddCell(cellprincipalem);

                tablecoloum.AddCell(cellspace);

                PdfPCell cellNature = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNature.HorizontalAlignment = 0;
                cellNature.Colspan = 7;
                cellNature.Border = 0;
                cellNature.PaddingLeft = 0;
                tablecoloum.AddCell(cellNature);


                PdfPCell cellPeriod = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellPeriod.HorizontalAlignment = 0;
                cellPeriod.Colspan = 2;
                cellPeriod.Border = 0;
                cellPeriod.PaddingLeft = 0;
                tablecoloum.AddCell(cellPeriod);


                PdfPCell cellMonthly = new PdfPCell(new Phrase("Wage Period: Monthly.................................................. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellMonthly.HorizontalAlignment = 0;
                cellMonthly.Colspan = 7;
                cellMonthly.Border = 0;
                cellMonthly.PaddingLeft = 0;
                tablecoloum.AddCell(cellMonthly);

                tablecoloum.AddCell(cellspace);
                tablecoloum.AddCell(cellspace);
                tablecoloum.AddCell(cellspace);



                PdfPCell cellempty1 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty1.HorizontalAlignment = 0;
                cellempty1.Colspan = 7;

                tablecoloum.AddCell(cellempty1);



                PdfPCell cellempty2 = new PdfPCell(new Phrase("Amount of wages earned", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty2.HorizontalAlignment = 1;
                cellempty2.Colspan = 4;

                tablecoloum.AddCell(cellempty2);


                PdfPCell cellempty3 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty3.HorizontalAlignment = 0;
                cellempty3.Colspan = 5;

                tablecoloum.AddCell(cellempty3);







                PdfPCell cellSlNo = new PdfPCell(new Phrase("Sl.No. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellSlNo.HorizontalAlignment = 1;
                cellSlNo.Colspan = 0;
                tablecoloum.AddCell(cellSlNo);

                PdfPCell cellworkman = new PdfPCell(new Phrase("Name of workman", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellworkman.HorizontalAlignment = 1;
                cellworkman.Colspan = 0;

                tablecoloum.AddCell(cellworkman);

                PdfPCell cellSerial = new PdfPCell(new Phrase("Serial in the register of workman ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellSerial.HorizontalAlignment = 1;
                cellSerial.Colspan = 0;
                tablecoloum.AddCell(cellSerial);

                PdfPCell celldone = new PdfPCell(new Phrase("Designation/of nature of work done", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldone.HorizontalAlignment = 1;
                celldone.Colspan = 0;
                tablecoloum.AddCell(celldone);

                PdfPCell celldays = new PdfPCell(new Phrase("No.of days worked ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldays.HorizontalAlignment = 1;
                celldays.Colspan = 0;

                tablecoloum.AddCell(celldays);

                PdfPCell cellunit = new PdfPCell(new Phrase("unit of work done", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellunit.HorizontalAlignment = 1;
                cellunit.Colspan = 0;

                tablecoloum.AddCell(cellunit);

                PdfPCell cellrate = new PdfPCell(new Phrase("daily rate of wages/piece rate ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellrate.HorizontalAlignment = 1;
                cellrate.Colspan = 0;

                tablecoloum.AddCell(cellrate);

                PdfPCell cellBasic = new PdfPCell(new Phrase(" Basic wages", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellBasic.HorizontalAlignment = 1;
                cellBasic.Colspan = 0;

                tablecoloum.AddCell(cellBasic);

                PdfPCell cellDearness = new PdfPCell(new Phrase("Dearness allowancess", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellDearness.HorizontalAlignment = 1;
                cellDearness.Colspan = 0;
                tablecoloum.AddCell(cellDearness);

                PdfPCell cellOvetime = new PdfPCell(new Phrase("Overtime ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellOvetime.HorizontalAlignment = 1;
                cellOvetime.Colspan = 0;
                tablecoloum.AddCell(cellOvetime);

                PdfPCell cellOther = new PdfPCell(new Phrase("Other cash payment (Narture of payment to be indicated)", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellOther.HorizontalAlignment = 1;
                cellOther.Colspan = 0;

                tablecoloum.AddCell(cellOther);

                PdfPCell cellTotal = new PdfPCell(new Phrase("Total", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellTotal.HorizontalAlignment = 1;
                cellTotal.Colspan = 0;

                tablecoloum.AddCell(cellTotal);


                PdfPCell cellDeactions = new PdfPCell(new Phrase("Deactions if any(indicate nature)", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellDeactions.HorizontalAlignment = 1;
                cellDeactions.Colspan = 0;

                //cellDeactions.BorderWidthBottom = 0.5f;
                tablecoloum.AddCell(cellDeactions);

                PdfPCell cellNet = new PdfPCell(new Phrase("Net amount paid ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNet.HorizontalAlignment = 1;
                cellNet.Colspan = 0;

                tablecoloum.AddCell(cellNet);

                PdfPCell cellthumb = new PdfPCell(new Phrase("Signature/thumb impression of workman", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellthumb.HorizontalAlignment = 1;
                cellthumb.Colspan = 0;

                tablecoloum.AddCell(cellthumb);

                PdfPCell cellinitial = new PdfPCell(new Phrase("initial of contractors or his representative", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellinitial.HorizontalAlignment = 1;
                cellinitial.Colspan = 0;

                tablecoloum.AddCell(cellinitial);



                PdfPCell cellsName1 = new PdfPCell(new Phrase("  1 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName1.HorizontalAlignment = 1;
                cellsName1.Colspan = 0;
                cellsName1.PaddingBottom = 5f;
                tablecoloum.AddCell(cellsName1);

                PdfPCell cellsName2 = new PdfPCell(new Phrase("  2", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName2.HorizontalAlignment = 1;
                cellsName2.Colspan = 0;
                cellsName2.PaddingBottom = 5f;
                tablecoloum.AddCell(cellsName2);

                PdfPCell cellsName3 = new PdfPCell(new Phrase("  3 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName3.HorizontalAlignment = 1;
                cellsName3.Colspan = 0;
                cellsName3.PaddingBottom = 5f;
                tablecoloum.AddCell(cellsName3);

                PdfPCell cellsName4 = new PdfPCell(new Phrase("  4", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName4.HorizontalAlignment = 1;
                cellsName4.Colspan = 0;
                cellsName4.PaddingBottom = 5f;
                tablecoloum.AddCell(cellsName4);

                PdfPCell cellsName5 = new PdfPCell(new Phrase("  5 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName5.HorizontalAlignment = 1;
                cellsName5.Colspan = 0;
                cellsName5.PaddingBottom = 5f;
                tablecoloum.AddCell(cellsName5);

                PdfPCell cellsName6 = new PdfPCell(new Phrase("  6", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName6.HorizontalAlignment = 1;
                cellsName6.Colspan = 0;
                cellsName6.PaddingBottom = 5f;
                tablecoloum.AddCell(cellsName6);

                PdfPCell cellsName7 = new PdfPCell(new Phrase("  7 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName7.HorizontalAlignment = 1;
                cellsName7.Colspan = 0;
                cellsName7.PaddingBottom = 5f;
                tablecoloum.AddCell(cellsName7);

                PdfPCell cellsName8 = new PdfPCell(new Phrase("  8", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName8.HorizontalAlignment = 1;
                cellsName8.Colspan = 0;
                cellsName8.PaddingBottom = 5f;
                tablecoloum.AddCell(cellsName8);

                PdfPCell cellsName9 = new PdfPCell(new Phrase("  9", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName9.HorizontalAlignment = 1;
                cellsName9.Colspan = 0;
                cellsName9.PaddingBottom = 5f;
                tablecoloum.AddCell(cellsName9);

                PdfPCell cellsName10 = new PdfPCell(new Phrase("  10", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName10.HorizontalAlignment = 1;
                cellsName10.Colspan = 0;
                cellsName10.PaddingBottom = 5f;
                tablecoloum.AddCell(cellsName10);

                PdfPCell cellsName11 = new PdfPCell(new Phrase("  11", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName11.HorizontalAlignment = 1;
                cellsName11.Colspan = 0;
                cellsName11.PaddingBottom = 5f;
                tablecoloum.AddCell(cellsName11);

                PdfPCell cellsName12 = new PdfPCell(new Phrase("  12", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName12.HorizontalAlignment = 1;
                cellsName12.Colspan = 0;
                cellsName12.PaddingBottom = 5f;
                tablecoloum.AddCell(cellsName12);


                PdfPCell cellsName13 = new PdfPCell(new Phrase("  13", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName13.HorizontalAlignment = 1;
                cellsName13.Colspan = 0;
                cellsName13.PaddingBottom = 5f;
                tablecoloum.AddCell(cellsName13);

                PdfPCell cellsName14 = new PdfPCell(new Phrase("  14", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName14.HorizontalAlignment = 1;
                cellsName14.Colspan = 0;
                cellsName14.PaddingBottom = 5f;
                tablecoloum.AddCell(cellsName14);

                PdfPCell cellsName15 = new PdfPCell(new Phrase("  15", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName15.HorizontalAlignment = 1;
                cellsName15.Colspan = 0;
                cellsName15.PaddingBottom = 5f;
                tablecoloum.AddCell(cellsName15);

                PdfPCell cellsName16 = new PdfPCell(new Phrase("  16", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName16.HorizontalAlignment = 1;
                cellsName16.Colspan = 0;
                cellsName16.PaddingBottom = 5f;
                tablecoloum.AddCell(cellsName16);

                document.Add(tablecoloum);

                #endregion Basic Information of the Employee

                document.NewPage();

                PdfPTable tblFingerprints = new PdfPTable(6);
                tblFingerprints.TotalWidth = 500f;
                tblFingerprints.LockedWidth = true;
                float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                tblFingerprints.SetWidths(widthfinger);

                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }

            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;

            }
        }

        protected void BtnformXII_Click(object sender, EventArgs e)
        {




            int Fontsize = 13;
            string fontsyle = "verdana";

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";

            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string relationoccupation = "";
            string relationresidence = "";
            string relationplace = "";
            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Father' ";
            DataTable dtfather = config.ExecuteAdaptorAsyncWithQueryParams(query).Result;

            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }
            string query1 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Mother' ";
            DataTable dtmother = config.ExecuteAdaptorAsyncWithQueryParams(query1).Result;

            if (dtmother.Rows.Count > 0)
            {
                Mname = dtmother.Rows[0]["RName"].ToString();
                Mage = dtmother.Rows[0]["age"].ToString();
                if (Mage == "0")
                {
                    Mage = "";
                }
                else
                {
                    Mage = dtfather.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select EmpESINo from EmpESICodes where Empid='" + txtEmpid.Text + "'  ";
            DataTable dtesi = config.ExecuteAdaptorAsyncWithQueryParams(query2).Result;
            if (dtesi.Rows.Count > 0)
            {
                Esino = dtesi.Rows[0]["EmpESINo"].ToString();

            }



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            string Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
            string EmpGender = "";

            if (Gender == "True")
            {
                EmpGender = "Male";
            }
            if (Gender == "False")
            {
                EmpGender = "Female";
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prphone = dtEmpdetails.Rows[0]["prphone"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                string fileheader2 = Idno + "" + name + "" + "BIO DATA" + " .Pdf";
                Document document = new Document(PageSize.LEGAL.Rotate());

                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");
                #region

                PdfPTable tablecall1 = new PdfPTable(7);
                tablecall1.TotalWidth = 900f;
                tablecall1.LockedWidth = true;
                float[] width = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, 2f };
                tablecall1.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 7;
                cellspace.Border = 0;
                cellspace.PaddingTop = -5;

                PdfPCell cellHead = new PdfPCell(new Phrase("Form-XII ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 1;
                cellHead.Colspan = 7;
                cellHead.Border = 0;

                tablecall1.AddCell(cellHead);

                PdfPCell cellreturn12 = new PdfPCell(new Phrase("REGISTER OF CONTRACTORS", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 12, Font.BOLD, BaseColor.BLACK)));
                cellreturn12.HorizontalAlignment = 1;
                cellreturn12.Colspan = 7;
                cellreturn12.Border = 0;

                tablecall1.AddCell(cellreturn12);

                PdfPCell cellRule74 = new PdfPCell(new Phrase("[Rule 74]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 3, Font.BOLD, BaseColor.BLACK)));
                cellRule74.HorizontalAlignment = 1;
                cellRule74.Colspan = 7;
                cellRule74.Border = 0;
                tablecall1.AddCell(cellRule74);

                tablecall1.AddCell(cellspace);
                tablecall1.AddCell(cellspace);
                tablecall1.AddCell(cellspace);

                PdfPCell celladdressofemp = new PdfPCell(new Phrase("1.Name and address of the Principal Employer..................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celladdressofemp.HorizontalAlignment = 0;
                celladdressofemp.Colspan = 7;
                celladdressofemp.Border = 0;
                celladdressofemp.PaddingLeft = 0;
                tablecall1.AddCell(celladdressofemp);

                PdfPCell cellestablishment = new PdfPCell(new Phrase("2.Name and address of the establishment............................................................................................................................. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellestablishment.HorizontalAlignment = 0;
                cellestablishment.Colspan = 7;
                cellestablishment.Border = 0;
                cellestablishment.PaddingLeft = 0;
                tablecall1.AddCell(cellestablishment);

                tablecall1.AddCell(cellspace);
                tablecall1.AddCell(cellspace);
                tablecall1.AddCell(cellspace);

                PdfPCell cellempty4 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty4.HorizontalAlignment = 0;
                cellempty4.Colspan = 4;

                tablecall1.AddCell(cellempty4);

                PdfPCell cellempty5 = new PdfPCell(new Phrase("Period of Contract", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty5.HorizontalAlignment = 1;
                cellempty5.Colspan = 2;

                tablecall1.AddCell(cellempty5);


                PdfPCell cellempty6 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty6.HorizontalAlignment = 1;
                cellempty6.Colspan = 1;

                tablecall1.AddCell(cellempty6);



                PdfPCell cellSlNo1 = new PdfPCell(new Phrase("Sl.No. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellSlNo1.HorizontalAlignment = 1;
                cellSlNo1.Colspan = 0;
                tablecall1.AddCell(cellSlNo1);


                PdfPCell cellworkman1 = new PdfPCell(new Phrase("Name and address of Contractor", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellworkman1.HorizontalAlignment = 1;
                cellworkman1.Colspan = 0;

                tablecall1.AddCell(cellworkman1);




                PdfPCell cellNature = new PdfPCell(new Phrase("Nature of work on contract", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNature.HorizontalAlignment = 1;
                cellNature.Colspan = 0;

                tablecall1.AddCell(cellNature);


                PdfPCell cellSerial1 = new PdfPCell(new Phrase("Location of contract work ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellSerial1.HorizontalAlignment = 1;
                cellSerial1.Colspan = 0;
                tablecall1.AddCell(cellSerial1);

                PdfPCell celldone1 = new PdfPCell(new Phrase("From", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldone1.HorizontalAlignment = 1;
                celldone1.Colspan = 0;
                tablecall1.AddCell(celldone1);

                PdfPCell celldays1 = new PdfPCell(new Phrase("To ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldays1.HorizontalAlignment = 1;
                celldays1.Colspan = 0;

                tablecall1.AddCell(celldays1);

                PdfPCell cellunit1 = new PdfPCell(new Phrase("Maximum No. of workmen employed by Contractor", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellunit1.HorizontalAlignment = 1;
                cellunit1.Colspan = 0;

                tablecall1.AddCell(cellunit1);

                PdfPCell cellsName11 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName11.HorizontalAlignment = 1;
                cellsName11.Colspan = 0;
                cellsName11.PaddingBottom = 10f;
                tablecall1.AddCell(cellsName11);

                PdfPCell cellsName21 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName21.HorizontalAlignment = 1;
                cellsName21.Colspan = 0;
                cellsName21.PaddingBottom = 10f;
                tablecall1.AddCell(cellsName21);

                PdfPCell cellsName31 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName31.HorizontalAlignment = 1;
                cellsName31.Colspan = 0;
                cellsName31.PaddingBottom = 10f;
                tablecall1.AddCell(cellsName31);

                PdfPCell cellsName41 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName41.HorizontalAlignment = 1;
                cellsName41.Colspan = 0;
                cellsName41.PaddingBottom = 10f;
                tablecall1.AddCell(cellsName41);


                PdfPCell cellsName51 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName51.HorizontalAlignment = 1;
                cellsName51.Colspan = 0;
                cellsName51.PaddingBottom = 10f;
                tablecall1.AddCell(cellsName51);

                PdfPCell cellsName61 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName61.HorizontalAlignment = 1;
                cellsName61.Colspan = 0;
                cellsName61.PaddingBottom = 10f;
                tablecall1.AddCell(cellsName61);


                PdfPCell cellsName71 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName71.HorizontalAlignment = 1;
                cellsName71.Colspan = 0;
                cellsName71.PaddingBottom = 10f;
                tablecall1.AddCell(cellsName71);



                tablecall1.AddCell(cellspace);

                PdfPCell cellsName151 = new PdfPCell(new Phrase("Place..............", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName151.HorizontalAlignment = 1;
                cellsName151.Colspan = 0;
                cellsName151.PaddingBottom = 5f;
                tablecall1.AddCell(cellsName151);

                PdfPCell cellsName161 = new PdfPCell(new Phrase("Date..............", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName161.HorizontalAlignment = 1;
                cellsName161.Colspan = 0;
                cellsName161.PaddingBottom = 5f;
                tablecall1.AddCell(cellsName161);



                document.Add(tablecall1);

                #endregion Basic Information of the Employee

                document.NewPage();

                PdfPTable tblFingerprints = new PdfPTable(6);
                tblFingerprints.TotalWidth = 500f;
                tblFingerprints.LockedWidth = true;
                float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                tblFingerprints.SetWidths(widthfinger);

                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }

            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;




            }
        }

        protected void BtnformXV_Click(object sender, EventArgs e)
        {





            PdfPCell cellempty9 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 13, Font.NORMAL, BaseColor.BLACK)));
            cellempty9.HorizontalAlignment = 0;
            cellempty9.Colspan = 1;

            int Fontsize = 13;
            string fontsyle = "verdana";

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";

            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string relationoccupation = "";
            string relationresidence = "";
            string relationplace = "";
            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Father' ";
            DataTable dtfather = config.ExecuteAdaptorAsyncWithQueryParams(query).Result;

            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }
            string query1 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Mother' ";
            DataTable dtmother = config.ExecuteAdaptorAsyncWithQueryParams(query1).Result;

            if (dtmother.Rows.Count > 0)
            {
                Mname = dtmother.Rows[0]["RName"].ToString();
                Mage = dtmother.Rows[0]["age"].ToString();
                if (Mage == "0")
                {
                    Mage = "";
                }
                else
                {
                    Mage = dtfather.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select EmpESINo from EmpESICodes where Empid='" + txtEmpid.Text + "'  ";
            DataTable dtesi = config.ExecuteAdaptorAsyncWithQueryParams(query2).Result;
            if (dtesi.Rows.Count > 0)
            {
                Esino = dtesi.Rows[0]["EmpESINo"].ToString();

            }



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            string Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
            string EmpGender = "";

            if (Gender == "True")
            {
                EmpGender = "Male";
            }
            if (Gender == "False")
            {
                EmpGender = "Female";
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prphone = dtEmpdetails.Rows[0]["prphone"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                string fileheader2 = Idno + "" + name + "" + "BIO DATA" + " .Pdf";
                Document document = new Document(PageSize.LEGAL.Rotate());

                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");
                #region

                PdfPTable tablecall2 = new PdfPTable(6);
                tablecall2.TotalWidth = 900f;
                tablecall2.LockedWidth = true;
                float[] width = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, };
                tablecall2.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 6;
                cellspace.Border = 0;
                cellspace.PaddingTop = -5;

                PdfPCell cellHead = new PdfPCell(new Phrase("Form-XV ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 1;
                cellHead.Colspan = 6;
                cellHead.Border = 0;

                tablecall2.AddCell(cellHead);

                PdfPCell cellSERVICE = new PdfPCell(new Phrase("SERVICE CERTIFICATE", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 12, Font.BOLD, BaseColor.BLACK)));
                cellSERVICE.HorizontalAlignment = 1;
                cellSERVICE.Colspan = 6;
                cellSERVICE.Border = 0;

                tablecall2.AddCell(cellSERVICE);

                PdfPCell cellRule77 = new PdfPCell(new Phrase("[Rule 77]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellRule77.HorizontalAlignment = 1;
                cellRule77.Colspan = 6;
                cellRule77.Border = 0;
                tablecall2.AddCell(cellRule77);

                tablecall2.AddCell(cellspace);
                tablecall2.AddCell(cellspace);
                tablecall2.AddCell(cellspace);

                PdfPCell celladdressofcon = new PdfPCell(new Phrase("Name and Address of contractor ........................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celladdressofcon.HorizontalAlignment = 0;
                celladdressofcon.Colspan = 2;
                celladdressofcon.Border = 0;

                tablecall2.AddCell(celladdressofcon);

                PdfPCell cellRule741 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellRule741.HorizontalAlignment = 0;
                cellRule741.Colspan = 2;
                cellRule741.Border = 0;
                tablecall2.AddCell(cellRule741);

                PdfPCell cellestablishment = new PdfPCell(new Phrase("Name and address of establishment in/under which contract is carried on............................................................................................................................. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellestablishment.HorizontalAlignment = 0;
                cellestablishment.Colspan = 2;
                cellestablishment.Border = 0;
                tablecall2.AddCell(cellestablishment);

                tablecall2.AddCell(cellspace);


                PdfPCell cellRule1 = new PdfPCell(new Phrase("Nature and location of work.............................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellRule1.HorizontalAlignment = 0;
                cellRule1.Colspan = 2;
                cellRule1.Border = 0;
                tablecall2.AddCell(cellRule1);


                PdfPCell cellempty15 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellempty15.HorizontalAlignment = 0;
                cellempty15.Colspan = 2;
                cellempty15.Border = 0;
                tablecall2.AddCell(cellempty15);

                PdfPCell cellempty14 = new PdfPCell(new Phrase("Name and adress of principal employer.............................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty14.HorizontalAlignment = 0;
                cellempty14.Colspan = 2;
                cellempty14.Border = 0;
                tablecall2.AddCell(cellempty14);

                tablecall2.AddCell(cellspace);
                PdfPCell cellempty13 = new PdfPCell(new Phrase("Age or Date of Birth............................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty13.HorizontalAlignment = 0;
                cellempty13.Colspan = 6;
                cellempty13.Border = 0;
                tablecall2.AddCell(cellempty13);

                tablecall2.AddCell(cellspace);

                PdfPCell cellempty12 = new PdfPCell(new Phrase("Identification Marks.............................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty12.HorizontalAlignment = 0;
                cellempty12.Colspan = 6;
                cellempty12.Border = 0;
                tablecall2.AddCell(cellempty12);

                tablecall2.AddCell(cellspace);
                PdfPCell cellempty11 = new PdfPCell(new Phrase("Father's/Husband's name .........................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty11.HorizontalAlignment = 0;
                cellempty11.Colspan = 6;
                cellempty11.Border = 0;
                tablecall2.AddCell(cellempty11);

                tablecall2.AddCell(cellspace);
                tablecall2.AddCell(cellspace);

                tablecall2.AddCell(cellempty9);

                PdfPCell cellempty8 = new PdfPCell(new Phrase("Total period for work employed", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty8.HorizontalAlignment = 1;
                cellempty8.Colspan = 2;

                tablecall2.AddCell(cellempty8);

                PdfPCell cellempty7 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty7.HorizontalAlignment = 0;
                cellempty7.Colspan = 3;

                tablecall2.AddCell(cellempty7);

                PdfPCell cellformSlNo1 = new PdfPCell(new Phrase("Sl.No. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellformSlNo1.HorizontalAlignment = 1;
                cellformSlNo1.Colspan = 0;
                tablecall2.AddCell(cellformSlNo1);

                PdfPCell cellformfrom = new PdfPCell(new Phrase("From", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellformfrom.HorizontalAlignment = 1;
                cellformfrom.Colspan = 0;
                tablecall2.AddCell(cellformfrom);

                PdfPCell cellformto = new PdfPCell(new Phrase("To ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellformto.HorizontalAlignment = 1;
                cellformto.Colspan = 0;
                tablecall2.AddCell(cellformto);

                PdfPCell cellformnature = new PdfPCell(new Phrase("Nature of work done", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellformnature.HorizontalAlignment = 1;
                cellformnature.Colspan = 0;
                tablecall2.AddCell(cellformnature);

                PdfPCell cellformRate = new PdfPCell(new Phrase("Rate of wages(with particulars of unit in caseof piece-work)", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellformRate.HorizontalAlignment = 1;
                cellformRate.Colspan = 0;
                tablecall2.AddCell(cellformRate);

                PdfPCell cellSerial1 = new PdfPCell(new Phrase("Remark ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellSerial1.HorizontalAlignment = 1;
                cellSerial1.Colspan = 0;
                tablecall2.AddCell(cellSerial1);

                PdfPCell cellform1 = new PdfPCell(new Phrase("1", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellform1.HorizontalAlignment = 1;
                cellform1.Colspan = 0;
                cellform1.PaddingBottom = 10f;
                tablecall2.AddCell(cellform1);

                PdfPCell cellform2 = new PdfPCell(new Phrase("2", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellform2.HorizontalAlignment = 1;
                cellform2.Colspan = 0;
                cellform2.PaddingBottom = 10f;
                tablecall2.AddCell(cellform2);

                PdfPCell cellform3 = new PdfPCell(new Phrase("3", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellform3.HorizontalAlignment = 1;
                cellform3.Colspan = 0;
                cellform3.PaddingBottom = 10f;
                tablecall2.AddCell(cellform3);

                PdfPCell cellform4 = new PdfPCell(new Phrase("4", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellform4.HorizontalAlignment = 1;
                cellform4.Colspan = 0;
                cellform4.PaddingBottom = 10f;
                tablecall2.AddCell(cellform4);


                PdfPCell cellform5 = new PdfPCell(new Phrase("5", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellform5.HorizontalAlignment = 1;
                cellform5.Colspan = 0;
                cellform5.PaddingBottom = 10f;
                tablecall2.AddCell(cellform5);

                PdfPCell cellform6 = new PdfPCell(new Phrase("6", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellform6.HorizontalAlignment = 1;
                cellform6.Colspan = 0;
                cellform6.PaddingBottom = 10f;
                tablecall2.AddCell(cellform6);

                tablecall2.AddCell(cellspace);
                tablecall2.AddCell(cellspace);
                tablecall2.AddCell(cellspace);
                tablecall2.AddCell(cellspace);
                tablecall2.AddCell(cellspace);
                tablecall2.AddCell(cellspace);

                PdfPCell cellsingna = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsingna.HorizontalAlignment = 0;
                cellsingna.Colspan = 3;
                cellsingna.Border = 0;
                tablecall2.AddCell(cellsingna);

                PdfPCell cellsingn = new PdfPCell(new Phrase("singature of contractor", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsingn.HorizontalAlignment = 0;
                cellsingn.Colspan = 3;
                cellsingn.Border = 0;
                cellsingn.PaddingLeft = 200;
                tablecall2.AddCell(cellsingn);



                document.Add(tablecall2);

                #endregion Basic Information of the Employee

                document.NewPage();

                PdfPTable tblFingerprints = new PdfPTable(6);
                tblFingerprints.TotalWidth = 500f;
                tblFingerprints.LockedWidth = true;
                float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                tblFingerprints.SetWidths(widthfinger);

                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }

            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;



            }
        }

        protected void Btnform2XIV_Click(object sender, EventArgs e)
        {



            int Fontsize = 13;
            string fontsyle = "verdana";

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";

            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string relationoccupation = "";
            string relationresidence = "";
            string relationplace = "";
            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Father' ";
            DataTable dtfather = config.ExecuteAdaptorAsyncWithQueryParams(query).Result;

            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }
            string query1 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Mother' ";
            DataTable dtmother = config.ExecuteAdaptorAsyncWithQueryParams(query1).Result;

            if (dtmother.Rows.Count > 0)
            {
                Mname = dtmother.Rows[0]["RName"].ToString();
                Mage = dtmother.Rows[0]["age"].ToString();
                if (Mage == "0")
                {
                    Mage = "";
                }
                else
                {
                    Mage = dtfather.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select EmpESINo from EmpESICodes where Empid='" + txtEmpid.Text + "'  ";
            DataTable dtesi = config.ExecuteAdaptorAsyncWithQueryParams(query2).Result;
            if (dtesi.Rows.Count > 0)
            {
                Esino = dtesi.Rows[0]["EmpESINo"].ToString();

            }



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            string Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
            string EmpGender = "";

            if (Gender == "True")
            {
                EmpGender = "Male";
            }
            if (Gender == "False")
            {
                EmpGender = "Female";
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prphone = dtEmpdetails.Rows[0]["prphone"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                string fileheader2 = Idno + "" + name + "" + "BIO DATA" + " .Pdf";
                Document document = new Document(PageSize.LEGAL);

                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");
                #region

                PdfPTable tablecall3 = new PdfPTable(6);
                tablecall3.TotalWidth = 500f;
                tablecall3.LockedWidth = true;
                float[] width = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, };
                tablecall3.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 6;
                cellspace.Border = 0;
                cellspace.PaddingTop = -5;

                PdfPCell cellHead = new PdfPCell(new Phrase("Form-XIV ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 1;
                cellHead.Colspan = 6;
                cellHead.Border = 0;
                tablecall3.AddCell(cellHead);

                PdfPCell cellEMPLOYMENTCARD = new PdfPCell(new Phrase("EMPLOYMENT CARD", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 13, Font.BOLD, BaseColor.BLACK)));
                cellEMPLOYMENTCARD.HorizontalAlignment = 1;
                cellEMPLOYMENTCARD.Colspan = 6;
                cellEMPLOYMENTCARD.Border = 0;
                tablecall3.AddCell(cellEMPLOYMENTCARD);

                PdfPCell cellRule76 = new PdfPCell(new Phrase("[Rule 76]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellRule76.HorizontalAlignment = 1;
                cellRule76.Colspan = 6;
                cellRule76.Border = 0;
                tablecall3.AddCell(cellRule76);

                tablecall3.AddCell(cellspace);
                tablecall3.AddCell(cellspace);
                tablecall3.AddCell(cellspace);

                PdfPCell celladdressofcontr = new PdfPCell(new Phrase("Name and Address of contractor ........................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celladdressofcontr.HorizontalAlignment = 0;
                celladdressofcontr.Colspan = 2;
                celladdressofcontr.Border = 0;

                tablecall3.AddCell(celladdressofcontr);

                PdfPCell cellRule741 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellRule741.HorizontalAlignment = 0;
                cellRule741.Colspan = 2;
                cellRule741.Border = 0;
                tablecall3.AddCell(cellRule741);

                PdfPCell cellestablishments = new PdfPCell(new Phrase("Name and address of establishment in/under which contract is carried on............................................................................................................................. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellestablishments.HorizontalAlignment = 0;
                cellestablishments.Colspan = 2;
                cellestablishments.Border = 0;
                tablecall3.AddCell(cellestablishments);

                tablecall3.AddCell(cellspace);
                tablecall3.AddCell(cellspace);

                PdfPCell celllocation = new PdfPCell(new Phrase("Nature and location of work.............................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celllocation.HorizontalAlignment = 0;
                celllocation.Colspan = 2;
                celllocation.Border = 0;
                tablecall3.AddCell(celllocation);


                PdfPCell celleempty15 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celleempty15.HorizontalAlignment = 0;
                celleempty15.Colspan = 2;
                celleempty15.Border = 0;
                tablecall3.AddCell(celleempty15);

                PdfPCell cellempty09 = new PdfPCell(new Phrase("Name and adress of principal employer.............................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty09.HorizontalAlignment = 0;
                cellempty09.Colspan = 2;
                cellempty09.Border = 0;
                tablecall3.AddCell(cellempty09);


                tablecall3.AddCell(cellspace);
                tablecall3.AddCell(cellspace);




                tablecall3.AddCell(cellspace);
                PdfPCell cellempty08 = new PdfPCell(new Phrase("Name of the workman............................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty08.HorizontalAlignment = 0;
                cellempty08.Colspan = 6;
                cellempty08.Border = 0;
                tablecall3.AddCell(cellempty08);

                tablecall3.AddCell(cellspace);
                tablecall3.AddCell(cellspace);

                PdfPCell cellempty07 = new PdfPCell(new Phrase("Sl.no in theregister ofworkmen employed.............................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty07.HorizontalAlignment = 0;
                cellempty07.Colspan = 6;
                cellempty07.Border = 0;
                tablecall3.AddCell(cellempty07);

                tablecall3.AddCell(cellspace);
                tablecall3.AddCell(cellspace);

                PdfPCell cellempty06 = new PdfPCell(new Phrase("Nature of employment/designation .........................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty06.HorizontalAlignment = 0;
                cellempty06.Colspan = 6;
                cellempty06.Border = 0;
                tablecall3.AddCell(cellempty06);

                tablecall3.AddCell(cellspace);
                tablecall3.AddCell(cellspace);

                PdfPCell cellempty05 = new PdfPCell(new Phrase("Wage rate  (with particulars of unit,in case of piece-work....................................... )", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty05.HorizontalAlignment = 0;
                cellempty05.Colspan = 6;
                cellempty05.Border = 0;
                tablecall3.AddCell(cellempty05);

                tablecall3.AddCell(cellspace);
                tablecall3.AddCell(cellspace);


                PdfPCell cellempty04 = new PdfPCell(new Phrase("Wage period................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty04.HorizontalAlignment = 0;
                cellempty04.Colspan = 6;
                cellempty04.Border = 0;
                tablecall3.AddCell(cellempty04);

                tablecall3.AddCell(cellspace);
                tablecall3.AddCell(cellspace);


                PdfPCell cellempty03 = new PdfPCell(new Phrase("enure of employment................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty03.HorizontalAlignment = 0;
                cellempty03.Colspan = 6;
                cellempty03.Border = 0;
                tablecall3.AddCell(cellempty03);

                tablecall3.AddCell(cellspace);
                tablecall3.AddCell(cellspace);


                PdfPCell cellempty02 = new PdfPCell(new Phrase("Remarks............................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty02.HorizontalAlignment = 0;
                cellempty02.Colspan = 6;
                cellempty02.Border = 0;
                tablecall3.AddCell(cellempty02);

                tablecall3.AddCell(cellspace);
                tablecall3.AddCell(cellspace);
                tablecall3.AddCell(cellspace);
                tablecall3.AddCell(cellspace);

                PdfPCell cellempty001 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty001.HorizontalAlignment = 0;
                cellempty001.Colspan = 3;
                cellempty001.Border = 0;
                tablecall3.AddCell(cellempty001);



                PdfPCell cellempty01 = new PdfPCell(new Phrase("Signature of Contractor", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty01.HorizontalAlignment = 0;
                cellempty01.Colspan = 3;
                cellempty01.Border = 0;
                cellempty01.PaddingLeft = 100;
                tablecall3.AddCell(cellempty01);




                document.Add(tablecall3);

                #endregion Basic Information of the Employee

                document.NewPage();

                PdfPTable tblFingerprints = new PdfPTable(6);
                tblFingerprints.TotalWidth = 500f;
                tblFingerprints.LockedWidth = true;
                float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                tblFingerprints.SetWidths(widthfinger);

                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }

            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;





            }
        }

        protected void BtnformXVI_Click(object sender, EventArgs e)
        {



            int Fontsize = 13;
            string fontsyle = "verdana";

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";

            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string relationoccupation = "";
            string relationresidence = "";
            string relationplace = "";
            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Father' ";
            DataTable dtfather = config.ExecuteAdaptorAsyncWithQueryParams(query).Result;

            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }
            string query1 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Mother' ";
            DataTable dtmother = config.ExecuteAdaptorAsyncWithQueryParams(query1).Result;

            if (dtmother.Rows.Count > 0)
            {
                Mname = dtmother.Rows[0]["RName"].ToString();
                Mage = dtmother.Rows[0]["age"].ToString();
                if (Mage == "0")
                {
                    Mage = "";
                }
                else
                {
                    Mage = dtfather.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select EmpESINo from EmpESICodes where Empid='" + txtEmpid.Text + "'  ";
            DataTable dtesi = config.ExecuteAdaptorAsyncWithQueryParams(query2).Result;
            if (dtesi.Rows.Count > 0)
            {
                Esino = dtesi.Rows[0]["EmpESINo"].ToString();

            }



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            string Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
            string EmpGender = "";

            if (Gender == "True")
            {
                EmpGender = "Male";
            }
            if (Gender == "False")
            {
                EmpGender = "Female";
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prphone = dtEmpdetails.Rows[0]["prphone"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                string fileheader2 = Idno + "" + name + "" + "BIO DATA" + " .Pdf";
                Document document = new Document(PageSize.LEGAL.Rotate());

                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");
                #region

                PdfPTable tablecall4 = new PdfPTable(6);
                tablecall4.TotalWidth = 900f;
                tablecall4.LockedWidth = true;
                float[] width = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, };
                tablecall4.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 6;
                cellspace.Border = 0;
                cellspace.PaddingTop = -5;

                PdfPCell cellHead = new PdfPCell(new Phrase("Form-XVI ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 1;
                cellHead.Colspan = 6;
                cellHead.Border = 0;
                tablecall4.AddCell(cellHead);

                PdfPCell cellMUSTER = new PdfPCell(new Phrase("MUSTER ROLL", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 12, Font.BOLD, BaseColor.BLACK)));
                cellMUSTER.HorizontalAlignment = 1;
                cellMUSTER.Colspan = 6;
                cellMUSTER.Border = 0;
                tablecall4.AddCell(cellMUSTER);

                PdfPCell cellRule77a = new PdfPCell(new Phrase("[Rule 78(1)(a)(i)]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellRule77a.HorizontalAlignment = 1;
                cellRule77a.Colspan = 6;
                cellRule77a.Border = 0;
                tablecall4.AddCell(cellRule77a);

                tablecall4.AddCell(cellspace);
                tablecall4.AddCell(cellspace);
                tablecall4.AddCell(cellspace);

                PdfPCell celladdressofcontrac = new PdfPCell(new Phrase("Name and Address of contractor ........................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celladdressofcontrac.HorizontalAlignment = 0;
                celladdressofcontrac.Colspan = 2;
                celladdressofcontrac.Border = 0;

                tablecall4.AddCell(celladdressofcontrac);

                PdfPCell cellRule7410 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellRule7410.HorizontalAlignment = 0;
                cellRule7410.Colspan = 2;
                cellRule7410.Border = 0;
                tablecall4.AddCell(cellRule7410);

                PdfPCell cellcarried = new PdfPCell(new Phrase("Name and address of establishment in/under which contract is carried on............................................................................................................................. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellcarried.HorizontalAlignment = 0;
                cellcarried.Colspan = 2;
                cellcarried.Border = 0;
                tablecall4.AddCell(cellcarried);

                tablecall4.AddCell(cellspace);


                PdfPCell cellRule10 = new PdfPCell(new Phrase("Nature and location of work.............................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellRule10.HorizontalAlignment = 0;
                cellRule10.Colspan = 2;
                cellRule10.Border = 0;
                tablecall4.AddCell(cellRule10);


                PdfPCell cellempty006 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty006.HorizontalAlignment = 0;
                cellempty006.Colspan = 2;
                cellempty006.Border = 0;
                tablecall4.AddCell(cellempty006);

                PdfPCell cellempty005 = new PdfPCell(new Phrase("Name and adress of principal employer................................................................................................................................................................For month of.........................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty005.HorizontalAlignment = 0;
                cellempty005.Colspan = 2;
                cellempty005.Border = 0;
                tablecall4.AddCell(cellempty005);

                tablecall4.AddCell(cellspace);
                tablecall4.AddCell(cellspace);


                PdfPCell cellempty004 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty004.HorizontalAlignment = 0;
                cellempty004.Colspan = 4;

                tablecall4.AddCell(cellempty004);

                PdfPCell cellempty003 = new PdfPCell(new Phrase("Dates", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty003.HorizontalAlignment = 1;
                cellempty003.Colspan = 1;

                tablecall4.AddCell(cellempty003);

                PdfPCell cellempty002 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty002.HorizontalAlignment = 0;
                cellempty002.Colspan = 1;

                tablecall4.AddCell(cellempty002);

                PdfPCell cellformSlNo3 = new PdfPCell(new Phrase("Sl.No. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellformSlNo3.HorizontalAlignment = 1;
                cellformSlNo3.Colspan = 0;
                cellformSlNo3.PaddingBottom = 10;
                tablecall4.AddCell(cellformSlNo3);

                PdfPCell cellHusband = new PdfPCell(new Phrase("Name of workman", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellHusband.HorizontalAlignment = 1;
                cellHusband.Colspan = 0;
                cellHusband.PaddingBottom = 10;
                tablecall4.AddCell(cellHusband);

                PdfPCell cellFather = new PdfPCell(new Phrase("Father's/Husband's name ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellFather.HorizontalAlignment = 1;
                cellFather.Colspan = 0;
                cellFather.PaddingBottom = 10;
                tablecall4.AddCell(cellFather);

                PdfPCell cellSex = new PdfPCell(new Phrase("Sex", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellSex.HorizontalAlignment = 1;
                cellSex.Colspan = 0;
                cellSex.PaddingBottom = 10;
                tablecall4.AddCell(cellSex);

                PdfPCell cellformRate1 = new PdfPCell(new Phrase("1 2 3 4 5 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellformRate1.HorizontalAlignment = 1;
                cellformRate1.Colspan = 0;
                cellformRate1.PaddingBottom = 10;
                tablecall4.AddCell(cellformRate1);

                PdfPCell cellRemarks1 = new PdfPCell(new Phrase("Remarks ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellRemarks1.HorizontalAlignment = 1;
                cellRemarks1.Colspan = 0;
                cellRemarks1.PaddingBottom = 10;
                tablecall4.AddCell(cellRemarks1);

                PdfPCell cellform06 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellform06.HorizontalAlignment = 1;
                cellform06.Colspan = 0;
                cellform06.PaddingBottom = 20f;
                tablecall4.AddCell(cellform06);

                PdfPCell cellform05 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellform05.HorizontalAlignment = 1;
                cellform05.Colspan = 0;
                cellform05.PaddingBottom = 20f;
                tablecall4.AddCell(cellform05);

                PdfPCell cellform04 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellform04.HorizontalAlignment = 1;
                cellform04.Colspan = 0;
                cellform04.PaddingBottom = 20f;
                tablecall4.AddCell(cellform04);

                PdfPCell cellform03 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellform03.HorizontalAlignment = 1;
                cellform03.Colspan = 0;
                cellform03.PaddingBottom = 20f;
                tablecall4.AddCell(cellform03);


                PdfPCell cellform02 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellform02.HorizontalAlignment = 1;
                cellform02.Colspan = 0;
                cellform02.PaddingBottom = 20f;
                tablecall4.AddCell(cellform02);

                PdfPCell cellform01 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellform01.HorizontalAlignment = 1;
                cellform01.Colspan = 0;
                cellform01.PaddingBottom = 10f;
                tablecall4.AddCell(cellform01);




                document.Add(tablecall4);

                #endregion Basic Information of the Employee

                document.NewPage();

                PdfPTable tblFingerprints = new PdfPTable(6);
                tblFingerprints.TotalWidth = 500f;
                tblFingerprints.LockedWidth = true;
                float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                tblFingerprints.SetWidths(widthfinger);

                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }

            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;






            }
        }

        protected void BtnformXIX_Click(object sender, EventArgs e)
        {


            int Fontsize = 13;
            string fontsyle = "verdana";

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";

            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string relationoccupation = "";
            string relationresidence = "";
            string relationplace = "";
            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Father' ";
            DataTable dtfather = config.ExecuteAdaptorAsyncWithQueryParams(query).Result;

            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }
            string query1 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Mother' ";
            DataTable dtmother = config.ExecuteAdaptorAsyncWithQueryParams(query1).Result;

            if (dtmother.Rows.Count > 0)
            {
                Mname = dtmother.Rows[0]["RName"].ToString();
                Mage = dtmother.Rows[0]["age"].ToString();
                if (Mage == "0")
                {
                    Mage = "";
                }
                else
                {
                    Mage = dtfather.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select EmpESINo from EmpESICodes where Empid='" + txtEmpid.Text + "'  ";
            DataTable dtesi = config.ExecuteAdaptorAsyncWithQueryParams(query2).Result;
            if (dtesi.Rows.Count > 0)
            {
                Esino = dtesi.Rows[0]["EmpESINo"].ToString();

            }



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            string Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
            string EmpGender = "";

            if (Gender == "True")
            {
                EmpGender = "Male";
            }
            if (Gender == "False")
            {
                EmpGender = "Female";
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prphone = dtEmpdetails.Rows[0]["prphone"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                string fileheader2 = Idno + "" + name + "" + "BIO DATA" + " .Pdf";
                Document document = new Document(PageSize.LEGAL.Rotate());

                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");
                #region

                PdfPTable tablecall5 = new PdfPTable(6);
                tablecall5.TotalWidth = 900f;
                tablecall5.LockedWidth = true;
                float[] width = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, };
                tablecall5.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 6;
                cellspace.Border = 0;
                cellspace.PaddingTop = -5;

                PdfPCell cellHead = new PdfPCell(new Phrase("Form-XIX ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 1;
                cellHead.Colspan = 6;
                cellHead.Border = 0;

                tablecall5.AddCell(cellHead);

                PdfPCell cellWAGESLIP = new PdfPCell(new Phrase("WAGE SLIP", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 12, Font.BOLD, BaseColor.BLACK)));
                cellWAGESLIP.HorizontalAlignment = 1;
                cellWAGESLIP.Colspan = 6;
                cellWAGESLIP.Border = 0;

                tablecall5.AddCell(cellWAGESLIP);

                PdfPCell cellRule78b = new PdfPCell(new Phrase("[Rule 78(1)(b)]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellRule78b.HorizontalAlignment = 1;
                cellRule78b.Colspan = 6;
                cellRule78b.Border = 0;
                tablecall5.AddCell(cellRule78b);

                tablecall5.AddCell(cellspace);
                tablecall5.AddCell(cellspace);
                tablecall5.AddCell(cellspace);

                PdfPCell celladdressofcontractor = new PdfPCell(new Phrase("Name and Address of contractor .....................................................................................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celladdressofcontractor.HorizontalAlignment = 0;
                celladdressofcontractor.Colspan = 2;
                celladdressofcontractor.Border = 0;

                tablecall5.AddCell(celladdressofcontractor);

                PdfPCell cellRules741 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellRules741.HorizontalAlignment = 0;
                cellRules741.Colspan = 2;
                cellRules741.Border = 0;
                tablecall5.AddCell(cellRules741);

                PdfPCell cellestablishmentname = new PdfPCell(new Phrase("Name and Father's/Husband's Name of the workman......................................................................................................................................................................For the Week/fornight/month ending..................................................................................................................................................................................................................................................................................................... ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellestablishmentname.HorizontalAlignment = 0;
                cellestablishmentname.Colspan = 2;
                cellestablishmentname.Border = 0;
                tablecall5.AddCell(cellestablishmentname);

                tablecall5.AddCell(cellspace);

                PdfPCell cellNatureand = new PdfPCell(new Phrase("Nature and location of work.............................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNatureand.HorizontalAlignment = 0;
                cellNatureand.Colspan = 6;
                cellNatureand.Border = 0;
                tablecall5.AddCell(cellNatureand);

                tablecall5.AddCell(cellspace);

                PdfPCell cellnoofdays = new PdfPCell(new Phrase("1.  No.of days worked", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellnoofdays.HorizontalAlignment = 0;
                cellnoofdays.Colspan = 6;
                cellnoofdays.Border = 0;
                tablecall5.AddCell(cellnoofdays);

                tablecall5.AddCell(cellspace);

                PdfPCell cellnoofunits = new PdfPCell(new Phrase("2.  No. of units worked in case of piece-rate workers", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellnoofunits.HorizontalAlignment = 0;
                cellnoofunits.Colspan = 6;
                cellnoofunits.Border = 0;
                tablecall5.AddCell(cellnoofunits);

                tablecall5.AddCell(cellspace);
                PdfPCell cellrateofdaily = new PdfPCell(new Phrase("3.  Rate of daily wages/piece-rate", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellrateofdaily.HorizontalAlignment = 0;
                cellrateofdaily.Colspan = 6;
                cellrateofdaily.Border = 0;
                tablecall5.AddCell(cellrateofdaily);

                tablecall5.AddCell(cellspace);

                PdfPCell cellamountof = new PdfPCell(new Phrase("4.  Amount of overtime wages", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellamountof.HorizontalAlignment = 0;
                cellamountof.Colspan = 6;
                cellamountof.Border = 0;
                tablecall5.AddCell(cellamountof);

                tablecall5.AddCell(cellspace);

                PdfPCell cellgrosswages = new PdfPCell(new Phrase("5. Gross wages payable", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellgrosswages.HorizontalAlignment = 0;
                cellgrosswages.Colspan = 6;
                cellgrosswages.Border = 0;
                tablecall5.AddCell(cellgrosswages);

                tablecall5.AddCell(cellspace);
                PdfPCell celldeductionsany = new PdfPCell(new Phrase("6.  Deductions,if any", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldeductionsany.HorizontalAlignment = 0;
                celldeductionsany.Colspan = 6;
                celldeductionsany.Border = 0;
                tablecall5.AddCell(celldeductionsany);

                tablecall5.AddCell(cellspace);
                PdfPCell cellnetamountof = new PdfPCell(new Phrase("7.  Net amount of wages paid", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellnetamountof.HorizontalAlignment = 0;
                cellnetamountof.Colspan = 6;
                cellnetamountof.Border = 0;
                tablecall5.AddCell(cellnetamountof);

                tablecall5.AddCell(cellspace);
                tablecall5.AddCell(cellspace);
                tablecall5.AddCell(cellspace);
                tablecall5.AddCell(cellspace);
                tablecall5.AddCell(cellspace);
                tablecall5.AddCell(cellspace);

                PdfPCell cellinsingnatures = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellinsingnatures.HorizontalAlignment = 0;
                cellinsingnatures.Colspan = 3;
                cellinsingnatures.Border = 0;
                tablecall5.AddCell(cellinsingnatures);

                PdfPCell cellInitials = new PdfPCell(new Phrase("Initials of the contractoror his  representative", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellInitials.HorizontalAlignment = 0;
                cellInitials.Colspan = 3;
                cellInitials.Border = 0;
                cellInitials.PaddingLeft = 200;
                tablecall5.AddCell(cellInitials);

                document.Add(tablecall5);

                #endregion Basic Information of the Employee

                document.NewPage();

                PdfPTable tblFingerprints = new PdfPTable(6);
                tblFingerprints.TotalWidth = 500f;
                tblFingerprints.LockedWidth = true;
                float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                tblFingerprints.SetWidths(widthfinger);

                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }

            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;

            }
        }

        protected void BtnformXVIII_Click(object sender, EventArgs e)
        {




            int Fontsize = 13;
            string fontsyle = "verdana";

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";

            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string relationoccupation = "";
            string relationresidence = "";
            string relationplace = "";
            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Father' ";
            DataTable dtfather = config.ExecuteAdaptorAsyncWithQueryParams(query).Result;

            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }
            string query1 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Mother' ";
            DataTable dtmother = config.ExecuteAdaptorAsyncWithQueryParams(query1).Result;

            if (dtmother.Rows.Count > 0)
            {
                Mname = dtmother.Rows[0]["RName"].ToString();
                Mage = dtmother.Rows[0]["age"].ToString();
                if (Mage == "0")
                {
                    Mage = "";
                }
                else
                {
                    Mage = dtfather.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select EmpESINo from EmpESICodes where Empid='" + txtEmpid.Text + "'  ";
            DataTable dtesi = config.ExecuteAdaptorAsyncWithQueryParams(query2).Result;
            if (dtesi.Rows.Count > 0)
            {
                Esino = dtesi.Rows[0]["EmpESINo"].ToString();

            }



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            string Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
            string EmpGender = "";

            if (Gender == "True")
            {
                EmpGender = "Male";
            }
            if (Gender == "False")
            {
                EmpGender = "Female";
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prphone = dtEmpdetails.Rows[0]["prphone"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                string fileheader2 = Idno + "" + name + "" + "BIO DATA" + " .Pdf";
                Document document = new Document(PageSize.LEGAL.Rotate());

                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");
                #region

                PdfPTable tableregister = new PdfPTable(16);
                tableregister.TotalWidth = 950f;
                tableregister.LockedWidth = true;
                float[] width = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f };
                tableregister.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 16;
                cellspace.Border = 0;
                cellspace.PaddingTop = -5;

                PdfPCell cellHead = new PdfPCell(new Phrase("Form-XVIII ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 1;
                cellHead.Colspan = 16;
                cellHead.Border = 0;

                tableregister.AddCell(cellHead);

                PdfPCell cellMUSTER = new PdfPCell(new Phrase("FORM OF REGISTER OF WAGES-CUM-MUSTER ROLL", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 13, Font.BOLD, BaseColor.BLACK)));
                cellMUSTER.HorizontalAlignment = 1;
                cellMUSTER.Colspan = 16;
                cellMUSTER.Border = 0;
                tableregister.AddCell(cellMUSTER);

                PdfPCell cellreturns1234 = new PdfPCell(new Phrase("[Rule 78(1)(a)(i)]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellreturns1234.HorizontalAlignment = 1;
                cellreturns1234.Colspan = 16;
                cellreturns1234.Border = 0;
                tableregister.AddCell(cellreturns1234);

                tableregister.AddCell(cellspace);
                tableregister.AddCell(cellspace);
                tableregister.AddCell(cellspace);






                PdfPCell celladdressofc = new PdfPCell(new Phrase("Name and address of contractor..................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celladdressofc.HorizontalAlignment = 0;
                celladdressofc.Colspan = 7;
                celladdressofc.Border = 0;
                celladdressofc.PaddingLeft = 0;
                tableregister.AddCell(celladdressofc);

                PdfPCell cellNames043 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNames043.HorizontalAlignment = 0;
                cellNames043.Colspan = 2;
                cellNames043.Border = 0;
                cellNames043.PaddingLeft = 0;
                tableregister.AddCell(cellNames043);

                PdfPCell celladdressofhus = new PdfPCell(new Phrase("Name and address of establishment in/under which contract is carried on...........................................................................................................................Name and address of principal employer...................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celladdressofhus.HorizontalAlignment = 0;
                celladdressofhus.Colspan = 7;
                celladdressofhus.Border = 0;
                celladdressofhus.PaddingLeft = 0;
                tableregister.AddCell(celladdressofhus);

                tableregister.AddCell(cellspace);

                PdfPCell cellNatures = new PdfPCell(new Phrase("Nature and location of work................................................................................................................... ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNatures.HorizontalAlignment = 0;
                cellNatures.Colspan = 7;
                cellNatures.Border = 0;
                cellNatures.PaddingLeft = 0;
                tableregister.AddCell(cellNatures);

                PdfPCell cellPeriodtable = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellPeriodtable.HorizontalAlignment = 0;
                cellPeriodtable.Colspan = 2;
                cellPeriodtable.Border = 0;
                cellPeriodtable.PaddingLeft = 0;
                tableregister.AddCell(cellPeriodtable);


                PdfPCell cellMonthlywage = new PdfPCell(new Phrase("Wage Period: Monthly................................................................................................................From...................................TO.................................. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellMonthlywage.HorizontalAlignment = 0;
                cellMonthlywage.Colspan = 7;
                cellMonthlywage.Border = 0;
                cellMonthlywage.PaddingLeft = 0;
                tableregister.AddCell(cellMonthlywage);

                tableregister.AddCell(cellspace);
                tableregister.AddCell(cellspace);
                tableregister.AddCell(cellspace);







                PdfPCell cellemptys1 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellemptys1.HorizontalAlignment = 0;
                cellemptys1.Colspan = 7;

                tableregister.AddCell(cellemptys1);



                PdfPCell cellemptys2 = new PdfPCell(new Phrase("Amount of wages earned", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellemptys2.HorizontalAlignment = 1;
                cellemptys2.Colspan = 4;

                tableregister.AddCell(cellemptys2);

                PdfPCell cellemptys3 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellemptys3.HorizontalAlignment = 0;
                cellemptys3.Colspan = 5;

                tableregister.AddCell(cellemptys3);

                PdfPCell cellSlNo42 = new PdfPCell(new Phrase("Sl.No. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellSlNo42.HorizontalAlignment = 1;
                cellSlNo42.Colspan = 0;
                tableregister.AddCell(cellSlNo42);

                PdfPCell cellworkmans = new PdfPCell(new Phrase("SI. No in the Name of workman", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellworkmans.HorizontalAlignment = 1;
                cellworkmans.Colspan = 0;

                tableregister.AddCell(cellworkmans);

                PdfPCell cellSerialthe = new PdfPCell(new Phrase("Name of the employee ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellSerialthe.HorizontalAlignment = 1;
                cellSerialthe.Colspan = 0;
                tableregister.AddCell(cellSerialthe);

                PdfPCell cellworkdone = new PdfPCell(new Phrase("Designation/of nature of work done", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellworkdone.HorizontalAlignment = 1;
                cellworkdone.Colspan = 0;
                tableregister.AddCell(cellworkdone);

                PdfPCell celldaysworked = new PdfPCell(new Phrase("Daily attenda units worked ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldaysworked.HorizontalAlignment = 1;
                celldaysworked.Colspan = 0;

                tableregister.AddCell(celldaysworked);

                PdfPCell cellunitwork = new PdfPCell(new Phrase("Total attendance unit of work done", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellunitwork.HorizontalAlignment = 1;
                cellunitwork.Colspan = 0;

                tableregister.AddCell(cellunitwork);

                PdfPCell cellratedaily = new PdfPCell(new Phrase("daily rate of wages/piece rate ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellratedaily.HorizontalAlignment = 1;
                cellratedaily.Colspan = 0;

                tableregister.AddCell(cellratedaily);

                PdfPCell cellBasicwages = new PdfPCell(new Phrase(" Basic wages", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellBasicwages.HorizontalAlignment = 1;
                cellBasicwages.Colspan = 0;

                tableregister.AddCell(cellBasicwages);

                PdfPCell cellDearnessallo = new PdfPCell(new Phrase("Dearness allowancess", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellDearnessallo.HorizontalAlignment = 1;
                cellDearnessallo.Colspan = 0;
                tableregister.AddCell(cellDearnessallo);

                PdfPCell cellOvetimework = new PdfPCell(new Phrase("Overtime ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellOvetimework.HorizontalAlignment = 1;
                cellOvetimework.Colspan = 0;
                tableregister.AddCell(cellOvetimework);

                PdfPCell cellOthercash = new PdfPCell(new Phrase("Other cash payment (Narture of payment to be indicated)", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellOthercash.HorizontalAlignment = 1;
                cellOthercash.Colspan = 0;

                tableregister.AddCell(cellOthercash);

                PdfPCell cellTotalpayment = new PdfPCell(new Phrase("Total", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellTotalpayment.HorizontalAlignment = 1;
                cellTotalpayment.Colspan = 0;

                tableregister.AddCell(cellTotalpayment);


                PdfPCell cellDeactionsindicate = new PdfPCell(new Phrase("Deactions if any(indicate nature)", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellDeactionsindicate.HorizontalAlignment = 1;
                cellDeactionsindicate.Colspan = 0;

                //cellDeactions.BorderWidthBottom = 0.5f;
                tableregister.AddCell(cellDeactionsindicate);

                PdfPCell cellNetpaid = new PdfPCell(new Phrase("Net amount paid ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNetpaid.HorizontalAlignment = 1;
                cellNetpaid.Colspan = 0;

                tableregister.AddCell(cellNetpaid);

                PdfPCell cellthumbimp = new PdfPCell(new Phrase("Signature/thumb impression of workman", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellthumbimp.HorizontalAlignment = 1;
                cellthumbimp.Colspan = 0;

                tableregister.AddCell(cellthumbimp);

                PdfPCell cellinitialof = new PdfPCell(new Phrase("initial of contractors or his representative", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellinitialof.HorizontalAlignment = 1;
                cellinitialof.Colspan = 0;

                tableregister.AddCell(cellinitialof);





                PdfPCell cellemp3 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellemp3.HorizontalAlignment = 0;
                cellemp3.Colspan = 4;

                tableregister.AddCell(cellemp3);



                PdfPCell cellemp2 = new PdfPCell(new Phrase("12.35 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellemp2.HorizontalAlignment = 1;
                cellemp2.Colspan = 1;

                tableregister.AddCell(cellemp2);




                PdfPCell cellemp1 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellemp1.HorizontalAlignment = 0;
                cellemp1.Colspan = 11;

                tableregister.AddCell(cellemp1);




                PdfPCell cellsNames1 = new PdfPCell(new Phrase("  1 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNames1.HorizontalAlignment = 1;
                cellsNames1.Colspan = 0;
                cellsNames1.PaddingBottom = 5f;
                tableregister.AddCell(cellsNames1);

                PdfPCell cellsNames2 = new PdfPCell(new Phrase("  2", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNames2.HorizontalAlignment = 1;
                cellsNames2.Colspan = 0;
                cellsNames2.PaddingBottom = 5f;
                tableregister.AddCell(cellsNames2);

                PdfPCell cellsNames3 = new PdfPCell(new Phrase("  3 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNames3.HorizontalAlignment = 1;
                cellsNames3.Colspan = 0;
                cellsNames3.PaddingBottom = 5f;
                tableregister.AddCell(cellsNames3);

                PdfPCell cellsNames4 = new PdfPCell(new Phrase("  4", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNames4.HorizontalAlignment = 1;
                cellsNames4.Colspan = 0;
                cellsNames4.PaddingBottom = 5f;
                tableregister.AddCell(cellsNames4);

                PdfPCell cellsNames5 = new PdfPCell(new Phrase("  5 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNames5.HorizontalAlignment = 1;
                cellsNames5.Colspan = 0;
                cellsNames5.PaddingBottom = 5f;
                tableregister.AddCell(cellsNames5);

                PdfPCell cellsNames6 = new PdfPCell(new Phrase("  6", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNames6.HorizontalAlignment = 1;
                cellsNames6.Colspan = 0;
                cellsNames6.PaddingBottom = 5f;
                tableregister.AddCell(cellsNames6);

                PdfPCell cellsNames7 = new PdfPCell(new Phrase("  7 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNames7.HorizontalAlignment = 1;
                cellsNames7.Colspan = 0;
                cellsNames7.PaddingBottom = 5f;
                tableregister.AddCell(cellsNames7);

                PdfPCell cellsNames8 = new PdfPCell(new Phrase("  8", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNames8.HorizontalAlignment = 1;
                cellsNames8.Colspan = 0;
                cellsNames8.PaddingBottom = 5f;
                tableregister.AddCell(cellsNames8);

                PdfPCell cellsNames9 = new PdfPCell(new Phrase("  9", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNames9.HorizontalAlignment = 1;
                cellsNames9.Colspan = 0;
                cellsNames9.PaddingBottom = 5f;
                tableregister.AddCell(cellsNames9);

                PdfPCell cellsNames10 = new PdfPCell(new Phrase("  10", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNames10.HorizontalAlignment = 1;
                cellsNames10.Colspan = 0;
                cellsNames10.PaddingBottom = 5f;
                tableregister.AddCell(cellsNames10);

                PdfPCell cellsNames11 = new PdfPCell(new Phrase("  11", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNames11.HorizontalAlignment = 1;
                cellsNames11.Colspan = 0;
                cellsNames11.PaddingBottom = 5f;
                tableregister.AddCell(cellsNames11);

                PdfPCell cellsNames12 = new PdfPCell(new Phrase("  12", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNames12.HorizontalAlignment = 1;
                cellsNames12.Colspan = 0;
                cellsNames12.PaddingBottom = 5f;
                tableregister.AddCell(cellsNames12);


                PdfPCell cellsNames13 = new PdfPCell(new Phrase("  13", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNames13.HorizontalAlignment = 1;
                cellsNames13.Colspan = 0;
                cellsNames13.PaddingBottom = 5f;
                tableregister.AddCell(cellsNames13);

                PdfPCell cellsNames14 = new PdfPCell(new Phrase("  14", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNames14.HorizontalAlignment = 1;
                cellsNames14.Colspan = 0;
                cellsNames14.PaddingBottom = 5f;
                tableregister.AddCell(cellsNames14);

                PdfPCell cellsNames15 = new PdfPCell(new Phrase("  15", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNames15.HorizontalAlignment = 1;
                cellsNames15.Colspan = 0;
                cellsNames15.PaddingBottom = 5f;
                tableregister.AddCell(cellsNames15);

                PdfPCell cellsNames16 = new PdfPCell(new Phrase("  16", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNames16.HorizontalAlignment = 1;
                cellsNames16.Colspan = 0;
                cellsNames16.PaddingBottom = 5f;
                tableregister.AddCell(cellsNames16);

                document.Add(tableregister);

                #endregion Basic Information of the Employee

                document.NewPage();

                PdfPTable tblFingerprints = new PdfPTable(6);
                tblFingerprints.TotalWidth = 500f;
                tblFingerprints.LockedWidth = true;
                float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                tblFingerprints.SetWidths(widthfinger);

                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }

            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;





            }
        }

        protected void BtnformVII_Click(object sender, EventArgs e)
        {


            int Fontsize = 13;
            string fontsyle = "verdana";

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";

            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string relationoccupation = "";
            string relationresidence = "";
            string relationplace = "";
            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Father' ";
            DataTable dtfather = config.ExecuteAdaptorAsyncWithQueryParams(query).Result;

            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }
            string query1 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Mother' ";
            DataTable dtmother = config.ExecuteAdaptorAsyncWithQueryParams(query1).Result;

            if (dtmother.Rows.Count > 0)
            {
                Mname = dtmother.Rows[0]["RName"].ToString();
                Mage = dtmother.Rows[0]["age"].ToString();
                if (Mage == "0")
                {
                    Mage = "";
                }
                else
                {
                    Mage = dtfather.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select EmpESINo from EmpESICodes where Empid='" + txtEmpid.Text + "'  ";
            DataTable dtesi = config.ExecuteAdaptorAsyncWithQueryParams(query2).Result;
            if (dtesi.Rows.Count > 0)
            {
                Esino = dtesi.Rows[0]["EmpESINo"].ToString();

            }



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            string Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
            string EmpGender = "";

            if (Gender == "True")
            {
                EmpGender = "Male";
            }
            if (Gender == "False")
            {
                EmpGender = "Female";
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prphone = dtEmpdetails.Rows[0]["prphone"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                string fileheader2 = Idno + "" + name + "" + "BIO DATA" + " .Pdf";

                Document document = new Document(PageSize.LEGAL);
                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");
                #region

                PdfPTable tablenewa1 = new PdfPTable(12);
                tablenewa1.TotalWidth = 500f;
                tablenewa1.LockedWidth = true;
                float[] width = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f };
                tablenewa1.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 12;
                cellspace.Border = 0;
                cellspace.PaddingTop = -5;

                PdfPCell cellHead = new PdfPCell(new Phrase(" [FORM VII] ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 1;
                cellHead.Colspan = 12;
                cellHead.Border = 0;

                tablenewa1.AddCell(cellHead);

                PdfPCell cellNOTICEs = new PdfPCell(new Phrase(" APPLICATIONS FOR RENEWAL OF LICENCE", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 13, Font.BOLD, BaseColor.BLACK)));
                cellNOTICEs.HorizontalAlignment = 1;
                cellNOTICEs.Colspan = 12;
                cellNOTICEs.Border = 0;

                tablenewa1.AddCell(cellNOTICEs);

                PdfPCell cellRule29 = new PdfPCell(new Phrase(" [Rule 29(2)]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellRule29.HorizontalAlignment = 1;
                cellRule29.Colspan = 12;
                cellRule29.Border = 0;
                tablenewa1.AddCell(cellRule29);

                tablenewa1.AddCell(cellspace);
                tablenewa1.AddCell(cellspace);

                PdfPCell cellShris = new PdfPCell(new Phrase("1.  Name and address of the contractor", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellShris.HorizontalAlignment = 0;
                cellShris.Colspan = 12;
                cellShris.Border = 0;
                cellShris.PaddingLeft = 0;
                tablenewa1.AddCell(cellShris);

                tablenewa1.AddCell(cellspace);


                PdfPCell cellTOli = new PdfPCell(new Phrase("2.  Number and date of the license. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellTOli.HorizontalAlignment = 0;
                cellTOli.Colspan = 12;
                cellTOli.Border = 0;
                cellTOli.PaddingLeft = 0;
                tablenewa1.AddCell(cellTOli);

                tablenewa1.AddCell(cellspace);

                PdfPCell cellSignaturdate = new PdfPCell(new Phrase("3.  Date of expiry of the previous license", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellSignaturdate.HorizontalAlignment = 0;
                cellSignaturdate.Colspan = 12;
                cellSignaturdate.Border = 0;
                cellSignaturdate.PaddingLeft = 0;
                tablenewa1.AddCell(cellSignaturdate);

                tablenewa1.AddCell(cellspace);

                PdfPCell cellWhetherthe = new PdfPCell(new Phrase("4.  Whether the license of the contractor was suspended or revoked.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellWhetherthe.HorizontalAlignment = 0;
                cellWhetherthe.Colspan = 12;
                cellWhetherthe.Border = 0;
                cellWhetherthe.PaddingLeft = 0;
                tablenewa1.AddCell(cellWhetherthe);

                tablenewa1.AddCell(cellspace);

                PdfPCell cellBank = new PdfPCell(new Phrase("1[5. Name of the Bank, number and date of the demand draft enclosed.Date of receipt of the application with demand draft number and date.]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellBank.HorizontalAlignment = 0;
                cellBank.Colspan = 12;
                cellBank.Border = 0;
                cellBank.PaddingLeft = 0;
                tablenewa1.AddCell(cellBank);

                tablenewa1.AddCell(cellspace);
                tablenewa1.AddCell(cellspace);

                PdfPCell cellPlace = new PdfPCell(new Phrase("Place:…………………….. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellPlace.HorizontalAlignment = 0;
                cellPlace.Colspan = 12;
                cellPlace.Border = 0;
                cellPlace.PaddingLeft = 0;
                tablenewa1.AddCell(cellPlace);

                PdfPCell cellPlaces = new PdfPCell(new Phrase("Date:…………………….. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellPlaces.HorizontalAlignment = 0;
                cellPlaces.Colspan = 6;
                cellPlaces.Border = 0;
                cellPlaces.PaddingLeft = 0;
                tablenewa1.AddCell(cellPlaces);

                PdfPCell celldatess = new PdfPCell(new Phrase("Signature of the Applicant ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldatess.HorizontalAlignment = 0;
                celldatess.Colspan = 6;
                celldatess.Border = 0;
                celldatess.PaddingLeft = 0;
                tablenewa1.AddCell(celldatess);

                tablenewa1.AddCell(cellspace);
                tablenewa1.AddCell(cellspace);

                PdfPCell cellfilled = new PdfPCell(new Phrase("(To be filled in the Office of the Licensing Officer) ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellfilled.HorizontalAlignment = 0;
                cellfilled.Colspan = 12;
                cellfilled.Border = 0;
                cellfilled.PaddingLeft = 50;
                tablenewa1.AddCell(cellfilled);


                tablenewa1.AddCell(cellspace);
                tablenewa1.AddCell(cellspace);
                tablenewa1.AddCell(cellspace);
                tablenewa1.AddCell(cellspace);

                PdfPCell cellapplication = new PdfPCell(new Phrase("Date of receipt of the application with Treasury Receipt No. and date. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellapplication.HorizontalAlignment = 0;
                cellapplication.Colspan = 6;
                cellapplication.Border = 0;

                tablenewa1.AddCell(cellapplication);

                PdfPCell cellreceipt = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellreceipt.HorizontalAlignment = 0;
                cellreceipt.Colspan = 6;
                cellreceipt.Border = 0;
                cellreceipt.PaddingLeft = 50;
                tablenewa1.AddCell(cellreceipt);

                tablenewa1.AddCell(cellspace);
                tablenewa1.AddCell(cellspace);
                tablenewa1.AddCell(cellspace);
                tablenewa1.AddCell(cellspace);


                PdfPCell cellreceipts = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellreceipts.HorizontalAlignment = 0;
                cellreceipts.Colspan = 6;
                cellreceipts.Border = 0;
                cellreceipts.PaddingLeft = 50;
                tablenewa1.AddCell(cellreceipts);

                PdfPCell cellLicensing = new PdfPCell(new Phrase(" Signature of the Licensing officer ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellLicensing.HorizontalAlignment = 0;
                cellLicensing.Colspan = 6;
                cellLicensing.Border = 0;

                tablenewa1.AddCell(cellLicensing);

                tablenewa1.AddCell(cellspace);
                tablenewa1.AddCell(cellspace);

                document.Add(tablenewa1);

                #endregion Basic Information of the Employee

                document.NewPage();

                PdfPTable tblFingerprints = new PdfPTable(6);
                tblFingerprints.TotalWidth = 500f;
                tblFingerprints.LockedWidth = true;
                float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                tblFingerprints.SetWidths(widthfinger);

                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }



            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;





            }
        }

        protected void BtnformXXI_Click1(object sender, EventArgs e)
        {



            int Fontsize = 13;
            string fontsyle = "verdana";

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";

            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string relationoccupation = "";
            string relationresidence = "";
            string relationplace = "";
            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Father' ";
            DataTable dtfather = config.ExecuteAdaptorAsyncWithQueryParams(query).Result;

            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }
            string query1 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Mother' ";
            DataTable dtmother = config.ExecuteAdaptorAsyncWithQueryParams(query1).Result;

            if (dtmother.Rows.Count > 0)
            {
                Mname = dtmother.Rows[0]["RName"].ToString();
                Mage = dtmother.Rows[0]["age"].ToString();
                if (Mage == "0")
                {
                    Mage = "";
                }
                else
                {
                    Mage = dtfather.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select EmpESINo from EmpESICodes where Empid='" + txtEmpid.Text + "'  ";
            DataTable dtesi = config.ExecuteAdaptorAsyncWithQueryParams(query2).Result;
            if (dtesi.Rows.Count > 0)
            {
                Esino = dtesi.Rows[0]["EmpESINo"].ToString();

            }



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            string Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
            string EmpGender = "";

            if (Gender == "True")
            {
                EmpGender = "Male";
            }
            if (Gender == "False")
            {
                EmpGender = "Female";
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prphone = dtEmpdetails.Rows[0]["prphone"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                string fileheader2 = Idno + "" + name + "" + "BIO DATA" + " .Pdf";
                Document document = new Document(PageSize.LEGAL.Rotate());

                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");
                #region

                PdfPTable tablenew7 = new PdfPTable(12);
                tablenew7.TotalWidth = 900f;
                tablenew7.LockedWidth = true;
                float[] width = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f };
                tablenew7.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 12;
                cellspace.Border = 0;
                cellspace.PaddingTop = -5;

                PdfPCell cellHead = new PdfPCell(new Phrase("FORM-XXI ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 1;
                cellHead.Colspan = 12;
                cellHead.Border = 0;

                tablenew7.AddCell(cellHead);

                PdfPCell cellreturn123 = new PdfPCell(new Phrase("REGISTER OF FINES", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 12, Font.NORMAL, BaseColor.BLACK)));
                cellreturn123.HorizontalAlignment = 1;
                cellreturn123.Colspan = 12;
                cellreturn123.Border = 0;

                tablenew7.AddCell(cellreturn123);

                PdfPCell cellreturns1234 = new PdfPCell(new Phrase("[Rule 78(1)(a)(ii)]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 3, Font.BOLD, BaseColor.BLACK)));
                cellreturns1234.HorizontalAlignment = 1;
                cellreturns1234.Colspan = 12;
                cellreturns1234.Border = 0;
                tablenew7.AddCell(cellreturns1234);

                tablenew7.AddCell(cellspace);
                tablenew7.AddCell(cellspace);

                PdfPCell cellNames40s = new PdfPCell(new Phrase("1.Name and address of contractor...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames40s.HorizontalAlignment = 0;
                cellNames40s.Colspan = 5;
                cellNames40s.Border = 0;
                cellNames40s.PaddingLeft = 0;
                tablenew7.AddCell(cellNames40s);

                PdfPCell cellNames43s = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames43s.HorizontalAlignment = 0;
                cellNames43s.Colspan = 2;
                cellNames43s.Border = 0;
                cellNames43s.PaddingLeft = 0;
                tablenew7.AddCell(cellNames43s);

                PdfPCell cellNames41s = new PdfPCell(new Phrase("2.Name and address of establishment in/under	which contract is carried on...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames41s.HorizontalAlignment = 0;
                cellNames41s.Colspan = 5;
                cellNames41s.Border = 0;
                cellNames41s.PaddingLeft = 0;
                tablenew7.AddCell(cellNames41s);

                tablenew7.AddCell(cellspace);

                PdfPCell cellNames42s = new PdfPCell(new Phrase("3.   Nature and location of work...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames42s.HorizontalAlignment = 0;
                cellNames42s.Colspan = 5;
                cellNames42s.Border = 0;
                cellNames42s.PaddingLeft = 0;
                tablenew7.AddCell(cellNames42s);

                PdfPCell cellNames44s = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames44s.HorizontalAlignment = 0;
                cellNames44s.Colspan = 2;
                cellNames44s.Border = 0;
                cellNames44s.PaddingLeft = 0;
                tablenew7.AddCell(cellNames44s);

                PdfPCell cellNames45s = new PdfPCell(new Phrase("4.   Name and address of principal employer...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames45s.HorizontalAlignment = 0;
                cellNames45s.Colspan = 5;
                cellNames45s.Border = 0;
                cellNames45s.PaddingLeft = 0;
                tablenew7.AddCell(cellNames45s);

                tablenew7.AddCell(cellspace);
                tablenew7.AddCell(cellspace);
                tablenew7.AddCell(cellspace);

                PdfPCell cellNames46s = new PdfPCell(new Phrase("Sl.No. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames46s.HorizontalAlignment = 1;
                cellNames46s.Colspan = 0;
                tablenew7.AddCell(cellNames46s);

                PdfPCell cellNames47s = new PdfPCell(new Phrase("Name of workman", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames47s.HorizontalAlignment = 1;
                cellNames47s.Colspan = 0;
                tablenew7.AddCell(cellNames47s);

                PdfPCell cellNames48s = new PdfPCell(new Phrase("Father's/husband's name ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames48s.HorizontalAlignment = 1;
                cellNames48s.Colspan = 0;
                tablenew7.AddCell(cellNames48s);

                PdfPCell cellNames49s = new PdfPCell(new Phrase("Designation of nature of employment", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames49s.HorizontalAlignment = 1;
                cellNames49s.Colspan = 0;
                tablenew7.AddCell(cellNames49s);

                PdfPCell cellNames50s = new PdfPCell(new Phrase("Act/Omission for which line imposed ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames50s.HorizontalAlignment = 1;
                cellNames50s.Colspan = 0;
                tablenew7.AddCell(cellNames50s);

                PdfPCell cellNames51s = new PdfPCell(new Phrase("Date of offence", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames51s.HorizontalAlignment = 1;
                cellNames51s.Colspan = 0;
                tablenew7.AddCell(cellNames51s);

                PdfPCell cellNames52s = new PdfPCell(new Phrase("Whether workman showned cause against fine ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames52s.HorizontalAlignment = 1;
                cellNames52s.Colspan = 0;
                tablenew7.AddCell(cellNames52s);

                PdfPCell cellNames53 = new PdfPCell(new Phrase("Name of person in whose presence employee's explaination has heard", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames53.HorizontalAlignment = 1;
                cellNames53.Colspan = 0;
                tablenew7.AddCell(cellNames53);

                PdfPCell cellNames54s = new PdfPCell(new Phrase("Wage periods and wages payable", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames54s.HorizontalAlignment = 1;
                cellNames54s.Colspan = 0;
                tablenew7.AddCell(cellNames54s);

                PdfPCell cellNames55s = new PdfPCell(new Phrase("Amount of fine imposed ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames55s.HorizontalAlignment = 1;
                cellNames55s.Colspan = 0;
                tablenew7.AddCell(cellNames55s);

                PdfPCell cellNames56s = new PdfPCell(new Phrase("Date on which fine realised", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames56s.HorizontalAlignment = 1;
                cellNames56s.Colspan = 0;
                tablenew7.AddCell(cellNames56s);

                PdfPCell cellNames57s = new PdfPCell(new Phrase("Remarks", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames57s.HorizontalAlignment = 1;
                cellNames57s.Colspan = 0;
                tablenew7.AddCell(cellNames57s);

                PdfPCell cellsNames47s = new PdfPCell(new Phrase("  1 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames47s.HorizontalAlignment = 1;
                cellsNames47s.Colspan = 0;
                tablenew7.AddCell(cellsNames47s);

                PdfPCell cellsNamess47s = new PdfPCell(new Phrase("  2", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNamess47s.HorizontalAlignment = 1;
                cellsNamess47s.Colspan = 0;
                tablenew7.AddCell(cellsNamess47s);

                PdfPCell cellsNames48s = new PdfPCell(new Phrase("  3 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames48s.HorizontalAlignment = 1;
                cellsNames48s.Colspan = 0;
                cellsNames48s.Border = 0;
                cellsNames48s.PaddingLeft = 0;
                cellsNames48s.PaddingTop = 10;
                cellsNames48s.PaddingBottom = 10;
                cellsNames48s.BorderWidthLeft = 0;
                cellsNames48s.BorderWidthRight = 0.9f;
                cellsNames48s.BorderWidthTop = 0;
                cellsNames48s.BorderWidthBottom = 0.5f;
                tablenew7.AddCell(cellsNames48s);

                PdfPCell cellsNames49s = new PdfPCell(new Phrase("  4", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames49s.HorizontalAlignment = 1;
                cellsNames49s.Colspan = 0;
                tablenew7.AddCell(cellsNames49s);

                PdfPCell cellsNames50s = new PdfPCell(new Phrase("  5 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames50s.HorizontalAlignment = 1;
                cellsNames50s.Colspan = 0;
                tablenew7.AddCell(cellsNames50s);

                PdfPCell cellsNames51s = new PdfPCell(new Phrase("  6", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames51s.HorizontalAlignment = 1;
                cellsNames51s.Colspan = 0;
                tablenew7.AddCell(cellsNames51s);

                PdfPCell cellsNames52s = new PdfPCell(new Phrase("  7 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames52s.HorizontalAlignment = 1;
                cellsNames52s.Colspan = 0;
                tablenew7.AddCell(cellsNames52s);

                PdfPCell cellsNames53s = new PdfPCell(new Phrase("  8", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames53s.HorizontalAlignment = 1;
                cellsNames53s.Colspan = 0;
                tablenew7.AddCell(cellsNames53s);

                PdfPCell cellsNames54s = new PdfPCell(new Phrase("  9", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames54s.HorizontalAlignment = 1;
                cellsNames54s.Colspan = 0;
                tablenew7.AddCell(cellsNames54s);

                PdfPCell cellsNames55s = new PdfPCell(new Phrase("  10", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames55s.HorizontalAlignment = 1;
                cellsNames55s.Colspan = 0;
                tablenew7.AddCell(cellsNames55s);

                PdfPCell cellsNames56s = new PdfPCell(new Phrase("  11", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames56s.HorizontalAlignment = 1;
                cellsNames56s.Colspan = 0;
                tablenew7.AddCell(cellsNames56s);

                PdfPCell cellsNames57s = new PdfPCell(new Phrase("  12", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames57s.HorizontalAlignment = 1;
                cellsNames57s.Colspan = 0;
                tablenew7.AddCell(cellsNames57s);

                document.Add(tablenew7);

                #endregion Basic Information of the Employee


                document.NewPage();

                PdfPTable tblFingerprints = new PdfPTable(6);
                tblFingerprints.TotalWidth = 500f;
                tblFingerprints.LockedWidth = true;
                float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                tblFingerprints.SetWidths(widthfinger);





                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";


                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }



            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;






            }
        }

        protected void BtnformXXII_Click(object sender, EventArgs e)
        {

            int Fontsize = 13;
            string fontsyle = "verdana";

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";

            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string relationoccupation = "";
            string relationresidence = "";
            string relationplace = "";
            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Father' ";
            DataTable dtfather = config.ExecuteAdaptorAsyncWithQueryParams(query).Result;

            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }
            string query1 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Mother' ";
            DataTable dtmother = config.ExecuteAdaptorAsyncWithQueryParams(query1).Result;

            if (dtmother.Rows.Count > 0)
            {
                Mname = dtmother.Rows[0]["RName"].ToString();
                Mage = dtmother.Rows[0]["age"].ToString();
                if (Mage == "0")
                {
                    Mage = "";
                }
                else
                {
                    Mage = dtfather.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select EmpESINo from EmpESICodes where Empid='" + txtEmpid.Text + "'  ";
            DataTable dtesi = config.ExecuteAdaptorAsyncWithQueryParams(query2).Result;
            if (dtesi.Rows.Count > 0)
            {
                Esino = dtesi.Rows[0]["EmpESINo"].ToString();

            }



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            string Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
            string EmpGender = "";

            if (Gender == "True")
            {
                EmpGender = "Male";
            }
            if (Gender == "False")
            {
                EmpGender = "Female";
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prphone = dtEmpdetails.Rows[0]["prphone"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                string fileheader2 = Idno + "" + name + "" + "BIO DATA" + " .Pdf";
                Document document = new Document(PageSize.LEGAL.Rotate());

                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");
                #region

                PdfPTable tablenew8 = new PdfPTable(11);
                tablenew8.TotalWidth = 900f;
                tablenew8.LockedWidth = true;
                float[] width = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, };
                tablenew8.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 12;
                cellspace.Border = 0;
                cellspace.PaddingTop = -5;




                PdfPCell cellHead = new PdfPCell(new Phrase("FORM-XXII ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 1;
                cellHead.Colspan = 12;
                cellHead.Border = 0;

                tablenew8.AddCell(cellHead);






                PdfPCell cellreturn123s = new PdfPCell(new Phrase("REGISTER OF ADVANCES", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 12, Font.NORMAL, BaseColor.BLACK)));
                cellreturn123s.HorizontalAlignment = 1;
                cellreturn123s.Colspan = 12;
                cellreturn123s.Border = 0;

                tablenew8.AddCell(cellreturn123s);



                PdfPCell cellreturnrule = new PdfPCell(new Phrase("[Rule 78(1)(a)(iii)]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 3, Font.BOLD, BaseColor.BLACK)));
                cellreturnrule.HorizontalAlignment = 1;
                cellreturnrule.Colspan = 12;
                cellreturnrule.Border = 0;
                tablenew8.AddCell(cellreturnrule);

                tablenew8.AddCell(cellspace);
                tablenew8.AddCell(cellspace);


                PdfPCell cellNames4s2 = new PdfPCell(new Phrase("1.Name and address of contractor...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames4s2.HorizontalAlignment = 0;
                cellNames4s2.Colspan = 5;
                cellNames4s2.Border = 0;
                cellNames4s2.PaddingLeft = 0;
                tablenew8.AddCell(cellNames4s2);



                PdfPCell cellNames4s1 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames4s1.HorizontalAlignment = 0;
                cellNames4s1.Colspan = 2;
                cellNames4s1.Border = 0;
                cellNames4s1.PaddingLeft = 0;
                tablenew8.AddCell(cellNames4s1);




                PdfPCell cellNames4s3 = new PdfPCell(new Phrase("2.Name and address of establishment in/under	which contract is carried on...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames4s3.HorizontalAlignment = 0;
                cellNames4s3.Colspan = 5;
                cellNames4s3.Border = 0;
                cellNames4s3.PaddingLeft = 0;
                tablenew8.AddCell(cellNames4s3);

                tablenew8.AddCell(cellspace);



                PdfPCell cellNames4s4 = new PdfPCell(new Phrase("3.   Nature and location of work...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames4s4.HorizontalAlignment = 0;
                cellNames4s4.Colspan = 5;
                cellNames4s4.Border = 0;
                cellNames4s4.PaddingLeft = 0;
                tablenew8.AddCell(cellNames4s4);



                PdfPCell cellNames4s5 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames4s5.HorizontalAlignment = 0;
                cellNames4s5.Colspan = 2;
                cellNames4s5.Border = 0;
                cellNames4s5.PaddingLeft = 0;
                tablenew8.AddCell(cellNames4s5);

                PdfPCell cellNames4s6 = new PdfPCell(new Phrase("4.   Name and address of principal employer...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames4s6.HorizontalAlignment = 0;
                cellNames4s6.Colspan = 5;
                cellNames4s6.Border = 0;
                cellNames4s6.PaddingLeft = 0;
                tablenew8.AddCell(cellNames4s6);


                tablenew8.AddCell(cellspace);
                tablenew8.AddCell(cellspace);
                tablenew8.AddCell(cellspace);

                PdfPCell cellNames4s7 = new PdfPCell(new Phrase("Sl.No. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames4s7.HorizontalAlignment = 1;
                cellNames4s7.Colspan = 0;
                tablenew8.AddCell(cellNames4s7);

                PdfPCell cellNames4s8 = new PdfPCell(new Phrase("Name of workman", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames4s8.HorizontalAlignment = 1;
                cellNames4s8.Colspan = 0;
                tablenew8.AddCell(cellNames4s8);

                PdfPCell cellNames4s9 = new PdfPCell(new Phrase("Father's/husband's name ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames4s9.HorizontalAlignment = 1;
                cellNames4s9.Colspan = 0;
                tablenew8.AddCell(cellNames4s9);

                PdfPCell cellNames4s0 = new PdfPCell(new Phrase("nature of employment/Designation", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames4s0.HorizontalAlignment = 1;
                cellNames4s0.Colspan = 0;
                tablenew8.AddCell(cellNames4s0);

                PdfPCell cellNames5s0 = new PdfPCell(new Phrase("Wage periods and wages payable ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames5s0.HorizontalAlignment = 1;
                cellNames5s0.Colspan = 0;
                tablenew8.AddCell(cellNames5s0);

                PdfPCell cellNames5s1 = new PdfPCell(new Phrase("Date and amount of advance given", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames5s1.HorizontalAlignment = 1;
                cellNames5s1.Colspan = 0;
                tablenew8.AddCell(cellNames5s1);

                PdfPCell cellNames5s2 = new PdfPCell(new Phrase("Purpose (S) for which advance made ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames5s2.HorizontalAlignment = 1;
                cellNames5s2.Colspan = 0;
                tablenew8.AddCell(cellNames5s2);

                PdfPCell cellNames5s3 = new PdfPCell(new Phrase("No.of instalments by which advance to be repaid", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames5s3.HorizontalAlignment = 1;
                cellNames5s3.Colspan = 0;
                tablenew8.AddCell(cellNames5s3);

                PdfPCell cellNames5s4 = new PdfPCell(new Phrase("Date and amount of each instalment repaid ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames5s4.HorizontalAlignment = 1;
                cellNames5s4.Colspan = 0;
                tablenew8.AddCell(cellNames5s4);

                PdfPCell cellNames5s5 = new PdfPCell(new Phrase("Date on which last instalment was repaid", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames5s5.HorizontalAlignment = 1;
                cellNames5s5.Colspan = 0;
                tablenew8.AddCell(cellNames5s5);

                PdfPCell cellNames5s6 = new PdfPCell(new Phrase("Remarks", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames5s6.HorizontalAlignment = 1;
                cellNames5s6.Colspan = 0;
                tablenew8.AddCell(cellNames5s6);

                PdfPCell cellsNames4sa = new PdfPCell(new Phrase("  1 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames4sa.HorizontalAlignment = 1;
                cellsNames4sa.Colspan = 0;
                tablenew8.AddCell(cellsNames4sa);

                PdfPCell cellsNamess4sb = new PdfPCell(new Phrase("  2", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNamess4sb.HorizontalAlignment = 1;
                cellsNamess4sb.Colspan = 0;
                tablenew8.AddCell(cellsNamess4sb);

                PdfPCell cellsNames4sc = new PdfPCell(new Phrase("  3 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames4sc.HorizontalAlignment = 1;
                cellsNames4sc.Colspan = 0;
                tablenew8.AddCell(cellsNames4sc);

                PdfPCell cellsNames4sd = new PdfPCell(new Phrase("  4", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames4sd.HorizontalAlignment = 1;
                cellsNames4sd.Colspan = 0;
                tablenew8.AddCell(cellsNames4sd);

                PdfPCell cellsNames5se = new PdfPCell(new Phrase("  5 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames5se.HorizontalAlignment = 1;
                cellsNames5se.Colspan = 0;
                tablenew8.AddCell(cellsNames5se);

                PdfPCell cellsNames5sf = new PdfPCell(new Phrase("  6", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames5sf.HorizontalAlignment = 1;
                cellsNames5sf.Colspan = 0;
                tablenew8.AddCell(cellsNames5sf);

                PdfPCell cellsNames5sg = new PdfPCell(new Phrase("  7 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames5sg.HorizontalAlignment = 1;
                cellsNames5sg.Colspan = 0;
                tablenew8.AddCell(cellsNames5sg);

                PdfPCell cellsNames5sh = new PdfPCell(new Phrase("  8", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames5sh.HorizontalAlignment = 1;
                cellsNames5sh.Colspan = 0;
                tablenew8.AddCell(cellsNames5sh);

                PdfPCell cellsNames5si = new PdfPCell(new Phrase("  9", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames5si.HorizontalAlignment = 1;
                cellsNames5si.Colspan = 0;
                tablenew8.AddCell(cellsNames5si);

                PdfPCell cellsNames5sj = new PdfPCell(new Phrase("  10", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames5sj.HorizontalAlignment = 1;
                cellsNames5sj.Colspan = 0;
                tablenew8.AddCell(cellsNames5sj);

                PdfPCell cellsNames5sk = new PdfPCell(new Phrase("  11", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames5sk.HorizontalAlignment = 1;
                cellsNames5sk.Colspan = 0;
                tablenew8.AddCell(cellsNames5sk);


                document.Add(tablenew8);

                #endregion Basic Information of the Employee

                document.NewPage();

                PdfPTable tblFingerprints = new PdfPTable(6);
                tblFingerprints.TotalWidth = 500f;
                tblFingerprints.LockedWidth = true;
                float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                tblFingerprints.SetWidths(widthfinger);

                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";


                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }



            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;

            }
        }

        protected void BtnformIV_Click(object sender, EventArgs e)
        {


            int Fontsize = 13;
            string fontsyle = "verdana";

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";

            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string relationoccupation = "";
            string relationresidence = "";
            string relationplace = "";
            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Father' ";
            DataTable dtfather = config.ExecuteAdaptorAsyncWithQueryParams(query).Result;

            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }
            string query1 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Mother' ";
            DataTable dtmother = config.ExecuteAdaptorAsyncWithQueryParams(query1).Result;

            if (dtmother.Rows.Count > 0)
            {
                Mname = dtmother.Rows[0]["RName"].ToString();
                Mage = dtmother.Rows[0]["age"].ToString();
                if (Mage == "0")
                {
                    Mage = "";
                }
                else
                {
                    Mage = dtfather.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select EmpESINo from EmpESICodes where Empid='" + txtEmpid.Text + "'  ";
            DataTable dtesi = config.ExecuteAdaptorAsyncWithQueryParams(query2).Result;
            if (dtesi.Rows.Count > 0)
            {
                Esino = dtesi.Rows[0]["EmpESINo"].ToString();

            }



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            string Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
            string EmpGender = "";

            if (Gender == "True")
            {
                EmpGender = "Male";
            }
            if (Gender == "False")
            {
                EmpGender = "Female";
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prphone = dtEmpdetails.Rows[0]["prphone"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                string fileheader2 = Idno + "" + name + "" + "BIO DATA" + " .Pdf";

                Document document = new Document(PageSize.LEGAL);
                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");
                #region

                PdfPTable tablenewone = new PdfPTable(12);
                tablenewone.TotalWidth = 500f;
                tablenewone.LockedWidth = true;
                float[] width = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f };
                tablenewone.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 12;
                cellspace.Border = 0;
                cellspace.PaddingTop = -5;

                PdfPCell cellHead = new PdfPCell(new Phrase("FORM-IV  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 1;
                cellHead.Colspan = 12;
                cellHead.Border = 0;

                tablenewone.AddCell(cellHead);

                PdfPCell cellAPPLICATIONSFOR = new PdfPCell(new Phrase("APPLICATIONS FOR LICENCE", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 13, Font.BOLD, BaseColor.BLACK)));
                cellAPPLICATIONSFOR.HorizontalAlignment = 1;
                cellAPPLICATIONSFOR.Colspan = 12;
                cellAPPLICATIONSFOR.Border = 0;

                tablenewone.AddCell(cellAPPLICATIONSFOR);

                PdfPCell cellRule21 = new PdfPCell(new Phrase("[Rule 21(1)]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellRule21.HorizontalAlignment = 1;
                cellRule21.Colspan = 12;
                cellRule21.Border = 0;
                tablenewone.AddCell(cellRule21);

                tablenewone.AddCell(cellspace);
                tablenewone.AddCell(cellspace);

                PdfPCell cellShris7 = new PdfPCell(new Phrase("1.  Name and address of the contractor (including his father's name in case of individuals).", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellShris7.HorizontalAlignment = 0;
                cellShris7.Colspan = 12;
                cellShris7.Border = 0;
                tablenewone.AddCell(cellShris7);

                tablenewone.AddCell(cellspace);

                PdfPCell cellTOli5 = new PdfPCell(new Phrase("2.  Date of birth and age (in case of individuals). ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellTOli5.HorizontalAlignment = 0;
                cellTOli5.Colspan = 12;
                cellTOli5.Border = 0;
                tablenewone.AddCell(cellTOli5);

                tablenewone.AddCell(cellspace);

                PdfPCell cellSignaturdate6 = new PdfPCell(new Phrase("3.  Particulars of Establishment where contract labour is to be employed-", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellSignaturdate6.HorizontalAlignment = 0;
                cellSignaturdate6.Colspan = 12;
                cellSignaturdate6.Border = 0;
                tablenewone.AddCell(cellSignaturdate6);

                tablenewone.AddCell(cellspace);

                PdfPCell cellShris5 = new PdfPCell(new Phrase("   (a) Name and address of the establishment..", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellShris5.HorizontalAlignment = 0;
                cellShris5.Colspan = 12;
                cellShris5.Border = 0;
                tablenewone.AddCell(cellShris5);

                PdfPCell cellTOli2 = new PdfPCell(new Phrase("   (b) Type of business, trade, industry, manufacture or occupation, which is   carried on in the                   establishment.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellTOli2.HorizontalAlignment = 0;
                cellTOli2.Colspan = 12;
                cellTOli2.Border = 0;
                tablenewone.AddCell(cellTOli2);

                PdfPCell cellSignaturdate4 = new PdfPCell(new Phrase("   (c ) Number and date of certificate of registration of the establishment under the Act.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellSignaturdate4.HorizontalAlignment = 0;
                cellSignaturdate4.Colspan = 12;
                cellSignaturdate4.Border = 0;
                tablenewone.AddCell(cellSignaturdate4);

                PdfPCell cellShris4 = new PdfPCell(new Phrase("   (d) Name and address of the Principal Employer.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellShris4.HorizontalAlignment = 0;
                cellShris4.Colspan = 12;
                cellShris4.Border = 0;
                cellShris4.PaddingLeft = 0;
                tablenewone.AddCell(cellShris4);
                tablenewone.AddCell(cellspace);

                PdfPCell cellWhetherthe3 = new PdfPCell(new Phrase("4.  Whether the license of the contractor was suspended or revoked.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellWhetherthe3.HorizontalAlignment = 0;
                cellWhetherthe3.Colspan = 12;
                cellWhetherthe3.Border = 0;
                cellWhetherthe3.PaddingLeft = 0;
                tablenewone.AddCell(cellWhetherthe3);

                tablenewone.AddCell(cellspace);

                PdfPCell cellBank3 = new PdfPCell(new Phrase("   (a) Name and address of the establishment.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellBank3.HorizontalAlignment = 0;
                cellBank3.Colspan = 12;
                cellBank3.Border = 0;
                cellBank3.PaddingLeft = 0;
                tablenewone.AddCell(cellBank3);

                PdfPCell cellShris2 = new PdfPCell(new Phrase("   (b) Duration of the proposed contract work (give particulars of proposed date  of    commencing and ending)..", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellShris2.HorizontalAlignment = 0;
                cellShris2.Colspan = 12;
                cellShris2.Border = 0;
                cellShris2.PaddingLeft = 0;
                tablenewone.AddCell(cellShris2);

                PdfPCell cellTOli = new PdfPCell(new Phrase("   (c) Name and address of the Agent or Manager of Contractor at the work site. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellTOli.HorizontalAlignment = 0;
                cellTOli.Colspan = 12;
                cellTOli.Border = 0;
                cellTOli.PaddingLeft = 0;
                tablenewone.AddCell(cellTOli);

                tablenewone.AddCell(cellspace);

                PdfPCell cellSignaturdate2 = new PdfPCell(new Phrase("   (d) Maximum number of contract labour proposed to be employed in the establishment on   any date.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellSignaturdate2.HorizontalAlignment = 0;
                cellSignaturdate2.Colspan = 12;
                cellSignaturdate2.Border = 0;
                cellSignaturdate2.PaddingLeft = 0;
                tablenewone.AddCell(cellSignaturdate2);

                tablenewone.AddCell(cellspace);

                PdfPCell cellWhetherthe11 = new PdfPCell(new Phrase("5.  Whether the contractor was convicted of any offence within the preceding five years.  If so, give details.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellWhetherthe11.HorizontalAlignment = 0;
                cellWhetherthe11.Colspan = 12;
                cellWhetherthe11.Border = 0;
                cellWhetherthe11.PaddingLeft = 0;
                tablenewone.AddCell(cellWhetherthe11);

                tablenewone.AddCell(cellspace);

                PdfPCell cellBank2 = new PdfPCell(new Phrase("6.  Whether there was any order against the contractor revoking or suspending license or forfeiting security deposits in respect of an earlier contract.  If so, the date of such order.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellBank2.HorizontalAlignment = 0;
                cellBank2.Colspan = 12;
                cellBank2.Border = 0;
                cellBank2.PaddingLeft = 0;
                tablenewone.AddCell(cellBank2);

                tablenewone.AddCell(cellspace);
                PdfPCell cellShris1 = new PdfPCell(new Phrase("7.  Whether contractor has worked in any other establishment within the past five years. If so, give details of the Principal Employer, establishments, and nature of work.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellShris1.HorizontalAlignment = 0;
                cellShris1.Colspan = 12;
                cellShris1.Border = 0;
                cellShris1.PaddingLeft = 0;
                tablenewone.AddCell(cellShris1);

                tablenewone.AddCell(cellspace);

                PdfPCell cellTOli1 = new PdfPCell(new Phrase("8.  Whether a certificate by the Principal Employer in Form V is enclosed. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellTOli1.HorizontalAlignment = 0;
                cellTOli1.Colspan = 12;
                cellTOli1.Border = 0;
                cellTOli1.PaddingLeft = 0;
                tablenewone.AddCell(cellTOli1);

                tablenewone.AddCell(cellspace);

                PdfPCell cellSignaturdate1 = new PdfPCell(new Phrase("1[9.  Amount of license fee-name of the Union Bank draft No. and date].", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellSignaturdate1.HorizontalAlignment = 0;
                cellSignaturdate1.Colspan = 12;
                cellSignaturdate1.Border = 0;
                cellSignaturdate1.PaddingLeft = 0;
                tablenewone.AddCell(cellSignaturdate1);

                tablenewone.AddCell(cellspace);

                PdfPCell cellWhetherthe1 = new PdfPCell(new Phrase("10.  Amount of security deposit-name of the Union Bank, demand draft No. and date.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellWhetherthe1.HorizontalAlignment = 0;
                cellWhetherthe1.Colspan = 12;
                cellWhetherthe1.Border = 0;
                cellWhetherthe1.PaddingLeft = 0;
                tablenewone.AddCell(cellWhetherthe1);

                tablenewone.AddCell(cellspace);

                PdfPCell cellBank1 = new PdfPCell(new Phrase("Note: The application shall be accompanied by demand draft and challan for the appropriate amount and a certificate in Form V from the principal employer……. …………………date of the receipt of the application with 'demand draft' and the  challan for fees/security deposit. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellBank1.HorizontalAlignment = 0;
                cellBank1.Colspan = 12;
                cellBank1.Border = 0;
                cellBank1.PaddingLeft = 0;
                tablenewone.AddCell(cellBank1);

                tablenewone.AddCell(cellspace);
                tablenewone.AddCell(cellspace);

                PdfPCell cellPlace7 = new PdfPCell(new Phrase(" DECLARATION ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellPlace7.HorizontalAlignment = 1;
                cellPlace7.Colspan = 12;
                cellPlace7.Border = 0;
                cellPlace7.PaddingLeft = 0;
                tablenewone.AddCell(cellPlace7);

                PdfPCell cellPlace6 = new PdfPCell(new Phrase("  I hereby declare that the details given above are correct to the best of my knowledge and belief. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellPlace6.HorizontalAlignment = 0;
                cellPlace6.Colspan = 12;
                cellPlace6.Border = 0;
                cellPlace6.PaddingLeft = 0;
                tablenewone.AddCell(cellPlace6);

                tablenewone.AddCell(cellspace);
                tablenewone.AddCell(cellspace);

                PdfPCell cellPlace5 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellPlace5.HorizontalAlignment = 0;
                cellPlace5.Colspan = 6;
                cellPlace5.Border = 0;
                cellPlace5.PaddingLeft = 0;
                tablenewone.AddCell(cellPlace5);

                PdfPCell celldatess1 = new PdfPCell(new Phrase("Signature of the Applicant(contractor) ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldatess1.HorizontalAlignment = 0;
                celldatess1.Colspan = 6;
                celldatess1.Border = 0;
                celldatess1.PaddingLeft = 0;
                tablenewone.AddCell(celldatess1);

                tablenewone.AddCell(cellspace);

                PdfPCell cellPlace3 = new PdfPCell(new Phrase("Place:…………………….. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellPlace3.HorizontalAlignment = 0;
                cellPlace3.Colspan = 12;
                cellPlace3.Border = 0;
                cellPlace3.PaddingLeft = 0;
                tablenewone.AddCell(cellPlace3);

                PdfPCell cellPlaces1 = new PdfPCell(new Phrase("Date:…………………….. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellPlaces1.HorizontalAlignment = 0;
                cellPlaces1.Colspan = 12;
                cellPlaces1.Border = 0;
                cellPlaces1.PaddingLeft = 0;
                tablenewone.AddCell(cellPlaces1);

                tablenewone.AddCell(cellspace);
                tablenewone.AddCell(cellspace);

                PdfPCell cellfilled1 = new PdfPCell(new Phrase("Note: The application should be accompanied by a Treasury Receipt for the   appopriate amount and a certificate in Form V from the Principal Employer. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellfilled1.HorizontalAlignment = 0;
                cellfilled1.Colspan = 12;
                cellfilled1.Border = 0;
                cellfilled1.PaddingLeft = 50;
                tablenewone.AddCell(cellfilled1);

                tablenewone.AddCell(cellspace);
                tablenewone.AddCell(cellspace);
                tablenewone.AddCell(cellspace);
                tablenewone.AddCell(cellspace);

                PdfPCell cellapplication1 = new PdfPCell(new Phrase("  (To be filled in the office of the Licensing Officer) Date of receipt of the application with challan for fees/security deposit. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellapplication1.HorizontalAlignment = 0;
                cellapplication1.Colspan = 12;
                cellapplication1.Border = 0;
                tablenewone.AddCell(cellapplication1);

                tablenewone.AddCell(cellspace);
                tablenewone.AddCell(cellspace);

                PdfPCell cellPlace1 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellPlace1.HorizontalAlignment = 0;
                cellPlace1.Colspan = 6;
                cellPlace1.Border = 0;
                cellPlace1.PaddingLeft = 0;
                tablenewone.AddCell(cellPlace1);

                PdfPCell celltheLicensing = new PdfPCell(new Phrase("   Signature of the Licensing officer", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltheLicensing.HorizontalAlignment = 0;
                celltheLicensing.Colspan = 6;
                celltheLicensing.Border = 0;
                celltheLicensing.PaddingLeft = 50;
                tablenewone.AddCell(celltheLicensing);

                tablenewone.AddCell(cellspace);
                tablenewone.AddCell(cellspace);
                tablenewone.AddCell(cellspace);
                tablenewone.AddCell(cellspace);

                document.Add(tablenewone);

                #endregion Basic Information of the Employee

                document.NewPage();

                PdfPTable tblFingerprints = new PdfPTable(6);
                tblFingerprints.TotalWidth = 500f;
                tblFingerprints.LockedWidth = true;
                float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                tblFingerprints.SetWidths(widthfinger);

                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();
            }

            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;
            }
        }

        protected void BtnformXIII_Click(object sender, EventArgs e)
        {




            int Fontsize = 13;
            string fontsyle = "verdana";

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";

            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string relationoccupation = "";
            string relationresidence = "";
            string relationplace = "";
            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Father' ";
            DataTable dtfather = config.ExecuteAdaptorAsyncWithQueryParams(query).Result;

            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }
            string query1 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Mother' ";
            DataTable dtmother = config.ExecuteAdaptorAsyncWithQueryParams(query1).Result;

            if (dtmother.Rows.Count > 0)
            {
                Mname = dtmother.Rows[0]["RName"].ToString();
                Mage = dtmother.Rows[0]["age"].ToString();
                if (Mage == "0")
                {
                    Mage = "";
                }
                else
                {
                    Mage = dtfather.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select EmpESINo from EmpESICodes where Empid='" + txtEmpid.Text + "'  ";
            DataTable dtesi = config.ExecuteAdaptorAsyncWithQueryParams(query2).Result;
            if (dtesi.Rows.Count > 0)
            {
                Esino = dtesi.Rows[0]["EmpESINo"].ToString();

            }



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            string Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
            string EmpGender = "";

            if (Gender == "True")
            {
                EmpGender = "Male";
            }
            if (Gender == "False")
            {
                EmpGender = "Female";
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prphone = dtEmpdetails.Rows[0]["prphone"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                string fileheader2 = Idno + "" + name + "" + "BIO DATA" + " .Pdf";
                Document document = new Document(PageSize.LEGAL.Rotate());

                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");
                #region

                PdfPTable tablenew = new PdfPTable(12);
                tablenew.TotalWidth = 900f;
                tablenew.LockedWidth = true;
                float[] width = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f };
                tablenew.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 12;
                cellspace.Border = 0;
                cellspace.PaddingTop = -5;

                PdfPCell cellHead = new PdfPCell(new Phrase("Form-XXIII ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 1;
                cellHead.Colspan = 12;
                cellHead.Border = 0;

                tablenew.AddCell(cellHead);

                PdfPCell cellreturn12a = new PdfPCell(new Phrase("  REGISTER OF WORKMEN EMPLOYED BY CONTRACTOR", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 12, Font.BOLD, BaseColor.BLACK)));
                cellreturn12a.HorizontalAlignment = 1;
                cellreturn12a.Colspan = 12;
                cellreturn12a.Border = 0;

                tablenew.AddCell(cellreturn12a);

                PdfPCell cellRule75 = new PdfPCell(new Phrase(" [Rule 75]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 3, Font.BOLD, BaseColor.BLACK)));
                cellRule75.HorizontalAlignment = 1;
                cellRule75.Colspan = 12;
                cellRule75.Border = 0;
                tablenew.AddCell(cellRule75);

                tablenew.AddCell(cellspace);
                tablenew.AddCell(cellspace);

                PdfPCell cellNamess40 = new PdfPCell(new Phrase("1.Name and address of contractor...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess40.HorizontalAlignment = 0;
                cellNamess40.Colspan = 5;
                cellNamess40.Border = 0;
                cellNamess40.PaddingLeft = 0;
                tablenew.AddCell(cellNamess40);

                PdfPCell cellNamess43 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess43.HorizontalAlignment = 0;
                cellNamess43.Colspan = 2;
                cellNamess43.Border = 0;
                cellNamess43.PaddingLeft = 0;
                tablenew.AddCell(cellNamess43);

                PdfPCell cellNamess41 = new PdfPCell(new Phrase("2.Name and address of establishment in/under	which contract is carried on...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess41.HorizontalAlignment = 0;
                cellNamess41.Colspan = 5;
                cellNamess41.Border = 0;
                cellNamess41.PaddingLeft = 0;
                tablenew.AddCell(cellNamess41);

                tablenew.AddCell(cellspace);

                PdfPCell cellNamess42 = new PdfPCell(new Phrase("3.   Nature and location of work...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess42.HorizontalAlignment = 0;
                cellNamess42.Colspan = 5;
                cellNamess42.Border = 0;
                cellNamess42.PaddingLeft = 0;
                tablenew.AddCell(cellNamess42);

                PdfPCell cellNamess44 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess44.HorizontalAlignment = 0;
                cellNamess44.Colspan = 2;
                cellNamess44.Border = 0;
                cellNamess44.PaddingLeft = 0;
                tablenew.AddCell(cellNamess44);

                PdfPCell cellNamess45 = new PdfPCell(new Phrase("4.   Name and address of principal employer...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess45.HorizontalAlignment = 0;
                cellNamess45.Colspan = 5;
                cellNamess45.Border = 0;
                cellNamess45.PaddingLeft = 0;
                tablenew.AddCell(cellNamess45);

                tablenew.AddCell(cellspace);
                tablenew.AddCell(cellspace);
                tablenew.AddCell(cellspace);

                PdfPCell cellNamess46 = new PdfPCell(new Phrase("Sl.No. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess46.HorizontalAlignment = 1;
                cellNamess46.Colspan = 0;
                cellNamess46.Border = 0;
                cellNamess46.PaddingLeft = 0;
                cellNamess46.PaddingTop = 20;
                cellNamess46.PaddingBottom = 20;
                cellNamess46.BorderWidthLeft = 0.5f;
                cellNamess46.BorderWidthRight = 0.9f;
                cellNamess46.BorderWidthTop = 0.5f;
                cellNamess46.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNamess46);

                PdfPCell cellNamess47 = new PdfPCell(new Phrase("Name and surname of workman", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess47.HorizontalAlignment = 1;
                cellNamess47.Colspan = 0;
                cellNamess47.Border = 0;
                cellNamess47.PaddingLeft = 0;
                cellNamess47.PaddingLeft = 0;
                cellNamess47.PaddingTop = 20;
                cellNamess47.PaddingBottom = 20;
                cellNamess47.BorderWidthLeft = 0;
                cellNamess47.BorderWidthRight = 0.9f;
                cellNamess47.BorderWidthTop = 0.5f;
                cellNamess47.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNamess47);

                PdfPCell cellNamess48 = new PdfPCell(new Phrase("Age and Sex ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess48.HorizontalAlignment = 1;
                cellNamess48.Colspan = 0;
                cellNamess48.Border = 0;
                cellNamess48.PaddingLeft = 0;
                cellNamess48.PaddingLeft = 0;
                cellNamess48.PaddingLeft = 0;
                cellNamess48.PaddingTop = 20;
                cellNamess48.PaddingBottom = 20;
                cellNamess48.BorderWidthLeft = 0;
                cellNamess48.BorderWidthRight = 0.9f;
                cellNamess48.BorderWidthTop = 0.5f;
                cellNamess48.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNamess48);

                PdfPCell cellNamess49 = new PdfPCell(new Phrase("Father's/husband's name", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess49.HorizontalAlignment = 1;
                cellNamess49.Colspan = 0;
                cellNamess49.Border = 0;
                cellNamess49.PaddingLeft = 0;
                cellNamess49.PaddingLeft = 0;
                cellNamess49.PaddingLeft = 0;
                cellNamess49.PaddingTop = 20;
                cellNamess49.PaddingBottom = 20;
                cellNamess49.BorderWidthLeft = 0;
                cellNamess49.BorderWidthRight = 0.9f;
                cellNamess49.BorderWidthTop = 0.5f;
                cellNamess49.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNamess49);

                PdfPCell cellNamess50 = new PdfPCell(new Phrase("Nature of employment/ Designation ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess50.HorizontalAlignment = 1;
                cellNamess50.Colspan = 0;
                cellNamess50.Border = 0;
                cellNamess50.PaddingLeft = 0;
                cellNamess50.PaddingLeft = 0;
                cellNamess50.PaddingLeft = 0;
                cellNamess50.PaddingTop = 20;
                cellNamess50.PaddingBottom = 20;
                cellNamess50.BorderWidthLeft = 0;
                cellNamess50.BorderWidthRight = 0.9f;
                cellNamess50.BorderWidthTop = 0.5f;
                cellNamess50.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNamess50);

                PdfPCell cellNamess51 = new PdfPCell(new Phrase("Permanent Home Address of workman (Village and Tahsil/Taluk and District", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess51.HorizontalAlignment = 1;
                cellNamess51.Colspan = 0;
                cellNamess51.Border = 0;
                cellNamess51.PaddingLeft = 0;
                cellNamess51.PaddingLeft = 0;
                cellNamess51.PaddingLeft = 0;
                cellNamess51.PaddingTop = 20;
                cellNamess51.PaddingBottom = 20;
                cellNamess51.BorderWidthLeft = 0;
                cellNamess51.BorderWidthRight = 0.9f;
                cellNamess51.BorderWidthTop = 0.5f;
                cellNamess51.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNamess51);

                PdfPCell cellNamess52 = new PdfPCell(new Phrase("Local Address", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess52.HorizontalAlignment = 1;
                cellNamess52.Colspan = 0;
                cellNamess52.Border = 0;
                cellNamess52.PaddingLeft = 0;
                cellNamess52.PaddingLeft = 0;
                cellNamess52.PaddingLeft = 0;
                cellNamess52.PaddingTop = 20;
                cellNamess52.PaddingBottom = 20;
                cellNamess52.BorderWidthLeft = 0;
                cellNamess52.BorderWidthRight = 0.9f;
                cellNamess52.BorderWidthTop = 0.5f;
                cellNamess52.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNamess52);

                PdfPCell cellNamess53 = new PdfPCell(new Phrase("Date of commencement of employment", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess53.HorizontalAlignment = 1;
                cellNamess53.Colspan = 0;
                cellNamess53.Border = 0;
                cellNamess53.PaddingLeft = 0;
                cellNamess53.PaddingLeft = 0;
                cellNamess53.PaddingLeft = 0;
                cellNamess53.PaddingTop = 20;
                cellNamess53.PaddingBottom = 20;
                cellNamess53.BorderWidthLeft = 0;
                cellNamess53.BorderWidthRight = 0.9f;
                cellNamess53.BorderWidthTop = 0.5f;
                cellNamess53.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNamess53);

                PdfPCell cellNamess54 = new PdfPCell(new Phrase("Signature or thumb impression of workman", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess54.HorizontalAlignment = 1;
                cellNamess54.Colspan = 0;
                cellNamess54.Border = 0;
                cellNamess54.PaddingLeft = 0;
                cellNamess54.PaddingLeft = 0;
                cellNamess54.PaddingLeft = 0;
                cellNamess54.PaddingTop = 20;
                cellNamess54.PaddingBottom = 20;
                cellNamess54.BorderWidthLeft = 0;
                cellNamess54.BorderWidthRight = 0.9f;
                cellNamess54.BorderWidthTop = 0.5f;
                cellNamess54.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNamess54);

                PdfPCell cellNamess55 = new PdfPCell(new Phrase("Date of termination of employment", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess55.HorizontalAlignment = 1;
                cellNamess55.Colspan = 0;
                cellNamess55.Border = 0;
                cellNamess55.PaddingLeft = 0;
                cellNamess55.PaddingTop = 20;
                cellNamess55.PaddingBottom = 20;
                cellNamess55.BorderWidthLeft = 0;
                cellNamess55.BorderWidthRight = 0.9f;
                cellNamess55.BorderWidthTop = 0.5f;
                cellNamess55.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNamess55);

                PdfPCell cellNamess56 = new PdfPCell(new Phrase("Reasons for termination", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess56.HorizontalAlignment = 1;
                cellNamess56.Colspan = 0;
                cellNamess56.Border = 0;
                cellNamess56.PaddingLeft = 0;
                cellNamess56.PaddingTop = 20;
                cellNamess56.PaddingBottom = 20;
                cellNamess56.BorderWidthLeft = 0;
                cellNamess56.BorderWidthRight = 0.9f;
                cellNamess56.BorderWidthTop = 0.5f;
                cellNamess56.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNamess56);

                PdfPCell cellNamess57 = new PdfPCell(new Phrase("Remarks", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess57.HorizontalAlignment = 1;
                cellNamess57.Colspan = 0;
                cellNamess57.Border = 0;
                cellNamess57.PaddingLeft = 0;
                cellNamess57.PaddingLeft = 0;
                cellNamess57.PaddingLeft = 0;
                cellNamess57.PaddingTop = 20;
                cellNamess57.PaddingBottom = 20;
                cellNamess57.BorderWidthLeft = 0;
                cellNamess57.BorderWidthRight = 0.9f;
                cellNamess57.BorderWidthTop = 0.5f;
                cellNamess57.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNamess57);

                PdfPCell cellssNames47 = new PdfPCell(new Phrase("  1 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellssNames47.HorizontalAlignment = 1;
                cellssNames47.Colspan = 0;
                cellssNames47.Border = 0;
                cellssNames47.PaddingLeft = 0;
                cellssNames47.PaddingLeft = 0;
                cellssNames47.PaddingTop = 10;
                cellssNames47.PaddingBottom = 10;
                cellssNames47.BorderWidthLeft = 0.9f;
                cellssNames47.BorderWidthRight = 0.9f;
                cellssNames47.BorderWidthTop = 0;
                cellssNames47.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellssNames47);

                PdfPCell cellsNamesss47 = new PdfPCell(new Phrase("  2", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNamesss47.HorizontalAlignment = 1;
                cellsNamesss47.Colspan = 0;
                cellsNamesss47.Border = 0;
                cellsNamesss47.PaddingLeft = 0;
                cellsNamesss47.PaddingTop = 10;
                cellsNamesss47.PaddingBottom = 10;
                cellsNamesss47.BorderWidthLeft = 0;
                cellsNamesss47.BorderWidthRight = 0.9f;
                cellsNamesss47.BorderWidthTop = 0;
                cellsNamesss47.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNamesss47);

                PdfPCell cellsNamess48 = new PdfPCell(new Phrase("  3 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNamess48.HorizontalAlignment = 1;
                cellsNamess48.Colspan = 0;
                cellsNamess48.Border = 0;
                cellsNamess48.PaddingLeft = 0;
                cellsNamess48.PaddingTop = 10;
                cellsNamess48.PaddingBottom = 10;
                cellsNamess48.BorderWidthLeft = 0;
                cellsNamess48.BorderWidthRight = 0.9f;
                cellsNamess48.BorderWidthTop = 0;
                cellsNamess48.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNamess48);

                PdfPCell cellsNamess49 = new PdfPCell(new Phrase("  4", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNamess49.HorizontalAlignment = 1;
                cellsNamess49.Colspan = 0;
                cellsNamess49.Border = 0;
                cellsNamess49.PaddingLeft = 0;
                cellsNamess49.PaddingTop = 10;
                cellsNamess49.PaddingBottom = 10;
                cellsNamess49.BorderWidthLeft = 0;
                cellsNamess49.BorderWidthRight = 0.9f;
                cellsNamess49.BorderWidthTop = 0;
                cellsNamess49.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNamess49);

                PdfPCell cellsNamess50 = new PdfPCell(new Phrase("  5 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNamess50.HorizontalAlignment = 1;
                cellsNamess50.Colspan = 0;
                cellsNamess50.Border = 0;
                cellsNamess50.PaddingLeft = 0;
                cellsNamess50.PaddingTop = 10;
                cellsNamess50.PaddingBottom = 10;
                cellsNamess50.BorderWidthLeft = 0;
                cellsNamess50.BorderWidthRight = 0.9f;
                cellsNamess50.BorderWidthTop = 0;
                cellsNamess50.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNamess50);

                PdfPCell cellsNamess51 = new PdfPCell(new Phrase("  6", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNamess51.HorizontalAlignment = 1;
                cellsNamess51.Colspan = 0;
                cellsNamess51.Border = 0;
                cellsNamess51.PaddingLeft = 0;
                cellsNamess51.PaddingTop = 10;
                cellsNamess51.PaddingBottom = 10;
                cellsNamess51.BorderWidthLeft = 0;
                cellsNamess51.BorderWidthRight = 0.9f;
                cellsNamess51.BorderWidthTop = 0;
                cellsNamess51.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNamess51);

                PdfPCell cellsNamess52 = new PdfPCell(new Phrase("  7 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNamess52.HorizontalAlignment = 1;
                cellsNamess52.Colspan = 0;
                cellsNamess52.Border = 0;
                cellsNamess52.PaddingLeft = 0;
                cellsNamess52.PaddingTop = 10;
                cellsNamess52.PaddingBottom = 10;
                cellsNamess52.BorderWidthLeft = 0;
                cellsNamess52.BorderWidthRight = 0.9f;
                cellsNamess52.BorderWidthTop = 0;
                cellsNamess52.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNamess52);

                PdfPCell cellsNamess53 = new PdfPCell(new Phrase("  8", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNamess53.HorizontalAlignment = 1;
                cellsNamess53.Colspan = 0;
                cellsNamess53.PaddingLeft = 0;
                cellsNamess53.PaddingTop = 10;
                cellsNamess53.BorderWidthLeft = 0;
                cellsNamess53.BorderWidthRight = 0.9f;
                cellsNamess53.BorderWidthTop = 0;
                cellsNamess53.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNamess53);

                PdfPCell cellsNamess54 = new PdfPCell(new Phrase("  9", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNamess54.HorizontalAlignment = 1;
                cellsNamess54.Colspan = 0;
                cellsNamess54.Border = 0;
                cellsNamess54.PaddingLeft = 0;
                cellsNamess54.PaddingTop = 10;
                cellsNamess54.PaddingBottom = 10;
                cellsNamess54.BorderWidthLeft = 0;
                cellsNamess54.BorderWidthRight = 0.9f;
                cellsNamess54.BorderWidthTop = 0;
                cellsNamess54.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNamess54);

                PdfPCell cellsNamess55 = new PdfPCell(new Phrase("  10", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNamess55.HorizontalAlignment = 1;
                cellsNamess55.Colspan = 0;
                cellsNamess55.Border = 0;
                cellsNamess55.PaddingLeft = 0;
                cellsNamess55.PaddingTop = 10;
                cellsNamess55.PaddingBottom = 10;
                cellsNamess55.BorderWidthLeft = 0;
                cellsNamess55.BorderWidthRight = 0.9f;
                cellsNamess55.BorderWidthTop = 0;
                cellsNamess55.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNamess55);

                PdfPCell cellsNamess56 = new PdfPCell(new Phrase("  11", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNamess56.HorizontalAlignment = 1;
                cellsNamess56.Colspan = 0;
                cellsNamess56.Border = 0;
                cellsNamess56.PaddingLeft = 0;
                cellsNamess56.PaddingTop = 10;
                cellsNamess56.PaddingBottom = 10;
                cellsNamess56.BorderWidthLeft = 0;
                cellsNamess56.BorderWidthRight = 0.9f;
                cellsNamess56.BorderWidthTop = 0;
                cellsNamess56.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNamess56);

                PdfPCell cellsNamess57 = new PdfPCell(new Phrase("  12", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNamess57.HorizontalAlignment = 1;
                cellsNamess57.Colspan = 0;
                cellsNamess57.Border = 0;
                cellsNamess57.PaddingLeft = 0;
                cellsNamess57.PaddingTop = 10;
                cellsNamess57.PaddingBottom = 10;
                cellsNamess57.BorderWidthLeft = 0;
                cellsNamess57.BorderWidthRight = 0.9f;
                cellsNamess57.BorderWidthTop = 0;
                cellsNamess57.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNamess57);

                document.Add(tablenew);

                #endregion Basic Information of the Employee

                document.NewPage();

                PdfPTable tblFingerprints = new PdfPTable(6);
                tblFingerprints.TotalWidth = 500f;
                tblFingerprints.LockedWidth = true;
                float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                tblFingerprints.SetWidths(widthfinger);


                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }



            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;

            }
        }

        protected void BtnformXX_Click(object sender, EventArgs e)
        {




            int Fontsize = 13;
            string fontsyle = "verdana";

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";

            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string relationoccupation = "";
            string relationresidence = "";
            string relationplace = "";
            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Father' ";
            DataTable dtfather = config.ExecuteAdaptorAsyncWithQueryParams(query).Result;

            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }
            string query1 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Mother' ";
            DataTable dtmother = config.ExecuteAdaptorAsyncWithQueryParams(query1).Result;

            if (dtmother.Rows.Count > 0)
            {
                Mname = dtmother.Rows[0]["RName"].ToString();
                Mage = dtmother.Rows[0]["age"].ToString();
                if (Mage == "0")
                {
                    Mage = "";
                }
                else
                {
                    Mage = dtfather.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select EmpESINo from EmpESICodes where Empid='" + txtEmpid.Text + "'  ";
            DataTable dtesi = config.ExecuteAdaptorAsyncWithQueryParams(query2).Result;
            if (dtesi.Rows.Count > 0)
            {
                Esino = dtesi.Rows[0]["EmpESINo"].ToString();

            }



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            string Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
            string EmpGender = "";

            if (Gender == "True")
            {
                EmpGender = "Male";
            }
            if (Gender == "False")
            {
                EmpGender = "Female";
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prphone = dtEmpdetails.Rows[0]["prphone"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                string fileheader2 = Idno + "" + name + "" + "BIO DATA" + " .Pdf";
                Document document = new Document(PageSize.LEGAL.Rotate());

                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");
                #region

                PdfPTable tblenew = new PdfPTable(13);
                tblenew.TotalWidth = 900f;
                tblenew.LockedWidth = true;
                float[] width = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f };
                tblenew.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 13;
                cellspace.Border = 0;
                cellspace.PaddingTop = 0;

                PdfPCell cellHead = new PdfPCell(new Phrase("Form-XX ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 1;
                cellHead.Colspan = 13;
                cellHead.Border = 0;
                tblenew.AddCell(cellHead);

                PdfPCell cellreturn12a1 = new PdfPCell(new Phrase("  REGISTER OF DEDUCTIONS FOR DAMAGE OR LOSS", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 12, Font.NORMAL, BaseColor.BLACK)));
                cellreturn12a1.HorizontalAlignment = 1;
                cellreturn12a1.Colspan = 13;
                cellreturn12a1.Border = 0;
                tblenew.AddCell(cellreturn12a1);

                PdfPCell cellRule751 = new PdfPCell(new Phrase("  [Rule 78(1)(a)(ii)]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 3, Font.BOLD, BaseColor.BLACK)));
                cellRule751.HorizontalAlignment = 1;
                cellRule751.Colspan = 13;
                cellRule751.Border = 0;
                tblenew.AddCell(cellRule751);

                tblenew.AddCell(cellspace);
                tblenew.AddCell(cellspace);

                PdfPCell cellNamess401 = new PdfPCell(new Phrase("1.Name and address of contractor...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNamess401.HorizontalAlignment = 0;
                cellNamess401.Colspan = 5;
                cellNamess401.Border = 0;
                cellNamess401.PaddingLeft = 0;
                tblenew.AddCell(cellNamess401);

                PdfPCell cellNamess431 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNamess431.HorizontalAlignment = 0;
                cellNamess431.Colspan = 3;
                cellNamess431.Border = 0;
                cellNamess431.PaddingLeft = 0;
                tblenew.AddCell(cellNamess431);

                PdfPCell cellNamess411 = new PdfPCell(new Phrase("2.Name and address of establishment in/under	which contract is carried on...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNamess411.HorizontalAlignment = 0;
                cellNamess411.Colspan = 5;
                cellNamess411.Border = 0;
                cellNamess411.PaddingLeft = 0;
                tblenew.AddCell(cellNamess411);

                tblenew.AddCell(cellspace);

                PdfPCell cellNamess421 = new PdfPCell(new Phrase("3.Nature and location of work...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNamess421.HorizontalAlignment = 0;
                cellNamess421.Colspan = 5;
                cellNamess421.Border = 0;
                cellNamess421.PaddingLeft = 0;
                tblenew.AddCell(cellNamess421);

                PdfPCell cellNamess441 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNamess441.HorizontalAlignment = 0;
                cellNamess441.Colspan = 3;
                cellNamess441.Border = 0;
                cellNamess441.PaddingLeft = 0;
                tblenew.AddCell(cellNamess441);

                PdfPCell cellNamess451 = new PdfPCell(new Phrase("4.Name and address of principal employer...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNamess451.HorizontalAlignment = 0;
                cellNamess451.Colspan = 5;
                cellNamess451.Border = 0;
                cellNamess451.PaddingLeft = 0;
                tblenew.AddCell(cellNamess451);

                tblenew.AddCell(cellspace);
                tblenew.AddCell(cellspace);
                tblenew.AddCell(cellspace);










                PdfPCell cellssNames471 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellssNames471.HorizontalAlignment = 0;
                cellssNames471.Colspan = 10;
                tblenew.AddCell(cellssNames471);

                PdfPCell cellsNamesss471 = new PdfPCell(new Phrase(" Date of recovery ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNamesss471.HorizontalAlignment = 1;
                cellsNamesss471.Colspan = 2;
                tblenew.AddCell(cellsNamesss471);



                PdfPCell cellsssNames471 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsssNames471.HorizontalAlignment = 0;
                cellsssNames471.Colspan = 1;
                tblenew.AddCell(cellsssNames471);






                PdfPCell cellNamess461 = new PdfPCell(new Phrase("Sl.No. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNamess461.HorizontalAlignment = 1;
                cellNamess461.Colspan = 0;
                tblenew.AddCell(cellNamess461);

                PdfPCell cellNamess471 = new PdfPCell(new Phrase("Name of workman", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNamess471.HorizontalAlignment = 1;
                cellNamess471.Colspan = 0;
                tblenew.AddCell(cellNamess471);

                PdfPCell cellNamess481 = new PdfPCell(new Phrase("Father's/husband's name ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNamess481.HorizontalAlignment = 1;
                cellNamess481.Colspan = 0;
                tblenew.AddCell(cellNamess481);


                PdfPCell cellNamess501 = new PdfPCell(new Phrase("Designation/Nature of employment  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNamess501.HorizontalAlignment = 1;
                cellNamess501.Colspan = 0;
                tblenew.AddCell(cellNamess501);

                PdfPCell cellNamess51 = new PdfPCell(new Phrase("Particulars of damage or loss", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNamess51.HorizontalAlignment = 1;
                cellNamess51.Colspan = 0;
                tblenew.AddCell(cellNamess51);

                PdfPCell cellNamess521 = new PdfPCell(new Phrase("Date of damage or loss", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNamess521.HorizontalAlignment = 1;
                cellNamess521.Colspan = 0;
                tblenew.AddCell(cellNamess521);

                PdfPCell cellNamess531 = new PdfPCell(new Phrase("Date of damage  showned  cause  against deduction", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNamess531.HorizontalAlignment = 1;
                cellNamess531.Colspan = 0;
                tblenew.AddCell(cellNamess531);

                PdfPCell cellNamess541 = new PdfPCell(new Phrase("Name of person in whose presence employee's explaination was heard", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNamess541.HorizontalAlignment = 1;
                cellNamess541.Colspan = 0;
                tblenew.AddCell(cellNamess541);

                PdfPCell cellNamess551 = new PdfPCell(new Phrase("Amount of  deduction imposed", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNamess551.HorizontalAlignment = 1;
                cellNamess551.Colspan = 0;
                tblenew.AddCell(cellNamess551);

                PdfPCell cellNamess561 = new PdfPCell(new Phrase("No. of instalments", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNamess561.HorizontalAlignment = 1;
                cellNamess561.Colspan = 0;
                tblenew.AddCell(cellNamess561);


                PdfPCell cellNamess5510 = new PdfPCell(new Phrase("First instalments", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNamess5510.HorizontalAlignment = 1;
                cellNamess5510.Colspan = 0;
                tblenew.AddCell(cellNamess5510);

                PdfPCell cellNamess5610 = new PdfPCell(new Phrase("Second instalments", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNamess5610.HorizontalAlignment = 1;
                cellNamess5610.Colspan = 0;
                tblenew.AddCell(cellNamess5610);

                PdfPCell cellNamess571 = new PdfPCell(new Phrase("Remarks", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNamess571.HorizontalAlignment = 1;
                cellNamess571.Colspan = 0;
                tblenew.AddCell(cellNamess571);







                PdfPCell cellssNames4710 = new PdfPCell(new Phrase("  1 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellssNames4710.HorizontalAlignment = 1;
                cellssNames4710.Colspan = 0;
                cellssNames4710.PaddingBottom = 10f;
                tblenew.AddCell(cellssNames4710);

                PdfPCell cellsNamesss4710 = new PdfPCell(new Phrase("  2", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNamesss4710.HorizontalAlignment = 1;
                cellsNamesss4710.Colspan = 0;
                cellsNamesss4710.PaddingBottom = 10f;
                tblenew.AddCell(cellsNamesss4710);

                PdfPCell cellsNamess4810 = new PdfPCell(new Phrase("  3 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNamess4810.HorizontalAlignment = 1;
                cellsNamess4810.Colspan = 0;
                cellsNamess4810.PaddingBottom = 10f;
                tblenew.AddCell(cellsNamess4810);

                PdfPCell cellsNamess491 = new PdfPCell(new Phrase("  4", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNamess491.HorizontalAlignment = 1;
                cellsNamess491.Colspan = 0;
                cellsNamess491.PaddingBottom = 10f;
                tblenew.AddCell(cellsNamess491);

                PdfPCell cellsNamess501 = new PdfPCell(new Phrase("  5 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNamess501.HorizontalAlignment = 1;
                cellsNamess501.Colspan = 0;
                cellsNamess501.PaddingBottom = 10f;
                tblenew.AddCell(cellsNamess501);

                PdfPCell cellsNamess511 = new PdfPCell(new Phrase("  6", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNamess511.HorizontalAlignment = 1;
                cellsNamess511.Colspan = 0;
                cellsNamess511.PaddingBottom = 10f;
                tblenew.AddCell(cellsNamess511);

                PdfPCell cellsNamess521 = new PdfPCell(new Phrase("  7 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNamess521.HorizontalAlignment = 1;
                cellsNamess521.Colspan = 0;
                cellsNamess521.PaddingBottom = 10f;
                tblenew.AddCell(cellsNamess521);

                PdfPCell cellsNamess531 = new PdfPCell(new Phrase("  8", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNamess531.HorizontalAlignment = 1;
                cellsNamess531.Colspan = 0;
                cellsNamess531.PaddingBottom = 10f;
                tblenew.AddCell(cellsNamess531);

                PdfPCell cellsNamess541 = new PdfPCell(new Phrase("  9", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNamess541.HorizontalAlignment = 1;
                cellsNamess541.Colspan = 0;
                cellsNamess541.PaddingBottom = 10f;
                tblenew.AddCell(cellsNamess541);

                PdfPCell cellsNamess551 = new PdfPCell(new Phrase("  10", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNamess551.HorizontalAlignment = 1;
                cellsNamess551.Colspan = 0;
                cellsNamess551.PaddingBottom = 10f;
                tblenew.AddCell(cellsNamess551);

                PdfPCell cellsNamess561 = new PdfPCell(new Phrase("  11", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNamess561.HorizontalAlignment = 1;
                cellsNamess561.Colspan = 0;
                cellsNamess561.PaddingBottom = 10f;
                tblenew.AddCell(cellsNamess561);

                PdfPCell cellsNamess571 = new PdfPCell(new Phrase("  12", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNamess571.HorizontalAlignment = 1;
                cellsNamess571.Colspan = 0;
                cellsNamess571.PaddingBottom = 10f;
                tblenew.AddCell(cellsNamess571);


                PdfPCell cellsNamess5711 = new PdfPCell(new Phrase("  13", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNamess5711.HorizontalAlignment = 1;
                cellsNamess5711.Colspan = 0;
                cellsNamess5711.PaddingBottom = 10f;
                tblenew.AddCell(cellsNamess5711);

                document.Add(tblenew);

                #endregion Basic Information of the Employee

                document.NewPage();

                PdfPTable tblFingerprints = new PdfPTable(6);
                tblFingerprints.TotalWidth = 500f;
                tblFingerprints.LockedWidth = true;
                float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                tblFingerprints.SetWidths(widthfinger);


                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }



            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;







            }
        }

        protected void BtnnformXXII_Click(object sender, EventArgs e)
        {


            int Fontsize = 13;
            string fontsyle = "verdana";

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";

            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string relationoccupation = "";
            string relationresidence = "";
            string relationplace = "";
            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Father' ";
            DataTable dtfather = config.ExecuteAdaptorAsyncWithQueryParams(query).Result;

            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }
            string query1 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Mother' ";
            DataTable dtmother = config.ExecuteAdaptorAsyncWithQueryParams(query1).Result;

            if (dtmother.Rows.Count > 0)
            {
                Mname = dtmother.Rows[0]["RName"].ToString();
                Mage = dtmother.Rows[0]["age"].ToString();
                if (Mage == "0")
                {
                    Mage = "";
                }
                else
                {
                    Mage = dtfather.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select EmpESINo from EmpESICodes where Empid='" + txtEmpid.Text + "'  ";
            DataTable dtesi = config.ExecuteAdaptorAsyncWithQueryParams(query2).Result;
            if (dtesi.Rows.Count > 0)
            {
                Esino = dtesi.Rows[0]["EmpESINo"].ToString();

            }



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            string Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
            string EmpGender = "";

            if (Gender == "True")
            {
                EmpGender = "Male";
            }
            if (Gender == "False")
            {
                EmpGender = "Female";
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prphone = dtEmpdetails.Rows[0]["prphone"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                string fileheader2 = Idno + "" + name + "" + "BIO DATA" + " .Pdf";
                Document document = new Document(PageSize.LEGAL.Rotate());

                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");
                #region

                PdfPTable tablenewc = new PdfPTable(11);
                tablenewc.TotalWidth = 900f;
                tablenewc.LockedWidth = true;
                float[] width = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, };
                tablenewc.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 11;
                cellspace.Border = 0;
                cellspace.PaddingTop = 0;

                PdfPCell cellHead = new PdfPCell(new Phrase("Form-XX ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 1;
                cellHead.Colspan = 11;
                cellHead.Border = 0;
                tablenewc.AddCell(cellHead);

                PdfPCell cellreturn12a1 = new PdfPCell(new Phrase("  REGISTER OF DEDUCTIONS FOR DAMAGE OR LOSS", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 12, Font.BOLD, BaseColor.BLACK)));
                cellreturn12a1.HorizontalAlignment = 1;
                cellreturn12a1.Colspan = 11;
                cellreturn12a1.Border = 0;
                tablenewc.AddCell(cellreturn12a1);

                PdfPCell cellRule751 = new PdfPCell(new Phrase("  [Rule 78(1)(a)(ii)]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 3, Font.BOLD, BaseColor.BLACK)));
                cellRule751.HorizontalAlignment = 1;
                cellRule751.Colspan = 11;
                cellRule751.Border = 0;
                tablenewc.AddCell(cellRule751);

                tablenewc.AddCell(cellspace);
                tablenewc.AddCell(cellspace);

                PdfPCell cellNamess401 = new PdfPCell(new Phrase("1.Name and address of contractor...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess401.HorizontalAlignment = 0;
                cellNamess401.Colspan = 4;
                cellNamess401.Border = 0;
                cellNamess401.PaddingLeft = 0;
                tablenewc.AddCell(cellNamess401);

                PdfPCell cellNamess431 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess431.HorizontalAlignment = 0;
                cellNamess431.Colspan = 2;
                cellNamess431.Border = 0;
                cellNamess431.PaddingLeft = 0;
                tablenewc.AddCell(cellNamess431);

                PdfPCell cellNamess411 = new PdfPCell(new Phrase("2.Name and address of establishment in/under	which contract is carried on...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess411.HorizontalAlignment = 0;
                cellNamess411.Colspan = 5;
                cellNamess411.Border = 0;
                cellNamess411.PaddingLeft = 0;
                tablenewc.AddCell(cellNamess411);

                tablenewc.AddCell(cellspace);

                PdfPCell cellNamess421 = new PdfPCell(new Phrase("3.Nature and location of work...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess421.HorizontalAlignment = 0;
                cellNamess421.Colspan = 4;
                cellNamess421.Border = 0;
                cellNamess421.PaddingLeft = 0;
                tablenewc.AddCell(cellNamess421);

                PdfPCell cellNamess441 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess441.HorizontalAlignment = 0;
                cellNamess441.Colspan = 2;
                cellNamess441.Border = 0;
                cellNamess441.PaddingLeft = 0;
                tablenewc.AddCell(cellNamess441);

                PdfPCell cellNamess451 = new PdfPCell(new Phrase("4.Name and address of principal employer...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess451.HorizontalAlignment = 0;
                cellNamess451.Colspan = 5;
                cellNamess451.Border = 0;
                cellNamess451.PaddingLeft = 0;
                tablenewc.AddCell(cellNamess451);

                tablenewc.AddCell(cellspace);
                tablenewc.AddCell(cellspace);
                tablenewc.AddCell(cellspace);

                PdfPCell celltable10 = new PdfPCell(new Phrase("Sl.No. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltable10.HorizontalAlignment = 1;
                celltable10.Colspan = 0;
                tablenewc.AddCell(celltable10);

                PdfPCell celltable09 = new PdfPCell(new Phrase("Name of workman", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltable09.HorizontalAlignment = 1;
                celltable09.Colspan = 0;
                tablenewc.AddCell(celltable09);

                PdfPCell celltable08 = new PdfPCell(new Phrase("Father's/husband's name ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltable08.HorizontalAlignment = 1;
                celltable08.Colspan = 0;
                tablenewc.AddCell(celltable08);


                PdfPCell celltable07 = new PdfPCell(new Phrase("Nature of employment/ Designation  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltable07.HorizontalAlignment = 1;
                celltable07.Colspan = 0;
                tablenewc.AddCell(celltable07);

                PdfPCell celltable06 = new PdfPCell(new Phrase("Wage period and wages payable", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltable06.HorizontalAlignment = 1;
                celltable06.Colspan = 0;
                tablenewc.AddCell(celltable06);

                PdfPCell celltable05 = new PdfPCell(new Phrase("Date and amount of advance given", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltable05.HorizontalAlignment = 1;
                celltable05.Colspan = 0;
                tablenewc.AddCell(celltable05);


                PdfPCell celltable11 = new PdfPCell(new Phrase("purpose (s)  for which advance made", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltable11.HorizontalAlignment = 1;
                celltable11.Colspan = 0;
                tablenewc.AddCell(celltable11);


                PdfPCell celltable04 = new PdfPCell(new Phrase("Paid by by which advance to be repaid", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltable04.HorizontalAlignment = 1;
                celltable04.Colspan = 0;
                tablenewc.AddCell(celltable04);

                PdfPCell celltable03 = new PdfPCell(new Phrase("Date and amount of each instalment repaid", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltable03.HorizontalAlignment = 1;
                celltable03.Colspan = 0;
                tablenewc.AddCell(celltable03);

                PdfPCell celltable02 = new PdfPCell(new Phrase("Date on which last  instalment was repaid", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltable02.HorizontalAlignment = 1;
                celltable02.Colspan = 0;
                tablenewc.AddCell(celltable02);

                PdfPCell celltable01 = new PdfPCell(new Phrase("Remarks", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltable01.HorizontalAlignment = 1;
                celltable01.Colspan = 0;
                tablenewc.AddCell(celltable01);

                PdfPCell celltabl11 = new PdfPCell(new Phrase("  1 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabl11.HorizontalAlignment = 1;
                celltabl11.Colspan = 0;
                celltabl11.PaddingBottom = 10f;
                tablenewc.AddCell(celltabl11);

                PdfPCell celltabl10 = new PdfPCell(new Phrase("  2", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabl10.HorizontalAlignment = 1;
                celltabl10.Colspan = 0;
                celltabl10.PaddingBottom = 10f;
                tablenewc.AddCell(celltabl10);

                PdfPCell celltabl9 = new PdfPCell(new Phrase("  3 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabl9.HorizontalAlignment = 1;
                celltabl9.Colspan = 0;
                celltabl9.PaddingBottom = 10f;
                tablenewc.AddCell(celltabl9);

                PdfPCell celltabl8 = new PdfPCell(new Phrase("  4", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabl8.HorizontalAlignment = 1;
                celltabl8.Colspan = 0;
                celltabl8.PaddingBottom = 10f;
                tablenewc.AddCell(celltabl8);

                PdfPCell celltabl7 = new PdfPCell(new Phrase("  5 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabl7.HorizontalAlignment = 1;
                celltabl7.Colspan = 0;
                celltabl7.PaddingBottom = 10f;
                tablenewc.AddCell(celltabl7);

                PdfPCell celltabl6 = new PdfPCell(new Phrase("  6", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabl6.HorizontalAlignment = 1;
                celltabl6.Colspan = 0;
                celltabl6.PaddingBottom = 10f;
                tablenewc.AddCell(celltabl6);

                PdfPCell celltabl5 = new PdfPCell(new Phrase("  7 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabl5.HorizontalAlignment = 1;
                celltabl5.Colspan = 0;
                celltabl5.PaddingBottom = 10f;
                tablenewc.AddCell(celltabl5);

                PdfPCell celltabl4 = new PdfPCell(new Phrase("  8", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabl4.HorizontalAlignment = 1;
                celltabl4.Colspan = 0;
                celltabl4.PaddingBottom = 10f;
                tablenewc.AddCell(celltabl4);

                PdfPCell celltabl3 = new PdfPCell(new Phrase("  9", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabl3.HorizontalAlignment = 1;
                celltabl3.Colspan = 0;
                celltabl3.PaddingBottom = 10f;
                tablenewc.AddCell(celltabl3);

                PdfPCell celltabl2 = new PdfPCell(new Phrase("  10", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabl2.HorizontalAlignment = 1;
                celltabl2.Colspan = 0;
                celltabl2.PaddingBottom = 10f;
                tablenewc.AddCell(celltabl2);

                PdfPCell celltabl1 = new PdfPCell(new Phrase("  11", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabl1.HorizontalAlignment = 1;
                celltabl1.Colspan = 0;
                celltabl1.PaddingBottom = 10f;
                tablenewc.AddCell(celltabl1);


                document.Add(tablenewc);

                #endregion Basic Information of the Employee

                document.NewPage();

                PdfPTable tblFingerprints = new PdfPTable(6);
                tblFingerprints.TotalWidth = 500f;
                tblFingerprints.LockedWidth = true;
                float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                tblFingerprints.SetWidths(widthfinger);


                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }



            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;

            }
        }

        protected void BtnformVA_Click(object sender, EventArgs e)
        {





            int Fontsize = 13;
            string fontsyle = "verdana";

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";

            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string relationoccupation = "";
            string relationresidence = "";
            string relationplace = "";
            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Father' ";
            DataTable dtfather = config.ExecuteAdaptorAsyncWithQueryParams(query).Result;

            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }
            string query1 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Mother' ";
            DataTable dtmother = config.ExecuteAdaptorAsyncWithQueryParams(query1).Result;

            if (dtmother.Rows.Count > 0)
            {
                Mname = dtmother.Rows[0]["RName"].ToString();
                Mage = dtmother.Rows[0]["age"].ToString();
                if (Mage == "0")
                {
                    Mage = "";
                }
                else
                {
                    Mage = dtfather.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select EmpESINo from EmpESICodes where Empid='" + txtEmpid.Text + "'  ";
            DataTable dtesi = config.ExecuteAdaptorAsyncWithQueryParams(query2).Result;
            if (dtesi.Rows.Count > 0)
            {
                Esino = dtesi.Rows[0]["EmpESINo"].ToString();

            }



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            string Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
            string EmpGender = "";

            if (Gender == "True")
            {
                EmpGender = "Male";
            }
            if (Gender == "False")
            {
                EmpGender = "Female";
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prphone = dtEmpdetails.Rows[0]["prphone"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                string fileheader2 = Idno + "" + name + "" + "BIO DATA" + " .Pdf";
                Document document = new Document(PageSize.LEGAL.Rotate());

                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");
                #region

                PdfPTable tablenewc = new PdfPTable(11);
                tablenewc.TotalWidth = 900f;
                tablenewc.LockedWidth = true;
                float[] width = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, };
                tablenewc.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 11;
                cellspace.Border = 0;
                cellspace.PaddingTop = 0;

                PdfPCell cellHead = new PdfPCell(new Phrase("Form V-A", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 1;
                cellHead.Colspan = 11;
                cellHead.Border = 0;
                tablenewc.AddCell(cellHead);

                PdfPCell cellreturn12a1 = new PdfPCell(new Phrase("    APPLICATION FOR ADJUSTMENT OF SECURITY DEPOSIT", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 12, Font.BOLD, BaseColor.BLACK)));
                cellreturn12a1.HorizontalAlignment = 1;
                cellreturn12a1.Colspan = 11;
                cellreturn12a1.Border = 0;
                tablenewc.AddCell(cellreturn12a1);

                PdfPCell cellRule751 = new PdfPCell(new Phrase("   [Rule 24 (1A)]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 3, Font.BOLD, BaseColor.BLACK)));
                cellRule751.HorizontalAlignment = 1;
                cellRule751.Colspan = 11;
                cellRule751.Border = 0;
                tablenewc.AddCell(cellRule751);

                tablenewc.AddCell(cellspace);
                tablenewc.AddCell(cellspace);


                PdfPCell celltables09 = new PdfPCell(new Phrase("Name and address of the contractor", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltables09.HorizontalAlignment = 1;
                celltables09.Colspan = 0;
                tablenewc.AddCell(celltables09);

                PdfPCell celltables08 = new PdfPCell(new Phrase("No. and date of license ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltables08.HorizontalAlignment = 1;
                celltables08.Colspan = 0;
                tablenewc.AddCell(celltables08);


                PdfPCell celltables07 = new PdfPCell(new Phrase("Date of expiry of previous license  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltables07.HorizontalAlignment = 1;
                celltables07.Colspan = 0;
                tablenewc.AddCell(celltables07);

                PdfPCell celltables06 = new PdfPCell(new Phrase("Whether the license of the contractor was suspended or revoked", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltables06.HorizontalAlignment = 1;
                celltables06.Colspan = 0;
                tablenewc.AddCell(celltables06);

                PdfPCell celltables05 = new PdfPCell(new Phrase("1[No. and date of the demand draft of the security deposit in resoect of the previous license]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltables05.HorizontalAlignment = 1;
                celltables05.Colspan = 0;
                tablenewc.AddCell(celltables05);


                PdfPCell celltables11 = new PdfPCell(new Phrase("Amount of previous security deposit", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltables11.HorizontalAlignment = 1;
                celltables11.Colspan = 0;
                tablenewc.AddCell(celltables11);


                PdfPCell celltables04 = new PdfPCell(new Phrase("No. and date of the demand draft of the balance of security deposit, if any, required on the fresh contract]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltables04.HorizontalAlignment = 1;
                celltables04.Colspan = 0;
                tablenewc.AddCell(celltables04);

                PdfPCell celltables03 = new PdfPCell(new Phrase("No. and date of certificate of registration of the establishment in relation to which the new license is applied for", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltables03.HorizontalAlignment = 1;
                celltables03.Colspan = 0;
                tablenewc.AddCell(celltables03);

                PdfPCell celltables02 = new PdfPCell(new Phrase("Name and address of the principal employer", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltables02.HorizontalAlignment = 1;
                celltables02.Colspan = 0;
                tablenewc.AddCell(celltables02);



                PdfPCell celltables10 = new PdfPCell(new Phrase("Particulars of fresh contract ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltables10.HorizontalAlignment = 1;
                celltables10.Colspan = 0;
                tablenewc.AddCell(celltables10);

                PdfPCell celltables01 = new PdfPCell(new Phrase("Remarks", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltables01.HorizontalAlignment = 1;
                celltables01.Colspan = 0;
                tablenewc.AddCell(celltables01);

                PdfPCell celltabls11 = new PdfPCell(new Phrase("  1 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabls11.HorizontalAlignment = 1;
                celltabls11.Colspan = 0;
                celltabls11.PaddingBottom = 10f;
                tablenewc.AddCell(celltabls11);

                PdfPCell celltabls10 = new PdfPCell(new Phrase("  2", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabls10.HorizontalAlignment = 1;
                celltabls10.Colspan = 0;
                celltabls10.PaddingBottom = 10f;
                tablenewc.AddCell(celltabls10);

                PdfPCell celltabls9 = new PdfPCell(new Phrase("  3 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabls9.HorizontalAlignment = 1;
                celltabls9.Colspan = 0;
                celltabls9.PaddingBottom = 10f;
                tablenewc.AddCell(celltabls9);

                PdfPCell celltabls8 = new PdfPCell(new Phrase("  4", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabls8.HorizontalAlignment = 1;
                celltabls8.Colspan = 0;
                celltabls8.PaddingBottom = 10f;
                tablenewc.AddCell(celltabls8);

                PdfPCell celltabls7 = new PdfPCell(new Phrase("  5 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabls7.HorizontalAlignment = 1;
                celltabls7.Colspan = 0;
                celltabls7.PaddingBottom = 10f;
                tablenewc.AddCell(celltabls7);

                PdfPCell celltabls6 = new PdfPCell(new Phrase("  6", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabls6.HorizontalAlignment = 1;
                celltabls6.Colspan = 0;
                celltabls6.PaddingBottom = 10f;
                tablenewc.AddCell(celltabls6);

                PdfPCell celltabls5 = new PdfPCell(new Phrase("  7 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabls5.HorizontalAlignment = 1;
                celltabls5.Colspan = 0;
                celltabls5.PaddingBottom = 10f;
                tablenewc.AddCell(celltabls5);

                PdfPCell celltabls4 = new PdfPCell(new Phrase("  8", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabls4.HorizontalAlignment = 1;
                celltabls4.Colspan = 0;
                celltabls4.PaddingBottom = 10f;
                tablenewc.AddCell(celltabls4);

                PdfPCell celltabls3 = new PdfPCell(new Phrase("  9", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabls3.HorizontalAlignment = 1;
                celltabls3.Colspan = 0;
                celltabls3.PaddingBottom = 10f;
                tablenewc.AddCell(celltabls3);

                PdfPCell celltabls2 = new PdfPCell(new Phrase("  10", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabls2.HorizontalAlignment = 1;
                celltabls2.Colspan = 0;
                celltabls2.PaddingBottom = 10f;
                tablenewc.AddCell(celltabls2);

                PdfPCell celltabls1 = new PdfPCell(new Phrase("  11", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabls1.HorizontalAlignment = 1;
                celltabls1.Colspan = 0;
                celltabls1.PaddingBottom = 10f;
                tablenewc.AddCell(celltabls1);

                tablenewc.AddCell(cellspace);
                tablenewc.AddCell(cellspace);
                tablenewc.AddCell(cellspace);
                tablenewc.AddCell(cellspace);

                PdfPCell celltabls3s = new PdfPCell(new Phrase("Place:......................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabls3s.HorizontalAlignment = 0;
                celltabls3s.Colspan = 11;
                celltabls3s.Border = 0;
                tablenewc.AddCell(celltabls3s);

                PdfPCell celltabls2s = new PdfPCell(new Phrase("Date:........................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabls2s.HorizontalAlignment = 0;
                celltabls2s.Colspan = 5;
                celltabls2s.Border = 0;
                tablenewc.AddCell(celltabls2s);

                PdfPCell celltabls1s = new PdfPCell(new Phrase(" Signature of the Applicant", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabls1s.HorizontalAlignment = 1;
                celltabls1s.Colspan = 6;
                celltabls1s.Border = 0;
                tablenewc.AddCell(celltabls1s);



                document.Add(tablenewc);

                #endregion Basic Information of the Employee

                document.NewPage();

                PdfPTable tblFingerprints = new PdfPTable(6);
                tblFingerprints.TotalWidth = 500f;
                tblFingerprints.LockedWidth = true;
                float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                tblFingerprints.SetWidths(widthfinger);


                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }



            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;


            }
        }

        protected void BtnformX_Click(object sender, EventArgs e)
        {



            int Fontsize = 13;
            string fontsyle = "verdana";

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";

            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string relationoccupation = "";
            string relationresidence = "";
            string relationplace = "";
            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Father' ";
            DataTable dtfather = config.ExecuteAdaptorAsyncWithQueryParams(query).Result;

            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }
            string query1 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Mother' ";
            DataTable dtmother = config.ExecuteAdaptorAsyncWithQueryParams(query1).Result;

            if (dtmother.Rows.Count > 0)
            {
                Mname = dtmother.Rows[0]["RName"].ToString();
                Mage = dtmother.Rows[0]["age"].ToString();
                if (Mage == "0")
                {
                    Mage = "";
                }
                else
                {
                    Mage = dtfather.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select EmpESINo from EmpESICodes where Empid='" + txtEmpid.Text + "'  ";
            DataTable dtesi = config.ExecuteAdaptorAsyncWithQueryParams(query2).Result;
            if (dtesi.Rows.Count > 0)
            {
                Esino = dtesi.Rows[0]["EmpESINo"].ToString();

            }



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            string Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
            string EmpGender = "";

            if (Gender == "True")
            {
                EmpGender = "Male";
            }
            if (Gender == "False")
            {
                EmpGender = "Female";
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prphone = dtEmpdetails.Rows[0]["prphone"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                string fileheader2 = Idno + "" + name + "" + "BIO DATA" + " .Pdf";

                Document document = new Document(PageSize.LEGAL);
                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");
                #region

                PdfPTable tablesnewone = new PdfPTable(12);
                tablesnewone.TotalWidth = 500f;
                tablesnewone.LockedWidth = true;
                float[] width = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f };
                tablesnewone.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 12;
                cellspace.Border = 0;
                cellspace.PaddingTop = -5;

                PdfPCell cellHead = new PdfPCell(new Phrase("FORM-X  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 1;
                cellHead.Colspan = 12;
                cellHead.Border = 0;

                tablesnewone.AddCell(cellHead);

                PdfPCell cellTEMPORARY = new PdfPCell(new Phrase("APPLICATION FOR TEMPORARY LICENSE", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 13, Font.BOLD, BaseColor.BLACK)));
                cellTEMPORARY.HorizontalAlignment = 1;
                cellTEMPORARY.Colspan = 12;
                cellTEMPORARY.Border = 0;

                tablesnewone.AddCell(cellTEMPORARY);

                PdfPCell cellRule32 = new PdfPCell(new Phrase("[Rule 32 (2)]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellRule32.HorizontalAlignment = 1;
                cellRule32.Colspan = 12;
                cellRule32.Border = 0;
                tablesnewone.AddCell(cellRule32);

                tablesnewone.AddCell(cellspace);
                tablesnewone.AddCell(cellspace);

                PdfPCell celldocument16 = new PdfPCell(new Phrase("1.  Name and address of the contractor (including his father's name in case of individuals).", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldocument16.HorizontalAlignment = 0;
                celldocument16.Colspan = 12;
                celldocument16.Border = 0;
                tablesnewone.AddCell(celldocument16);

                tablesnewone.AddCell(cellspace);

                PdfPCell celldocument15 = new PdfPCell(new Phrase("2.  Date of birth and age (in case of individuals). ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldocument15.HorizontalAlignment = 0;
                celldocument15.Colspan = 12;
                celldocument15.Border = 0;
                tablesnewone.AddCell(celldocument15);

                tablesnewone.AddCell(cellspace);

                PdfPCell celldocument14 = new PdfPCell(new Phrase("3.  Particulars of Establishment where contract labour is to be employed-", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldocument14.HorizontalAlignment = 0;
                celldocument14.Colspan = 12;
                celldocument14.Border = 0;
                tablesnewone.AddCell(celldocument14);

                tablesnewone.AddCell(cellspace);

                PdfPCell celldocument13 = new PdfPCell(new Phrase("    (a) Name and address of the establishment..", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldocument13.HorizontalAlignment = 0;
                celldocument13.Colspan = 12;
                celldocument13.Border = 0;
                tablesnewone.AddCell(celldocument13);

                PdfPCell celldocument12 = new PdfPCell(new Phrase("    (b) Type of business, trade, industry, manufacture or occupation, which is   carried on in the establishment.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldocument12.HorizontalAlignment = 0;
                celldocument12.Colspan = 12;
                celldocument12.Border = 0;
                tablesnewone.AddCell(celldocument12);



                PdfPCell celldocument11 = new PdfPCell(new Phrase("     (c) Name and address of the Principal Employer.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldocument11.HorizontalAlignment = 0;
                celldocument11.Colspan = 12;
                celldocument11.Border = 0;
                celldocument11.PaddingLeft = 0;
                tablesnewone.AddCell(celldocument11);
                tablesnewone.AddCell(cellspace);

                PdfPCell celldocument10 = new PdfPCell(new Phrase("4.  Particulars of contract labour-", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldocument10.HorizontalAlignment = 0;
                celldocument10.Colspan = 12;
                celldocument10.Border = 0;
                celldocument10.PaddingLeft = 0;
                tablesnewone.AddCell(celldocument10);

                tablesnewone.AddCell(cellspace);

                PdfPCell celldocument9 = new PdfPCell(new Phrase("     (a) Nature of work in which contract labour is employed or is to be employed in the establishment.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldocument9.HorizontalAlignment = 0;
                celldocument9.Colspan = 12;
                celldocument9.Border = 0;
                celldocument9.PaddingLeft = 0;
                tablesnewone.AddCell(celldocument9);

                PdfPCell celldocument8 = new PdfPCell(new Phrase("     (b) Duration of the proposed contract work (give particulars of proposed date  of commencing and ending).", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldocument8.HorizontalAlignment = 0;
                celldocument8.Colspan = 12;
                celldocument8.Border = 0;
                celldocument8.PaddingLeft = 0;
                tablesnewone.AddCell(celldocument8);

                PdfPCell celldocument7 = new PdfPCell(new Phrase("     (c) Name and address of the Agent or Manager of Contractor at the work site.  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldocument7.HorizontalAlignment = 0;
                celldocument7.Colspan = 12;
                celldocument7.Border = 0;
                celldocument7.PaddingLeft = 0;
                tablesnewone.AddCell(celldocument7);

                tablesnewone.AddCell(cellspace);

                PdfPCell celldocument6 = new PdfPCell(new Phrase("     (d) Maximum number of contract labour proposed to be employed in the establishment on any date.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldocument6.HorizontalAlignment = 0;
                celldocument6.Colspan = 12;
                celldocument6.Border = 0;
                celldocument6.PaddingLeft = 0;
                tablesnewone.AddCell(celldocument6);

                tablesnewone.AddCell(cellspace);

                PdfPCell celldocument5 = new PdfPCell(new Phrase("5.  Whether the contractor was convicted of any offence within the preceding five years.  If so, give details.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldocument5.HorizontalAlignment = 0;
                celldocument5.Colspan = 12;
                celldocument5.Border = 0;
                celldocument5.PaddingLeft = 0;
                tablesnewone.AddCell(celldocument5);

                tablesnewone.AddCell(cellspace);

                PdfPCell celldocument4 = new PdfPCell(new Phrase("6.  Whether there was any order against the contractor revoking or suspending license or forfeiting security deposits in respect of an earlier contract.  If so, the date of such order.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldocument4.HorizontalAlignment = 0;
                celldocument4.Colspan = 12;
                celldocument4.Border = 0;
                celldocument4.PaddingLeft = 0;
                tablesnewone.AddCell(celldocument4);

                tablesnewone.AddCell(cellspace);
                PdfPCell celldocument3 = new PdfPCell(new Phrase("7.  Whether contractor has worked in any other establishment within the past five years. If so, give details of the Principal Employer, establishments, and nature of work.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldocument3.HorizontalAlignment = 0;
                celldocument3.Colspan = 12;
                celldocument3.Border = 0;
                celldocument3.PaddingLeft = 0;
                tablesnewone.AddCell(celldocument3);

                tablesnewone.AddCell(cellspace);

                PdfPCell celldocument2 = new PdfPCell(new Phrase("8.  1[Amount of license fee paid-name of the Union Bank demand draft No. and date].", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldocument2.HorizontalAlignment = 0;
                celldocument2.Colspan = 12;
                celldocument2.Border = 0;
                celldocument2.PaddingLeft = 0;
                tablesnewone.AddCell(celldocument2);

                tablesnewone.AddCell(cellspace);

                PdfPCell celldocument1 = new PdfPCell(new Phrase("9.  2[Amount of security deposit-name of the Union Bank demand draft No. and date.  Date of the receipt of the application with demand draft for fees/security deposits.]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldocument1.HorizontalAlignment = 0;
                celldocument1.Colspan = 12;
                celldocument1.Border = 0;
                celldocument1.PaddingLeft = 0;
                tablesnewone.AddCell(celldocument1);

                tablesnewone.AddCell(cellspace);
                tablesnewone.AddCell(cellspace);
                tablesnewone.AddCell(cellspace);
                tablesnewone.AddCell(cellspace);
                tablesnewone.AddCell(cellspace);
                tablesnewone.AddCell(cellspace);

                PdfPCell cellPl = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellPl.HorizontalAlignment = 0;
                cellPl.Colspan = 6;
                cellPl.Border = 0;
                cellPl.PaddingLeft = 0;
                tablesnewone.AddCell(cellPl);

                PdfPCell cellapp = new PdfPCell(new Phrase("Signature of the Applicant(contractor) ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellapp.HorizontalAlignment = 0;
                cellapp.Colspan = 6;
                cellapp.Border = 0;
                cellapp.PaddingLeft = 0;
                tablesnewone.AddCell(cellapp);

                tablesnewone.AddCell(cellspace);

                PdfPCell cellnewPlace = new PdfPCell(new Phrase("Place:…………………….. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellnewPlace.HorizontalAlignment = 0;
                cellnewPlace.Colspan = 12;
                cellnewPlace.Border = 0;
                cellnewPlace.PaddingLeft = 0;
                tablesnewone.AddCell(cellnewPlace);

                PdfPCell cellnewdate = new PdfPCell(new Phrase("Date:…………………….. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellnewdate.HorizontalAlignment = 0;
                cellnewdate.Colspan = 12;
                cellnewdate.Border = 0;
                cellnewdate.PaddingLeft = 0;
                tablesnewone.AddCell(cellnewdate);

                tablesnewone.AddCell(cellspace);
                tablesnewone.AddCell(cellspace);

                PdfPCell cellapplications1 = new PdfPCell(new Phrase("  (To be filled in the office of the Licensing Officer) Date of receipt of the application with challan for fees....................security deposit.................... ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellapplications1.HorizontalAlignment = 0;
                cellapplications1.Colspan = 12;
                cellapplications1.Border = 0;
                tablesnewone.AddCell(cellapplications1);

                tablesnewone.AddCell(cellspace);
                tablesnewone.AddCell(cellspace);
                tablesnewone.AddCell(cellspace);
                tablesnewone.AddCell(cellspace);
                tablesnewone.AddCell(cellspace);
                tablesnewone.AddCell(cellspace);

                PdfPCell cellPl1 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellPl1.HorizontalAlignment = 0;
                cellPl1.Colspan = 6;
                cellPl1.Border = 0;
                cellPl1.PaddingLeft = 0;
                tablesnewone.AddCell(cellPl1);

                PdfPCell celltheLicensing1 = new PdfPCell(new Phrase("   Signature of the Licensing officer", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltheLicensing1.HorizontalAlignment = 0;
                celltheLicensing1.Colspan = 6;
                celltheLicensing1.Border = 0;
                celltheLicensing1.PaddingLeft = 0;
                tablesnewone.AddCell(celltheLicensing1);

                tablesnewone.AddCell(cellspace);
                tablesnewone.AddCell(cellspace);

                document.Add(tablesnewone);

                #endregion Basic Information of the Employee

                document.NewPage();

                PdfPTable tblFingerprints = new PdfPTable(6);
                tblFingerprints.TotalWidth = 500f;
                tblFingerprints.LockedWidth = true;
                float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                tblFingerprints.SetWidths(widthfinger);

                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();
            }

            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;
            }
        }

        protected void Btnform9_Click(object sender, EventArgs e)
        {



            int Fontsize = 13;
            string fontsyle = "verdana";

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";

            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string relationoccupation = "";
            string relationresidence = "";
            string relationplace = "";
            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Father' ";
            DataTable dtfather = config.ExecuteAdaptorAsyncWithQueryParams(query).Result;

            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }
            string query1 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Mother' ";
            DataTable dtmother = config.ExecuteAdaptorAsyncWithQueryParams(query1).Result;

            if (dtmother.Rows.Count > 0)
            {
                Mname = dtmother.Rows[0]["RName"].ToString();
                Mage = dtmother.Rows[0]["age"].ToString();
                if (Mage == "0")
                {
                    Mage = "";
                }
                else
                {
                    Mage = dtfather.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select EmpESINo from EmpESICodes where Empid='" + txtEmpid.Text + "'  ";
            DataTable dtesi = config.ExecuteAdaptorAsyncWithQueryParams(query2).Result;
            if (dtesi.Rows.Count > 0)
            {
                Esino = dtesi.Rows[0]["EmpESINo"].ToString();

            }



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            string Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
            string EmpGender = "";

            if (Gender == "True")
            {
                EmpGender = "Male";
            }
            if (Gender == "False")
            {
                EmpGender = "Female";
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prphone = dtEmpdetails.Rows[0]["prphone"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                string fileheader2 = Idno + "" + name + "" + "BIO DATA" + " .Pdf";
                Document document = new Document(PageSize.LEGAL.Rotate());

                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");
                #region

                PdfPTable tblenewapp1 = new PdfPTable(13);
                tblenewapp1.TotalWidth = 800f;
                tblenewapp1.LockedWidth = true;
                float[] width = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f };
                tblenewapp1.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 13;
                cellspace.Border = 0;
                cellspace.PaddingTop = 0;

                PdfPCell cellHead = new PdfPCell(new Phrase("[FORM  No. 9] ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 1;
                cellHead.Colspan = 13;
                cellHead.Border = 0;
                tblenewapp1.AddCell(cellHead);

                PdfPCell cellhelp12 = new PdfPCell(new Phrase("[See Rule 107]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 12, Font.NORMAL, BaseColor.BLACK)));
                cellhelp12.HorizontalAlignment = 1;
                cellhelp12.Colspan = 13;
                cellhelp12.Border = 0;
                tblenewapp1.AddCell(cellhelp12);

                PdfPCell cellRule107 = new PdfPCell(new Phrase("REGISTER OF OVERTIME AND PAYMENT", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 3, Font.BOLD, BaseColor.BLACK)));
                cellRule107.HorizontalAlignment = 1;
                cellRule107.Colspan = 13;
                cellRule107.Border = 0;
                tblenewapp1.AddCell(cellRule107);

                tblenewapp1.AddCell(cellspace);
                tblenewapp1.AddCell(cellspace);

                PdfPCell cellhelp11 = new PdfPCell(new Phrase("Form No. 9 under Rule 107 of Karnataka Factories Rules, 1969..", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellhelp11.HorizontalAlignment = 0;
                cellhelp11.Colspan = 13;
                cellhelp11.Border = 0;
                cellhelp11.PaddingLeft = 0;
                tblenewapp1.AddCell(cellhelp11);

                PdfPCell cellhelp10 = new PdfPCell(new Phrase("Form No. XIII under Rule 78(1) (a)(iii) of Contract Labour (Regulation and Abolition) Karnataka Rules, 1974.  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellhelp10.HorizontalAlignment = 0;
                cellhelp10.Colspan = 13;
                cellhelp10.Border = 0;
                cellhelp10.PaddingLeft = 0;
                tblenewapp1.AddCell(cellhelp10);

                PdfPCell cellhelp9 = new PdfPCell(new Phrase("Form No. IV under Rule 28(2) of Karnataka Minimum Wages Rules, 1958.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellhelp9.HorizontalAlignment = 0;
                cellhelp9.Colspan = 13;
                cellhelp9.Border = 0;
                cellhelp9.PaddingLeft = 0;
                tblenewapp1.AddCell(cellhelp9);

                tblenewapp1.AddCell(cellspace);
                tblenewapp1.AddCell(cellspace);
                tblenewapp1.AddCell(cellspace);

                PdfPCell cellhep8 = new PdfPCell(new Phrase("Name and Address of the Factory/Establishment :   ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellhep8.HorizontalAlignment = 0;
                cellhep8.Colspan = 2;
                cellhep8.Border = 0;
                cellhep8.PaddingLeft = 0;
                tblenewapp1.AddCell(cellhep8);


                PdfPCell cellhelp8 = new PdfPCell(new Phrase("   ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellhelp8.HorizontalAlignment = 0;
                cellhelp8.Colspan = 2;
                cellhelp8.Border = 0;
                cellhelp8.PaddingLeft = 0;
                tblenewapp1.AddCell(cellhelp8);



                PdfPCell cellhlp8 = new PdfPCell(new Phrase("Name and Address of the Principal Employer :", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellhlp8.HorizontalAlignment = 0;
                cellhlp8.Colspan = 2;
                cellhlp8.Border = 0;
                cellhlp8.PaddingLeft = 0;
                tblenewapp1.AddCell(cellhlp8);



                PdfPCell cellhlp9 = new PdfPCell(new Phrase("   ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellhlp9.HorizontalAlignment = 0;
                cellhlp9.Colspan = 2;
                cellhlp9.Border = 0;
                cellhlp9.PaddingLeft = 0;
                tblenewapp1.AddCell(cellhlp9);



                PdfPCell cellhelp6 = new PdfPCell(new Phrase("Name and Address of the Contractor (if any) :  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellhelp6.HorizontalAlignment = 0;
                cellhelp6.Colspan = 2;
                cellhelp6.Border = 0;
                cellhelp6.PaddingLeft = 0;
                tblenewapp1.AddCell(cellhelp6);


                PdfPCell cellhelp7 = new PdfPCell(new Phrase("   ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellhelp7.HorizontalAlignment = 0;
                cellhelp7.Colspan = 1;
                cellhelp7.Border = 0;
                cellhelp7.PaddingLeft = 0;
                tblenewapp1.AddCell(cellhelp7);

                PdfPCell cellhelp5 = new PdfPCell(new Phrase("Month/Year", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellhelp5.HorizontalAlignment = 0;
                cellhelp5.Colspan = 2;
                cellhelp5.Border = 0;
                tblenewapp1.AddCell(cellhelp5);

                tblenewapp1.AddCell(cellspace);
                tblenewapp1.AddCell(cellspace);
                tblenewapp1.AddCell(cellspace);


                PdfPCell cellhelp4 = new PdfPCell(new Phrase("Place of Work :", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellhelp4.HorizontalAlignment = 0;
                cellhelp4.Colspan = 13;
                cellhelp4.Border = 0;
                cellhelp5.PaddingLeft = 150;
                tblenewapp1.AddCell(cellhelp4);

                tblenewapp1.AddCell(cellspace);

                PdfPCell cellhelp3 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellhelp3.HorizontalAlignment = 0;
                cellhelp3.Colspan = 4;
                tblenewapp1.AddCell(cellhelp3);



                PdfPCell cellhelp2 = new PdfPCell(new Phrase(" Particulars of OT Work ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellhelp2.HorizontalAlignment = 1;
                cellhelp2.Colspan = 2;
                tblenewapp1.AddCell(cellhelp2);



                PdfPCell cellhelp1 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellhelp1.HorizontalAlignment = 0;
                cellhelp1.Colspan = 7;
                tblenewapp1.AddCell(cellhelp1);






                PdfPCell cellfile13 = new PdfPCell(new Phrase("Sl.No. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellfile13.HorizontalAlignment = 1;
                cellfile13.Colspan = 0;
                tblenewapp1.AddCell(cellfile13);

                PdfPCell cellfile12 = new PdfPCell(new Phrase("Employee Name Father/Husband Name", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellfile12.HorizontalAlignment = 1;
                cellfile12.Colspan = 0;
                tblenewapp1.AddCell(cellfile12);

                PdfPCell cellfile11 = new PdfPCell(new Phrase("Sex ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellfile11.HorizontalAlignment = 1;
                cellfile11.Colspan = 0;
                tblenewapp1.AddCell(cellfile11);


                PdfPCell cellfile10 = new PdfPCell(new Phrase("Designation/Employment No.  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellfile10.HorizontalAlignment = 1;
                cellfile10.Colspan = 0;
                tblenewapp1.AddCell(cellfile10);

                PdfPCell cellfile9 = new PdfPCell(new Phrase("Date", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellfile9.HorizontalAlignment = 1;
                cellfile9.Colspan = 0;
                tblenewapp1.AddCell(cellfile9);

                PdfPCell cellfile8 = new PdfPCell(new Phrase("Hours", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellfile8.HorizontalAlignment = 1;
                cellfile8.Colspan = 0;
                tblenewapp1.AddCell(cellfile8);

                PdfPCell cellfile7 = new PdfPCell(new Phrase("Normal rate of wages per hour", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellfile7.HorizontalAlignment = 1;
                cellfile7.Colspan = 0;
                tblenewapp1.AddCell(cellfile7);

                PdfPCell cellfile6 = new PdfPCell(new Phrase("Overtime wages per hour", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellfile6.HorizontalAlignment = 1;
                cellfile6.Colspan = 0;
                tblenewapp1.AddCell(cellfile6);

                PdfPCell cellfile5 = new PdfPCell(new Phrase("Normal piece rate of wages", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellfile5.HorizontalAlignment = 1;
                cellfile5.Colspan = 0;
                tblenewapp1.AddCell(cellfile5);

                PdfPCell cellfile4 = new PdfPCell(new Phrase("OT piece rate of wages", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellfile4.HorizontalAlignment = 1;
                cellfile4.Colspan = 0;
                tblenewapp1.AddCell(cellfile4);


                PdfPCell cellfile3 = new PdfPCell(new Phrase("Total OT earnings", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellfile3.HorizontalAlignment = 1;
                cellfile3.Colspan = 0;
                tblenewapp1.AddCell(cellfile3);

                PdfPCell cellfile2 = new PdfPCell(new Phrase("Date of payment", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellfile2.HorizontalAlignment = 1;
                cellfile2.Colspan = 0;
                tblenewapp1.AddCell(cellfile2);

                PdfPCell cellfile1 = new PdfPCell(new Phrase("Signature/Thumb impression of the Employee", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellfile1.HorizontalAlignment = 1;
                cellfile1.Colspan = 0;
                tblenewapp1.AddCell(cellfile1);







                PdfPCell cellview13 = new PdfPCell(new Phrase("  1 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellview13.HorizontalAlignment = 1;
                cellview13.Colspan = 0;
                cellview13.PaddingBottom = 10f;
                tblenewapp1.AddCell(cellview13);

                PdfPCell cellview12 = new PdfPCell(new Phrase("  2", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellview12.HorizontalAlignment = 1;
                cellview12.Colspan = 0;
                cellview12.PaddingBottom = 10f;
                tblenewapp1.AddCell(cellview12);

                PdfPCell cellview11 = new PdfPCell(new Phrase("  3 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellview11.HorizontalAlignment = 1;
                cellview11.Colspan = 0;
                cellview11.PaddingBottom = 10f;
                tblenewapp1.AddCell(cellview11);

                PdfPCell cellview10 = new PdfPCell(new Phrase("  4", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellview10.HorizontalAlignment = 1;
                cellview10.Colspan = 0;
                cellview10.PaddingBottom = 10f;
                tblenewapp1.AddCell(cellview10);

                PdfPCell cellview9 = new PdfPCell(new Phrase("  5 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellview9.HorizontalAlignment = 1;
                cellview9.Colspan = 0;
                cellview9.PaddingBottom = 10f;
                tblenewapp1.AddCell(cellview9);

                PdfPCell cellview8 = new PdfPCell(new Phrase("  6", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellview8.HorizontalAlignment = 1;
                cellview8.Colspan = 0;
                cellview8.PaddingBottom = 10f;
                tblenewapp1.AddCell(cellview8);

                PdfPCell cellview7 = new PdfPCell(new Phrase("  7 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellview7.HorizontalAlignment = 1;
                cellview7.Colspan = 0;
                cellview7.PaddingBottom = 10f;
                tblenewapp1.AddCell(cellview7);

                PdfPCell cellview6 = new PdfPCell(new Phrase("  8", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellview6.HorizontalAlignment = 1;
                cellview6.Colspan = 0;
                cellview6.PaddingBottom = 10f;
                tblenewapp1.AddCell(cellview6);

                PdfPCell cellview5 = new PdfPCell(new Phrase("  9", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellview5.HorizontalAlignment = 1;
                cellview5.Colspan = 0;
                cellview5.PaddingBottom = 10f;
                tblenewapp1.AddCell(cellview5);

                PdfPCell cellview4 = new PdfPCell(new Phrase("  10", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellview4.HorizontalAlignment = 1;
                cellview4.Colspan = 0;
                cellview4.PaddingBottom = 10f;
                tblenewapp1.AddCell(cellview4);

                PdfPCell cellview3 = new PdfPCell(new Phrase("  11", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellview3.HorizontalAlignment = 1;
                cellview3.Colspan = 0;
                cellview3.PaddingBottom = 10f;
                tblenewapp1.AddCell(cellview3);

                PdfPCell cellview2 = new PdfPCell(new Phrase("  12", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellview2.HorizontalAlignment = 1;
                cellview2.Colspan = 0;
                cellview2.PaddingBottom = 10f;
                tblenewapp1.AddCell(cellview2);


                PdfPCell cellview1 = new PdfPCell(new Phrase("  13", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellview1.HorizontalAlignment = 1;
                cellview1.Colspan = 0;
                cellview1.PaddingBottom = 10f;
                tblenewapp1.AddCell(cellview1);




                PdfPCell cellsreplace13 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsreplace13.HorizontalAlignment = 1;
                cellsreplace13.Colspan = 0;
                cellsreplace13.PaddingBottom = 40f;
                tblenewapp1.AddCell(cellsreplace13);

                PdfPCell cellsreplace12 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsreplace12.HorizontalAlignment = 1;
                cellsreplace12.Colspan = 0;
                cellsreplace12.PaddingBottom = 40f;
                tblenewapp1.AddCell(cellsreplace12);

                PdfPCell cellsreplace11 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsreplace11.HorizontalAlignment = 1;
                cellsreplace11.Colspan = 0;
                cellsreplace11.PaddingBottom = 40f;
                tblenewapp1.AddCell(cellsreplace11);

                PdfPCell cellsreplace10 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsreplace10.HorizontalAlignment = 1;
                cellsreplace10.Colspan = 0;
                cellsreplace10.PaddingBottom = 40f;
                tblenewapp1.AddCell(cellsreplace10);

                PdfPCell cellsreplace9 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsreplace9.HorizontalAlignment = 1;
                cellsreplace9.Colspan = 0;
                cellsreplace9.PaddingBottom = 40f;
                tblenewapp1.AddCell(cellsreplace9);

                PdfPCell cellsreplace8 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsreplace8.HorizontalAlignment = 1;
                cellsreplace8.Colspan = 0;
                cellsreplace8.PaddingBottom = 40f;
                tblenewapp1.AddCell(cellsreplace8);

                PdfPCell cellsreplace7 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsreplace7.HorizontalAlignment = 1;
                cellsreplace7.Colspan = 0;
                cellsreplace7.PaddingBottom = 40f;
                tblenewapp1.AddCell(cellsreplace7);

                PdfPCell cellsreplace6 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsreplace6.HorizontalAlignment = 1;
                cellsreplace6.Colspan = 0;
                cellsreplace6.PaddingBottom = 40f;
                tblenewapp1.AddCell(cellsreplace6);

                PdfPCell cellsreplace5 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsreplace5.HorizontalAlignment = 1;
                cellsreplace5.Colspan = 0;
                cellsreplace5.PaddingBottom = 40f;
                tblenewapp1.AddCell(cellsreplace5);

                PdfPCell cellsreplace4 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsreplace4.HorizontalAlignment = 1;
                cellsreplace4.Colspan = 0;
                cellsreplace4.PaddingBottom = 40f;
                tblenewapp1.AddCell(cellsreplace4);

                PdfPCell cellsreplace3 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsreplace3.HorizontalAlignment = 1;
                cellsreplace3.Colspan = 0;
                cellsreplace3.PaddingBottom = 40f;
                tblenewapp1.AddCell(cellsreplace3);

                PdfPCell cellsreplace2 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsreplace2.HorizontalAlignment = 1;
                cellsreplace2.Colspan = 0;
                cellsreplace2.PaddingBottom = 40f;
                tblenewapp1.AddCell(cellsreplace2);


                PdfPCell cellsreplace1 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsreplace1.HorizontalAlignment = 1;
                cellsreplace1.Colspan = 0;
                cellsreplace1.PaddingBottom = 40f;
                tblenewapp1.AddCell(cellsreplace1);






                document.Add(tblenewapp1);

                #endregion Basic Information of the Employee

                document.NewPage();

                PdfPTable tblFingerprints = new PdfPTable(6);
                tblFingerprints.TotalWidth = 500f;
                tblFingerprints.LockedWidth = true;
                float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                tblFingerprints.SetWidths(widthfinger);


                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }


            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;

            }
        }


        protected void txtEmpid_TextChanged(object sender, EventArgs e)
        {
            GetEmpName();
        }


        protected void GetEmpName()
        {
            string Sqlqry = "select (empfname+' '+empmname+' '+emplname) as empname,EmpDesgn from empdetails where empid='" + txtEmpid.Text + "' ";
            DataTable dt = config.ExecuteAdaptorAsyncWithQueryParams(Sqlqry).Result;
            if (dt.Rows.Count > 0)
            {
                try
                {
                    txtName.Text = dt.Rows[0]["empname"].ToString();

                }
                catch (Exception ex)
                {
                    // MessageLabel.Text = ex.Message;
                }
            }
            else
            {
                // MessageLabel.Text = "There Is No Name For The Selected Employee";
            }


        }


        protected void GetEmpid()
        {

            #region  Old Code
            string Sqlqry = "select Empid from empdetails where (empfname+' '+empmname+' '+emplname)  like '" + txtName.Text + "' ";
            DataTable dt = config.ExecuteAdaptorAsyncWithQueryParams(Sqlqry).Result;
            if (dt.Rows.Count > 0)
            {
                try
                {
                    txtEmpid.Text = dt.Rows[0]["Empid"].ToString();

                }
                catch (Exception ex)
                {
                    // MessageLabel.Text = ex.Message;
                }
            }
            else
            {
                // MessageLabel.Text = "There Is No Name For The Selected Employee";
            }
            #endregion // End Old Code


        }


        protected void txtName_TextChanged(object sender, EventArgs e)
        {
            GetEmpid();
        }

        protected void btnposting_Click(object sender, EventArgs e)
        {

        }
    }
}